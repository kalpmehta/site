<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Frontend_model on KALPESH MEHTA</title>
    <link>http://localhost:1313/blog/frontend_model/</link>
    <description>Recent content in Frontend_model on KALPESH MEHTA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>k@lpe.sh (Kalpesh Mehta)</managingEditor>
    <webMaster>k@lpe.sh (Kalpesh Mehta)</webMaster>
    <copyright>Copyright © 2025 kalpesh mehta</copyright>
    <lastBuildDate>Sun, 15 Apr 2012 07:15:06 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/frontend_model/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Magento: Difference between source_model, frontend_model, backend_model</title>
      <link>http://localhost:1313/magento-difference-between-source_model-frontend_model-backend_model/</link>
      <pubDate>Sun, 15 Apr 2012 07:15:06 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-difference-between-source_model-frontend_model-backend_model/</guid>
      <description>&lt;p&gt;When dealing with Magento Admin’s system configuration, you may have encountered with these models. If you don’t know, these models are used when you add custom fields through your system.xml file at Magento’s backend configuration (Admin -&amp;gt; System -&amp;gt; Configuration).&lt;/p&gt;&#xA;&lt;p&gt;Okay, so the difference between these 3 models are:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;source_model&lt;/strong&gt;:&lt;br&gt;&#xA;It specifies a Model class, where you will be returned with options that can populate in the current field.&lt;/p&gt;&#xA;&lt;p&gt;Example,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;source_model&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;adminhtml&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;system_config_source_yesno&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;/&lt;/span&gt;source_model&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;this will populate select dropdown with values Yes/No&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>When dealing with Magento Admin’s system configuration, you may have encountered with these models. If you don’t know, these models are used when you add custom fields through your system.xml file at Magento’s backend configuration (Admin -&gt; System -&gt; Configuration).</p>
<p>Okay, so the difference between these 3 models are:</p>
<p><strong>source_model</strong>:<br>
It specifies a Model class, where you will be returned with options that can populate in the current field.</p>
<p>Example,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;</span>source_model<span style="color:#666">&gt;</span>adminhtml<span style="color:#666">/</span>system_config_source_yesno<span style="color:#666">&lt;/</span>source_model<span style="color:#666">&gt;</span></span></span></code></pre></div><br>
this will populate select dropdown with values Yes/No</p>
<p><strong>frontend_model</strong>:<br>
It specifies a Block class to add custom render to use as a frontend field type instead of/along with default frontend_type field value (text, textarea, select, etc.).</p>
<p>Example,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;frontend_type&gt;</span>button<span style="color:#008000;font-weight:bold">&lt;/frontend_type&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;frontend_model&gt;</span>MyCustomModule/button<span style="color:#008000;font-weight:bold">&lt;/frontend_model&gt;</span></span></span></code></pre></div><br>
this will keep frontend type as button, but the customized one taken from Block class Button.php of MyCustomModule module</p>
<p>Code at Button.php can be anything like this:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#a2f;font-weight:bold">class</span> <span style="color:#00f">MyNamespace_MyCustomModule_Block_Button</span> <span style="color:#a2f;font-weight:bold">extends</span> Mage_Adminhtml_Block_System_Config_Form_Field
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a2f;font-weight:bold">protected</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">_getElementHtml</span>(Varien_Data_Form_Element_Abstract <span style="color:#b8860b">$element</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">setElement</span>(<span style="color:#b8860b">$element</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$url</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getUrl</span>(‘catalog<span style="color:#666">/</span>product’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$html</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getLayout</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">createBlock</span>(‘adminhtml<span style="color:#666">/</span>widget_button’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setType</span>(‘button’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setClass</span>(‘scalable’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setLabel</span>(‘Run Now <span style="color:#666">!</span>’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setOnClick</span>(“setLocation(‘<span style="color:#b8860b">$url’</span>)”)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">toHtml</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$html</span>;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span><span style="color:#080">?&gt;</span><span style="">
</span></span></span></code></pre></div></p>
<p><strong>backend_model</strong>:<br>
Generally, when you save any form at System Configuration, the data is stored in the table core_config_data. But if your requirement is to do something prior/after the save is performed, you can do it by having _beforeSave() &amp; _afterSave() methods defined in this custom/defined class.</p>
<p>Example,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;backend_model&gt;</span>adminhtml/system_config_backend_shipping_tablerate<span style="color:#008000;font-weight:bold">&lt;/backend_model&gt;</span></span></span></code></pre></div></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
