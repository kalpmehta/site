<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Call on KALPESH MEHTA</title>
    <link>http://localhost:1313/blog/call/</link>
    <description>Recent content in Call on KALPESH MEHTA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>k@lpe.sh (Kalpesh Mehta)</managingEditor>
    <webMaster>k@lpe.sh (Kalpesh Mehta)</webMaster>
    <copyright>Copyright © 2025 kalpesh mehta</copyright>
    <lastBuildDate>Sun, 22 Jun 2014 18:16:23 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/call/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Magento: Enable logs on API calls</title>
      <link>http://localhost:1313/magento-enable-logs-on-api-calls/</link>
      <pubDate>Sun, 22 Jun 2014 18:16:23 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-enable-logs-on-api-calls/</guid>
      <description>&lt;p&gt;There is no setting to enable/disable API calls in Magento, but you can do so by modifying a file which handles all the API calls and logging the requests in a custom log file. This is useful when you know that there are many API calls being requested by third party applications to your website but not sure what is actually being called, how many times, and at what day and time.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>There is no setting to enable/disable API calls in Magento, but you can do so by modifying a file which handles all the API calls and logging the requests in a custom log file. This is useful when you know that there are many API calls being requested by third party applications to your website but not sure what is actually being called, how many times, and at what day and time.</p>
<p>With that said, open the file: app/code/core/Mage/Api/Model/Server/Handler/Abstract.php<br>
and find the function “call” which handles all the API calls. Scroll down the function and find the if block which says:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> (method_exists(<span style="color:#b8860b">$model</span>, <span style="color:#b8860b">$method</span>)) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (isset(<span style="color:#b8860b">$methodInfo</span><span style="color:#666">-&gt;</span><span style="color:#b44">arguments</span>) <span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp; ((string)<span style="color:#b8860b">$methodInfo</span><span style="color:#666">-&gt;</span><span style="color:#b44">arguments</span>) <span style="color:#666">==</span> ‘array’) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b8860b">$method</span>((is_array(<span style="color:#b8860b">$args</span>) <span style="color:#666">?</span> <span style="color:#b8860b">$args</span> <span style="color:#666">:</span> <span style="color:#a2f;font-weight:bold">array</span>(<span style="color:#b8860b">$args</span>)));  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">elseif</span> (<span style="color:#666">!</span>is_array(<span style="color:#b8860b">$args</span>)) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b8860b">$method</span>(<span style="color:#b8860b">$args</span>);  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> call_user_func_array(<span style="color:#a2f;font-weight:bold">array</span>(<span style="color:#666">&amp;</span>amp;<span style="color:#b8860b">$model</span>, <span style="color:#b8860b">$method</span>), <span style="color:#b8860b">$args</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">throw</span> <span style="color:#a2f;font-weight:bold">new</span> Mage_Api_Exception(‘resource_path_not_callable’);  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>and replace it with:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> (method_exists(<span style="color:#b8860b">$model</span>, <span style="color:#b8860b">$method</span>)) {  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">log</span>(<span style="color:#b8860b">$method</span>, <span style="color:#a2f;font-weight:bold">null</span>, ‘api<span style="color:#666">.</span>log’); <span style="color:#080;font-style:italic">//logs the method  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> Mage<span style="color:#666">::</span><span style="color:#b44">log</span>(<span style="color:#b8860b">$args</span>, <span style="color:#a2f;font-weight:bold">null</span>, ‘api<span style="color:#666">.</span>log’); <span style="color:#080;font-style:italic">//logs the arguments  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#a2f;font-weight:bold">if</span> (isset(<span style="color:#b8860b">$methodInfo</span><span style="color:#666">-&gt;</span><span style="color:#b44">arguments</span>) <span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp; ((string)<span style="color:#b8860b">$methodInfo</span><span style="color:#666">-&gt;</span><span style="color:#b44">arguments</span>) <span style="color:#666">==</span> ‘array’) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b8860b">$method</span>((is_array(<span style="color:#b8860b">$args</span>) <span style="color:#666">?</span> <span style="color:#b8860b">$args</span> <span style="color:#666">:</span> <span style="color:#a2f;font-weight:bold">array</span>(<span style="color:#b8860b">$args</span>)));  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">elseif</span> (<span style="color:#666">!</span>is_array(<span style="color:#b8860b">$args</span>)) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b8860b">$method</span>(<span style="color:#b8860b">$args</span>);  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> call_user_func_array(<span style="color:#a2f;font-weight:bold">array</span>(<span style="color:#666">&amp;</span>amp;<span style="color:#b8860b">$model</span>, <span style="color:#b8860b">$method</span>), <span style="color:#b8860b">$args</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">throw</span> <span style="color:#a2f;font-weight:bold">new</span> Mage_Api_Exception(‘resource_path_not_callable’);  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>Now you should have your var/log/api.log file filled with the “method” and “arguments” requested by third party systems on your server. This should help you in knowing what was requested and at what time in your new log file.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
