<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Jquery on KALPESH MEHTA</title>
    <link>http://localhost:1313/blog/jquery/</link>
    <description>Recent content in Jquery on KALPESH MEHTA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>k@lpe.sh (Kalpesh Mehta)</managingEditor>
    <webMaster>k@lpe.sh (Kalpesh Mehta)</webMaster>
    <copyright>Copyright © 2025 kalpesh mehta</copyright>
    <lastBuildDate>Sat, 01 Jun 2013 22:53:39 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/jquery/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>return false vs preventDefault in javascript</title>
      <link>http://localhost:1313/return-false-vs-preventdefault-in-javascript/</link>
      <pubDate>Sat, 01 Jun 2013 22:53:39 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/return-false-vs-preventdefault-in-javascript/</guid>
      <description>&lt;p&gt;This post will help you to differentiate between javascript’s &lt;em&gt;return false&lt;/em&gt;, &lt;em&gt;preventDefault&lt;/em&gt;, &lt;em&gt;stopPropagation&lt;/em&gt; and &lt;em&gt;stopImmediatePropagation&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The first thing you learn when using javascript is to use &lt;em&gt;return false&lt;/em&gt;. That’s the best thing we think to cancel browser’s default behavior, to stop further execution of an event. If you are using a simple function which returns what you want, then probably you won’t notice anything wrong in using &lt;em&gt;return false&lt;/em&gt;. But when you want event to propagate, &lt;em&gt;return false&lt;/em&gt; will not be helpful and will give unexpected result.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>This post will help you to differentiate between javascript’s <em>return false</em>, <em>preventDefault</em>, <em>stopPropagation</em> and <em>stopImmediatePropagation</em>.</p>
<p>The first thing you learn when using javascript is to use <em>return false</em>. That’s the best thing we think to cancel browser’s default behavior, to stop further execution of an event. If you are using a simple function which returns what you want, then probably you won’t notice anything wrong in using <em>return false</em>. But when you want event to propagate, <em>return false</em> will not be helpful and will give unexpected result.</p>
<h2 id="what-is-event-propagation">What is event propagation?</h2>
<p>When a single event, such as a mouse click, if is handled by two or more event handlers defined in various location of the DOM hiearachy, then the event handling starts by executing for individual elements at the lowest level. There are two models of this event propagation, <em>event bubbling</em> and <em>event capturing</em>.</p>
<p><!-- raw HTML omitted -->Event bubbling<!-- raw HTML omitted --> is when an event has more than one event handler and event handling execution starts from <strong>bottom to top</strong> i.e. from individual links to it’s parent element (e.g. form or body or document) having it’s own event handler.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>&lt;<span style="color:#008000;font-weight:bold">form</span> <span style="color:#b44">onclick</span><span style="color:#666">=</span><span style="color:#b44">&#34;2ndEvent()&#34;</span>&gt; [  
</span></span><span style="display:flex;"><span> This is a link!  
</span></span><span style="display:flex;"><span> ](#)  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">form</span>&gt;   </span></span></code></pre></div>
<p>On clicking on the link in the above example code, first the hyperlink’s event will be handled, then form’s event will get handled, and at last body’s event will get handled. This is event bubbling, which bubble up from bottom to top.</p>
<p><!-- raw HTML omitted -->Event capturing<!-- raw HTML omitted --> is opposite to event bubbling, where event handling execution starts from <strong>top to bottom</strong>.</p>
<p>If you have such type of architecture, where there are many event handlers for an event, you should not use <em>return false</em> or atleast use it with caution. It can get you in big trouble, as it does <em>preventDefault()</em> and <em>stopPropagation()</em> both and hence never allows further execution of an event.</p>
<h2 id="preventdefault">preventDefault()</h2>
<p>It simply stops the default action of an element. Example, prevents the hyperlink from following the URL, prevents the submit button to submit the form. When you have many event handlers and you just want to prevent default event from occuring, just use <em>e.preventDefault()</em> in the top of the function definition. The reason we put <em>preventDefault()</em> in the first line of function is because, if something goes wrong in the code following the <em>preventDefault()</em>, then also it will not allow link or form to get submitted or do whatever action you want it to do. And hence the link or submit button will get submitted. It will still allow further propagation of the event.</p>
<p>Following example prevents the link from following the URL given in href attribute.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>&lt;<span style="color:#008000;font-weight:bold">div</span>&gt; [Blah](http://ka.lpe.sh/) &lt;/<span style="color:#008000;font-weight:bold">div</span>&gt; &lt;<span style="color:#008000;font-weight:bold">script</span> <span style="color:#b44">type</span><span style="color:#666">=</span><span style="color:#b44">&#34;text/javascript&#34;</span>&gt;
</span></span><span style="display:flex;"><span>      $(<span style="color:#b44">&#34;div a&#34;</span>).click(<span style="color:#a2f;font-weight:bold">function</span>(e){
</span></span><span style="display:flex;"><span>  			e.preventDefault();
</span></span><span style="display:flex;"><span>			});
</span></span><span style="display:flex;"><span>     &lt;/<span style="color:#008000;font-weight:bold">script</span>&gt;  
</span></span><span style="display:flex;"><span>   </span></span></code></pre></div></p>
<h2 id="stoppropagation">stopPropagation()</h2>
<p>



<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>&lt;<span style="color:#008000;font-weight:bold">div</span> <span style="color:#b44">onclick</span><span style="color:#666">=</span><span style="color:#b44">&#34;doSomething()&#34;</span>&gt; [Blah](#) &lt;/<span style="color:#008000;font-weight:bold">div</span>&gt;   </span></span></code></pre></div><br>
The above code has two event handlers for hyperlink. If you click on Blah, <em>doSomethingElse()</em> and then <em>doSomething()</em> will get fired.<br>
Now let’s say you want to stop the execution of div’s onclick function i.e. <em>doSomething()</em>, but you want the anchor tag’s onclick to fire when clicking on Blah, then use <em>stopPropagation()</em>.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span>$(<span style="">“</span>div a<span style="">”</span>).click(<span style="color:#a2f;font-weight:bold">function</span> (e) {  
</span></span><span style="display:flex;"><span> alert(<span style="">‘</span>Link is clicked<span style="color:#666">!</span> Sorry div will not get clicked..<span style="">’</span>);  
</span></span><span style="display:flex;"><span> e.stopPropagation();  
</span></span><span style="display:flex;"><span>});</span></span></code></pre></div></p>
<h2 id="stopimmediatepropagation">stopImmediatePropagation()</h2>
<p>If you have multiple event handlers for the event, and you want to stop all other event handlers and current event also from further executing, you should use <em>stopImmediatePropagation()</em>.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>&lt;<span style="color:#008000;font-weight:bold">div</span>&gt; [Blah](#) &lt;/<span style="color:#008000;font-weight:bold">div</span>&gt; &lt;<span style="color:#008000;font-weight:bold">script</span> <span style="color:#b44">type</span><span style="color:#666">=</span><span style="color:#b44">&#34;text/javascript&#34;</span>&gt;
</span></span><span style="display:flex;"><span>      $(<span style="color:#b44">&#34;div a&#34;</span>).click(<span style="color:#a2f;font-weight:bold">function</span> () {
</span></span><span style="display:flex;"><span>         alert(<span style="color:#b44">&#39;Hello!&#39;</span>);
</span></span><span style="display:flex;"><span>      });&lt;/<span style="color:#008000;font-weight:bold">script</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $(&#34;div a&#34;).click(function (e) { alert(&#39;Hi! You can see me&#39;); e.stopImmediatePropagation(); });
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $(&#34;div a&#34;).click(function () { alert(&#39;I will never popup :(&#39;); });   
</span></span><span style="display:flex;"><span>   </span></span></code></pre></div></p>
<p>So next time when you use <em>return false</em>, think twice do you really want return false or <em>e.preventDefault()</em> or other methods explained above will well-suited there.</p>
]]></content:encoded>
    </item>
    <item>
      <title>jQuery Prototype conflict, resolve it using noconflict</title>
      <link>http://localhost:1313/jquery-prototype-conflict-resolve-it-using-noconflict/</link>
      <pubDate>Sat, 01 Jun 2013 20:37:42 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/jquery-prototype-conflict-resolve-it-using-noconflict/</guid>
      <description>&lt;p&gt;It’s difficult to use different javascript libraries in the same page. Because they tend to create conflicts with each other’s code, and often break javascript. One such case is using jQuery and PrototypeJS libraries in the same webpage. Both prototypejs and jquery use $ as their function or variable name which causes issues, as both the libraries will get triggered with that alias.&lt;/p&gt;&#xA;&lt;p&gt;jQuery provides a method which solves this issue, so that you can use any javascript library with jQuery on the same page. This function is called &lt;a href=&#34;http://api.jquery.com/jQuery.noConflict/&#34;&gt;noConflict()&lt;/a&gt;, and it simply uses different symbol/charater(s) you provide rather than dollar ($).&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>It’s difficult to use different javascript libraries in the same page. Because they tend to create conflicts with each other’s code, and often break javascript. One such case is using jQuery and PrototypeJS libraries in the same webpage. Both prototypejs and jquery use $ as their function or variable name which causes issues, as both the libraries will get triggered with that alias.</p>
<p>jQuery provides a method which solves this issue, so that you can use any javascript library with jQuery on the same page. This function is called <a href="http://api.jquery.com/jQuery.noConflict/">noConflict()</a>, and it simply uses different symbol/charater(s) you provide rather than dollar ($).</p>
<p>Below code will help you to understand this and you can use it to resolve conflicts between different javascript libraries used when using jQuery on the same page.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#666">&lt;</span>script src<span style="color:#666">=</span><span style="color:#b44">&#34;prototype.js&#34;</span> type<span style="color:#666">=</span><span style="color:#b44">&#34;text/javascript&#34;</span><span style="color:#666">&gt;&lt;</span><span style="">/script&gt;  </span>
</span></span><span style="display:flex;"><span><span style="color:#666">&lt;</span>script src<span style="color:#666">=</span><span style="color:#b44">&#34;jquery.js&#34;</span> type<span style="color:#666">=</span><span style="color:#b44">&#34;text/javascript&#34;</span><span style="color:#666">&gt;&lt;</span><span style="">/script&gt;  </span>
</span></span><span style="display:flex;"><span><span style="color:#666">&lt;</span>script type<span style="color:#666">=</span><span style="color:#b44">&#34;text/javascript&#34;</span><span style="color:#666">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a2f;font-weight:bold">var</span> $j <span style="color:#666">=</span> jQuery.noConflict();
</span></span><span style="display:flex;"><span><span style="color:#666">&lt;</span><span style="">/script&gt;</span></span></span></code></pre></div>
<p>After using the above code, you can use jQuery as $j and PrototypeJS as $.</p>
]]></content:encoded>
    </item>
    <item>
      <title>jQuery check if checkbox is checked or not</title>
      <link>http://localhost:1313/jquery-check-if-checkbox-is-checked-or-not/</link>
      <pubDate>Wed, 29 May 2013 11:49:19 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/jquery-check-if-checkbox-is-checked-or-not/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://ka.lpe.sh/wp-content/uploads/2013/06/jquery-logo.png&#34; alt=&#34;jQuery javascript framework&#34;&gt;Using jQuery, check whether checkbox is checked or not using 4 different ways in this post.&lt;/p&gt;&#xA;&lt;p&gt;Below code relies on jQuery’s &lt;a href=&#34;http://api.jquery.com/is/&#34; title=&#34;jQuery is method&#34;&gt;is&lt;/a&gt; method to check if the checkbox is checked or not. If you want to lookup the checkbox by &lt;em&gt;class&lt;/em&gt; instead of &lt;em&gt;id&lt;/em&gt;, just replace &lt;em&gt;#yourCheckboxID&lt;/em&gt; with &lt;em&gt;.yourCheckboxClassName&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;($(&lt;span style=&#34;&#34;&gt;‘#&lt;/span&gt;yourCheckboxID&lt;span style=&#34;&#34;&gt;’&lt;/span&gt;).is(&lt;span style=&#34;&#34;&gt;‘&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;checked&lt;span style=&#34;&#34;&gt;’&lt;/span&gt;)) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//do whatever you want here, checkbox is checked  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;} &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//do whatever you want here, checkbox is NOT checked  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Other alternative to check same thing:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$(&lt;span style=&#34;&#34;&gt;‘#&lt;/span&gt;yourCheckboxID&lt;span style=&#34;&#34;&gt;’&lt;/span&gt;).change(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt;() {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;this&lt;/span&gt;.checked) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//checkbox is checked  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; } &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//checkbox is NOT checked  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;Above code is the better way and my favorite. It will simply observe the checkbox and when it’s “changed”, the above function will get triggered. Once triggered, it will check the changed object’s (checkbox) attribute “checked”. If it finds the attribute is set, then returns true otherwise returns false.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><img src="http://ka.lpe.sh/wp-content/uploads/2013/06/jquery-logo.png" alt="jQuery javascript framework">Using jQuery, check whether checkbox is checked or not using 4 different ways in this post.</p>
<p>Below code relies on jQuery’s <a href="http://api.jquery.com/is/" title="jQuery is method">is</a> method to check if the checkbox is checked or not. If you want to lookup the checkbox by <em>class</em> instead of <em>id</em>, just replace <em>#yourCheckboxID</em> with <em>.yourCheckboxClassName</em></p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span>($(<span style="">‘#</span>yourCheckboxID<span style="">’</span>).is(<span style="">‘</span><span style="color:#666">:</span>checked<span style="">’</span>)) {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//do whatever you want here, checkbox is checked  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//do whatever you want here, checkbox is NOT checked  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}</span></span></code></pre></div>
<p>Other alternative to check same thing:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span>$(<span style="">‘#</span>yourCheckboxID<span style="">’</span>).change(<span style="color:#a2f;font-weight:bold">function</span>() {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#a2f;font-weight:bold">this</span>.checked) {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//checkbox is checked  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> } <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//checkbox is NOT checked  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> }  
</span></span><span style="display:flex;"><span>});</span></span></code></pre></div><br>
Above code is the better way and my favorite. It will simply observe the checkbox and when it’s “changed”, the above function will get triggered. Once triggered, it will check the changed object’s (checkbox) attribute “checked”. If it finds the attribute is set, then returns true otherwise returns false.</p>
<p>Third way of doing it is:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span>($(<span style="">‘#</span>yourCheckboxID<span style="">’</span>).attr(<span style="">‘</span>checked<span style="">’</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//checkbox is checked  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//checkbox is NOT checked  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}</span></span></code></pre></div><br>
Above code will check the checkbox’s attribute “checked”, if present it will give true and if not present, it will give false.</p>
<p>Since jQuery 1.6, the new method has been introduced which is called <a href="http://api.jquery.com/prop/" title="jQuery prop method">prop</a>. If you are using jQuery 1.6 or above, you can use following code to check if checkbox is checked or not:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span>($(<span style="">‘#</span>yourCheckboxID<span style="">’</span>).prop(<span style="">‘</span>checked<span style="">’</span>)) {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//checkbox is checked  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//checkbox is NOT checked  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>jQuery redirect page, with javascript alternative</title>
      <link>http://localhost:1313/jquery-redirect-page-with-javascript-alternative/</link>
      <pubDate>Wed, 29 May 2013 11:31:29 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/jquery-redirect-page-with-javascript-alternative/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://ka.lpe.sh/wp-content/uploads/2013/06/jquery-logo.png&#34; alt=&#34;jQuery javascript framework&#34;&gt;jQuery redirect one page to another using the following code:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;var&lt;/span&gt; your_url &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;&#34;&gt;‘&lt;/span&gt;http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//ka.lpe.sh/’; //change this to your url  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;$(location).attr(&lt;span style=&#34;&#34;&gt;‘&lt;/span&gt;href&lt;span style=&#34;&#34;&gt;’&lt;/span&gt;,&lt;span style=&#34;&#34;&gt;’&lt;/span&gt;your_url&lt;span style=&#34;&#34;&gt;’&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Above code works to redirect page in jQuery, but javascript code is good alternative here.&lt;/p&gt;&#xA;&lt;p&gt;Using javascript to redirect your page using below code, which is better than jQuery, will do the job:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;window&lt;/span&gt;.location.replace(&lt;span style=&#34;&#34;&gt;“&lt;/span&gt;http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//ka.lpe.sh/”);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Another javascript approach which will mock as if the URL is being clicked to redirect is:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;window&lt;/span&gt;.location.href &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;&#34;&gt;“&lt;/span&gt;http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//ka.lpe.sh/”;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><img src="http://ka.lpe.sh/wp-content/uploads/2013/06/jquery-logo.png" alt="jQuery javascript framework">jQuery redirect one page to another using the following code:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">var</span> your_url <span style="color:#666">=</span> <span style="">‘</span>http<span style="color:#666">:</span><span style="color:#080;font-style:italic">//ka.lpe.sh/’; //change this to your url  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>$(location).attr(<span style="">‘</span>href<span style="">’</span>,<span style="">’</span>your_url<span style="">’</span>);</span></span></code></pre></div></p>
<p>Above code works to redirect page in jQuery, but javascript code is good alternative here.</p>
<p>Using javascript to redirect your page using below code, which is better than jQuery, will do the job:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f">window</span>.location.replace(<span style="">“</span>http<span style="color:#666">:</span><span style="color:#080;font-style:italic">//ka.lpe.sh/”);
</span></span></span></code></pre></div></p>
<p>Another javascript approach which will mock as if the URL is being clicked to redirect is:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f">window</span>.location.href <span style="color:#666">=</span> <span style="">“</span>http<span style="color:#666">:</span><span style="color:#080;font-style:italic">//ka.lpe.sh/”;
</span></span></span></code></pre></div></p>
<p>Even this will do the trick in javascript, which sets your URL in a window object and assigns it to anchor tag’s href attribute automatically:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f">window</span>.location <span style="color:#666">=</span> <span style="">“</span>http<span style="color:#666">:</span><span style="color:#080;font-style:italic">//ka.lpe.sh/”;
</span></span></span></code></pre></div></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
