<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Magento Collection to Array on KALPESH MEHTA</title>
    <link>http://localhost:1313/blog/magento-collection-to-array/</link>
    <description>Recent content in Magento Collection to Array on KALPESH MEHTA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>k@lpe.sh (Kalpesh Mehta)</managingEditor>
    <webMaster>k@lpe.sh (Kalpesh Mehta)</webMaster>
    <copyright>Copyright © 2025 kalpesh mehta</copyright>
    <lastBuildDate>Sun, 29 Jul 2012 21:10:16 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/magento-collection-to-array/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Magento, PHP: Merging/Joining two objects collections</title>
      <link>http://localhost:1313/magento-php-merging/joining-two-objects-collections/</link>
      <pubDate>Sun, 29 Jul 2012 21:10:16 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-php-merging/joining-two-objects-collections/</guid>
      <description>&lt;p&gt;It’s easy to merge two arrays with array_merge, but have you came across to merge two objects? It’s not that easy in Magento. You need to convert it to array first, merge them, and convert it to the object again to make it work. If you have two objects of different class, then it’s really difficult job to merge as both will not be compatible. If they are from similar classes or share same elements inside, then it’s not that tricky.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>It’s easy to merge two arrays with array_merge, but have you came across to merge two objects? It’s not that easy in Magento. You need to convert it to array first, merge them, and convert it to the object again to make it work. If you have two objects of different class, then it’s really difficult job to merge as both will not be compatible. If they are from similar classes or share same elements inside, then it’s not that tricky.</p>
<p>If you want to add collection2 in collection1 (in Magento), where collection1 will be a merged form of both, you can do so by:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$collection2</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$coll</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$collection1</span><span style="color:#666">-&gt;</span><span style="color:#b44">addItem</span>(<span style="color:#b8860b">$coll</span>);  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div></p>
<p>In core PHP, it’s quite easy in this way:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$merged_obj</span> <span style="color:#666">=</span> (object) array_merge( (<span style="color:#a2f;font-weight:bold">array</span>) <span style="color:#b8860b">$collection1</span>, (<span style="color:#a2f;font-weight:bold">array</span>) <span style="color:#b8860b">$collection2</span> );</span></span></code></pre></div></p>
<p>In Magento, converting collection to array is easy:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$arr</span> <span style="color:#666">=</span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">toArray</span>();</span></span></code></pre></div><br>
while vice versa is difficult as Magento doesn’t have any built-in method to do so.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
