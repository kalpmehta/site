<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Magento on KALPESH MEHTA</title>
    <link>http://localhost:1313/blog/magento/</link>
    <description>Recent content in Magento on KALPESH MEHTA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>k@lpe.sh (Kalpesh Mehta)</managingEditor>
    <webMaster>k@lpe.sh (Kalpesh Mehta)</webMaster>
    <copyright>Copyright © 2025 kalpesh mehta</copyright>
    <lastBuildDate>Sun, 28 Apr 2019 21:15:49 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/magento/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Magento Imagine Dev Exchange 2019</title>
      <link>http://localhost:1313/magento-imagine-dev-exchange-2019/</link>
      <pubDate>Sun, 28 Apr 2019 21:15:49 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-imagine-dev-exchange-2019/</guid>
      <description>&lt;p&gt;Magento Imagine 2019 is just 2 weeks away, I cannot wait any longer now! This year would be crazy for me, as I am participating in Contribution Days as a Maintainer that happens on Saturday and Sunday before the conference, and also hosting a Dev Exchange table after the conference on Wednesday. Also, this would be my first Imagine from agency side, so things would be different.&lt;/p&gt;&#xA;&lt;p&gt;As many of you know, I have advocated Magento Security for quite a while now. From submitting core security bugs to adding an entire Security topic in the Magento 2 Professional Developer Plus certification, I realized there is many more things to do. This year I am going to host Dev Exchange where I will share my security ideas and also get ideas and feedback from the community. One very important thing that we would address this year is third-party extensions security. Pablo Benitez, CTO at eBizmarts, will join me bringing in business perspective when talking about third-party extension security. Talesh Seeparsan will bring his past Dev Exchange experiences on security and help us in guiding and noting down all the ideas and feedback that we would discuss with all the participants.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento Imagine 2019 is just 2 weeks away, I cannot wait any longer now! This year would be crazy for me, as I am participating in Contribution Days as a Maintainer that happens on Saturday and Sunday before the conference, and also hosting a Dev Exchange table after the conference on Wednesday. Also, this would be my first Imagine from agency side, so things would be different.</p>
<p>As many of you know, I have advocated Magento Security for quite a while now. From submitting core security bugs to adding an entire Security topic in the Magento 2 Professional Developer Plus certification, I realized there is many more things to do. This year I am going to host Dev Exchange where I will share my security ideas and also get ideas and feedback from the community. One very important thing that we would address this year is third-party extensions security. Pablo Benitez, CTO at eBizmarts, will join me bringing in business perspective when talking about third-party extension security. Talesh Seeparsan will bring his past Dev Exchange experiences on security and help us in guiding and noting down all the ideas and feedback that we would discuss with all the participants.</p>
<p>If you are coming to Magento Imagine and would stay little late on Wednesday, please stop by our Dev Exchange table and join the conversation. Here is the topic and details we submitted for Magento Imagine Dev Exchange 2019:</p>
<blockquote>
<p>Do you have ideas to make <a href="https://twitter.com/hashtag/Magento?src=hash&amp;ref_src=twsrc%5Etfw">#Magento</a> more secure? Are you interested in participating on security-related discussion at <a href="https://twitter.com/hashtag/MagentoImagine?src=hash&amp;ref_src=twsrc%5Etfw">#MagentoImagine</a>? Then please vote/comment here (deadline 4/26) and stop by our DevExchange table <a href="https://t.co/ZNoLSwScrH">https://t.co/ZNoLSwScrH</a>. cc/ <a href="https://twitter.com/_Talesh?ref_src=twsrc%5Etfw">@_Talesh</a> @centerax <a href="https://twitter.com/FoomanNZ?ref_src=twsrc%5Etfw">@foomanNZ</a> <a href="https://twitter.com/ext_dn?ref_src=twsrc%5Etfw">@ext_dn</a> <a href="https://t.co/eGS0vF8P6R">pic.twitter.com/eGS0vF8P6R</a></p>
<p>— kalpesh.eth (@kalpmehta) <a href="https://twitter.com/kalpmehta/status/1121333572823076867?ref_src=twsrc%5Etfw">April 25, 2019</a></p></blockquote>
<!-- raw HTML omitted -->
<p><strong>Make Magento more secure</strong></p>
<p><!-- raw HTML omitted -->It’s 2019 and security is a top priority of Magento/Adobe. Every participant in the ecosystem has their part to play to keep merchant stores secure. Let us discuss current low hanging fruits in the ecosystem and share strategies/tools for managing them effectively. For each item we will outline the topic and it’s security shortcomings then begin a deeper investigation into solutions with knowledge and idea sharing before moving to the next one. This is a co-hosted panel: Kalpesh Mehta leading with deep technical security experience and Pablo Benitez bringing the experience and technical/business concerns from an extension developer for a fully rounded conversation. Special thanks to Talesh Seeparsan and Kristof Ringleff for bringing their past Dev Exchange experience around extension security.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted -->1.) Extension Developers write secure code.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted -->With the proactive and nimble approach Magento has taken to core security, many time agencies and merchants find external 3rd party extensions makers have not put in as much effort. How can we encourage their developers to take a more secure coding approach? Can Magento community maintain secure coding practices document like <a href="https://devdocs.magento.com/guides/v2.3/coding-standards/technical-guidelines.html#15-security"><!-- raw HTML omitted -->technical guidelines, security<!-- raw HTML omitted --></a>? Validate code using a tool like PHP CodeSniffer ? What solutions already exist that we can rely on? What processes already exist that we can implement?<!-- raw HTML omitted --></p>
<p>2.) Better ways to report vulnerabilities on a merchant’s site</p>
<p><!-- raw HTML omitted -->Magento has a bug bounty program to report vulnerabilities in their code and websites. If a user or security researcher finds vulnerabilities in some Magento powered web store, not owned by Magento – an Adobe company, how can they reach out to the right person on the merchant’s team? How to pass the information given the sensitive nature of the issue? Should Magento accept <a href="https://securitytxt.org/"><!-- raw HTML omitted -->security.txt standard<!-- raw HTML omitted --></a>?<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted -->3.) Code review in community submitted Pull Requests<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted -->Is Magento doing security code review when someone submits a PR to core code? What to check for when doing code reviews to identify security risks?<br>
<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted -->4.) Add Security topics in Developer certifications<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted -->Magento has already included Security topic in Magento 2 Professional Developer Plus exam. Can we ask Magento to include Security in Associate as well as Developer exam? Can it help developers learn security best practices?<br>
<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted -->All recommendations and suggestions will be documented and shared with the Magento security team and the community afterwards. Remember to keep the privacy of your client intact while discussing vulnerabilities and attacks.<!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get all items in cart</title>
      <link>http://localhost:1313/magento-get-all-items-in-cart/</link>
      <pubDate>Tue, 13 Oct 2015 21:23:50 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-all-items-in-cart/</guid>
      <description>&lt;p&gt;Magento get all the items currently in cart programatically using below code. You can place it anywhere you wish to get information, phtml or php file. Instead of &lt;strong&gt;Mage::getSingleton(‘checkout/session’)-&amp;gt;getQuote()&lt;/strong&gt; you can also use &lt;strong&gt;Mage::getSingleton(‘checkout/cart’)-&amp;gt;getQuote()&lt;/strong&gt; to get same results. If you want to see what all product information is retrieved you can use $product-&amp;gt;getData() inside the foreach loop to display in array format.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$cart&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSingleton&lt;/span&gt;(‘checkout&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;session’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getQuote&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//$cart-&amp;gt;getAllItems() to get ALL items, parent as well as child, configurable as well as it’s simple associated item  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$cart&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAllVisibleItems&lt;/span&gt;() &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$item&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$item&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getProduct&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$name&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getName&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$sku&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSku&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;If you want all the items in collection format, you can call below code instead:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$itemsCollection&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSingleton&lt;/span&gt;(‘checkout&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;cart’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getQuote&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getItemsCollection&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento get all the items currently in cart programatically using below code. You can place it anywhere you wish to get information, phtml or php file. Instead of <strong>Mage::getSingleton(‘checkout/session’)-&gt;getQuote()</strong> you can also use <strong>Mage::getSingleton(‘checkout/cart’)-&gt;getQuote()</strong> to get same results. If you want to see what all product information is retrieved you can use $product-&gt;getData() inside the foreach loop to display in array format.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$cart</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘checkout<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getQuote</span>();  
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//$cart-&gt;getAllItems() to get ALL items, parent as well as child, configurable as well as it’s simple associated item  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$cart</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAllVisibleItems</span>() <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$item</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$product</span> <span style="color:#666">=</span> <span style="color:#b8860b">$item</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProduct</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$name</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$sku</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSku</span>();  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>If you want all the items in collection format, you can call below code instead:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$itemsCollection</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘checkout<span style="color:#666">/</span>cart’)<span style="color:#666">-&gt;</span><span style="color:#b44">getQuote</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getItemsCollection</span>();</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Zipcode &#43; 4 tax calculation bug fix</title>
      <link>http://localhost:1313/magento-zipcode--4-tax-calculation-bug-fix/</link>
      <pubDate>Fri, 04 Sep 2015 05:39:10 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-zipcode--4-tax-calculation-bug-fix/</guid>
      <description>&lt;p&gt;Magento bug fix for zipcode + 4 in tax calculation&lt;/p&gt;&#xA;&lt;p&gt;Tax Calculation in Magento has a bug where customer can escape paying tax if they enter zipcode + 4 digit in USA. This is because you import 5 digit zipcodes with their tax rates in Magento admin, so if customer inputs their zipcode in zipcode+4 format their zipcode will not match with the imported one. Importing 5-digit zipcode ending in wildcard (*) does not solve this issue either.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento bug fix for zipcode + 4 in tax calculation</p>
<p>Tax Calculation in Magento has a bug where customer can escape paying tax if they enter zipcode + 4 digit in USA. This is because you import 5 digit zipcodes with their tax rates in Magento admin, so if customer inputs their zipcode in zipcode+4 format their zipcode will not match with the imported one. Importing 5-digit zipcode ending in wildcard (*) does not solve this issue either.</p>
<p>Before this fix: If zipcode 90036 collects tax, 90036-1234 does NOT collect tax.</p>
<p>You can fix this bug by adding below code in your custom module:</p>
<p>config.xml<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> …  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">&lt;global&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;models&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;tax_resource&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;rewrite&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;calculation&gt;Namespace_Module_Model_Tax_Resource_Calculation&lt;/calculation&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;/rewrite&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;/tax_resource&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;/models&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">&lt;/global&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">…</span></span></span></code></pre></div></p>
<p>Note that we are rewriting core logic of Tax Calculation. Now create folder structure in your custom module: app/code/local/Namespace/Module/Model/Tax/Resource/Calculation.php and copy below code:</p>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;?php class Namespace_Module_Model_Tax_Resource_Calculation extends Mage_Tax_Model_Resource_Calculation
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">{
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">    protected function _getRates($request)
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">    {
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">        $countryId = $request-&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">getCountryId();  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $regionId = $request-&gt;getRegionId();  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $postcode = $request-&gt;getPostcode();
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> //12 = california, 25 = iowa  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> if($countryId == ‘US’ &amp;amp;&amp;amp; in_array($regionId,array(12,25))) {  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $postcode = substr(trim($request-&gt;getPostcode()),0,5);  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $request-&gt;setPostcode($postcode);  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> }  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> return parent::_getRates($request);
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> }
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">}</span></span></span></code></pre></div>
<p>Above code will only take first 5 digits from the zipcode if the country is USA and state selected is either California or Iowa. You can change the states as per your requirement, to know what ID relates to different states you can look at the State/Province dropdown source code in checkout page.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento bug Checkout cart 500 error Redirect loops</title>
      <link>http://localhost:1313/magento-bug-checkout-cart-500-error-redirect-loops/</link>
      <pubDate>Sat, 28 Mar 2015 23:52:11 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-bug-checkout-cart-500-error-redirect-loops/</guid>
      <description>&lt;p&gt;Magento checkout cart gives 500 error and redirect loops when there is a shopping cart rule with Category condition.&lt;/p&gt;&#xA;&lt;p&gt;I found a bug in Magento which redirects shopping cart indefinitely causing it 500 internal server error. This can be a serious bug as customer will not able to shop if this happens. I noticed this happens when there is a shopping cart rule which have Category in conditions of the rule.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento checkout cart gives 500 error and redirect loops when there is a shopping cart rule with Category condition.</p>
<p>I found a bug in Magento which redirects shopping cart indefinitely causing it 500 internal server error. This can be a serious bug as customer will not able to shop if this happens. I noticed this happens when there is a shopping cart rule which have Category in conditions of the rule.</p>
<p>If total quantity equals or greater than 1 for a subselection of items in cart matching ALL of these conditions:<br>
<strong>Category</strong> is 125</p>
<p>So for example you have a shopping cart rule where you want to give some discount or free product if at least one product is chosen from specific Category, this triggers the error in frontend shopping cart. Main reason here is <strong>Category</strong> condition. If you remove category condition then the error should go away. But if you want to keep the category condition and still want Magento to handle the shopping cart promotion rule, check the code changes below:</p>
<p>To solve this I copied below file to my local<br>
app/code/core/Mage/SalesRule/Model/Rule/Condition/Product/Combine.php</p>
<p>and edited the function validate:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b44;font-style:italic">/**  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> * Validate a condition with the checking of the child value  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> * @param Varien_Object $object  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> *  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> * @return bool  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> */</span>  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">validate</span>(Varien_Object <span style="color:#b8860b">$object</span>)  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b44;font-style:italic">/** @var Mage_Catalog_Model_Product $product */</span>  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$product</span> <span style="color:#666">=</span> <span style="color:#b8860b">$object</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProduct</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span>(<span style="color:#b8860b">$product</span> instanceof Mage_Catalog_Model_Product)) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$product</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$object</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProductId</span>());  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$valid</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">parent</span><span style="color:#666">::</span><span style="color:#b44">validate</span>(<span style="color:#b8860b">$object</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">/* Kalpesh commented whole block, as it causes redirect loop and Segmentation fault in apache  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"> if (!$valid &amp;amp;&amp;amp; $product-&gt;getTypeId() == Mage_Catalog_Model_Product_Type_Configurable::TYPE_CODE) {  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"> $children = $object-&gt;getChildren();  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"> //$valid = $children &amp;amp;&amp;amp; $this-&gt;validate($children[0]); //Kalpesh commented, issue….  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"> }*/</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$valid</span>;  
</span></span><span style="display:flex;"><span> }</span></span></code></pre></div></p>
<p>Hope this helps to some troubled souls!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento EE 1.14 &amp;#8211; Broken category &amp;#038; product sitemap URLs</title>
      <link>http://localhost:1313/magento-ee-1.14-%238211-broken-category-%23038-product-sitemap-urls/</link>
      <pubDate>Sat, 28 Mar 2015 04:40:23 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-ee-1.14-%238211-broken-category-%23038-product-sitemap-urls/</guid>
      <description>&lt;p&gt;Magento EE 1.14 introduces a bug fix which apparently becomes a bug in our website. &lt;a href=&#34;http://www.magentocommerce.com/knowledge-base/entry/ee114-later-release-notes#ee114-1400fixes-other&#34;&gt;Magento EE 1.14.0.0 Release Notes&lt;/a&gt; and &lt;a href=&#34;http://www.magentocommerce.com/knowledge-base/entry/ce19-later-release-notes#ce19-1900fixes-other&#34;&gt;Magento CE 1.9.0.0 Release Notes&lt;/a&gt; lists this in it’s Bug Fixes:&lt;br&gt;&#xA;&lt;em&gt;Google Sitemap files now include the .html suffix for category and product URLs.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;We don’t have .html suffix in our category and product URLs, so we were good before this fix. But after upgrading it to latest version all the category and product URLs were having “.” (dot) at the end in XML sitemap. This is because Magento allows admin to give a custom suffix for category and product URLs for sitemap, but hardcodes “.” regardless of there are values in the above config fields or not. This allows unnecessary dots in all the URLs which can lead to 404 pages.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento EE 1.14 introduces a bug fix which apparently becomes a bug in our website. <a href="http://www.magentocommerce.com/knowledge-base/entry/ee114-later-release-notes#ee114-1400fixes-other">Magento EE 1.14.0.0 Release Notes</a> and <a href="http://www.magentocommerce.com/knowledge-base/entry/ce19-later-release-notes#ce19-1900fixes-other">Magento CE 1.9.0.0 Release Notes</a> lists this in it’s Bug Fixes:<br>
<em>Google Sitemap files now include the .html suffix for category and product URLs.</em></p>
<p>We don’t have .html suffix in our category and product URLs, so we were good before this fix. But after upgrading it to latest version all the category and product URLs were having “.” (dot) at the end in XML sitemap. This is because Magento allows admin to give a custom suffix for category and product URLs for sitemap, but hardcodes “.” regardless of there are values in the above config fields or not. This allows unnecessary dots in all the URLs which can lead to 404 pages.</p>
<p><a href="http://ka.lpe.sh/wp-content/uploads/2015/03/Screen-Shot-2015-03-27-at-9.24.08-PM.png"><img src="http://ka.lpe.sh/wp-content/uploads/2015/03/Screen-Shot-2015-03-27-at-9.24.08-PM.png" alt="Magento Category Product URL config"></a></p>
<p>Magento team have used observer to observe the events <em>sitemap_categories_generating_before</em> and <em>sitemap_products_generating_before</em> to add the suffix in the following file and functions (Notice I have commented all lines in the functions):<br>
app/code/core/Enterprise/Catalog/Model/Observer.php<br>
(copy this file to app/code/local/Enterprise/Catalog/Model/Observer.php, you may have to create directories)<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b44;font-style:italic">/**  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> * Add Seo suffix to category’s URL if doesn’t exists.  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> *  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> * @param Varien_Event_Observer $observer  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> */</span>  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">addSeoSuffixToCategoryUrl</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>)  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">/*$seoSuffix = (string) Mage::app()-&gt;getStore()-&gt;getConfig(  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"> Mage_Catalog_Helper_Category::XML_PATH_CATEGORY_URL_SUFFIX  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"> );  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"> $this-&gt;_addSuffixToUrl($observer-&gt;getCollection()-&gt;getItems(), $seoSuffix);*/</span>  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b44;font-style:italic">/**  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> * Add Seo suffix to product’s URL if doesn’t exists.  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> *  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> * @param Varien_Event_Observer $observer  
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic"> */</span>  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">addSeoSuffixToProductUrl</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>)  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">/*$seoSuffix = (string) Mage::app()-&gt;getStore()-&gt;getConfig(  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"> Mage_Catalog_Helper_Product::XML_PATH_PRODUCT_URL_SUFFIX  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"> );  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"> $this-&gt;_addSuffixToUrl($observer-&gt;getCollection()-&gt;getItems(), $seoSuffix);*/</span>  
</span></span><span style="display:flex;"><span> }</span></span></code></pre></div></p>
<p>After commenting above function’s logic and generating the Google Sitemap again (Admin &gt; Catalog &gt; Google Sitemap) everything was normal (no dot and suffix in URLs)</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Change canonical URL for particular category only</title>
      <link>http://localhost:1313/magento-change-canonical-url-for-particular-category-only/</link>
      <pubDate>Mon, 23 Mar 2015 18:46:40 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-change-canonical-url-for-particular-category-only/</guid>
      <description>&lt;p&gt;In Magento, if you want to change canonical URL for just one category or quite a few categories, and don’t want to affect rest of the canonical URLs then do the following.&lt;/p&gt;&#xA;&lt;p&gt;Note that this is helpful when you already have canonical URL in the page and want to REPLACE it with new url. If you don’t have canonical URL at all then you might want to ignore the first &lt;em&gt;action&lt;/em&gt; tag in the below code.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In Magento, if you want to change canonical URL for just one category or quite a few categories, and don’t want to affect rest of the canonical URLs then do the following.</p>
<p>Note that this is helpful when you already have canonical URL in the page and want to REPLACE it with new url. If you don’t have canonical URL at all then you might want to ignore the first <em>action</em> tag in the below code.</p>
<p>– Go to the category page you want to change canonical URL in Magento Admin<br>
– Click the tab “Custom Design”<br>
– In the Custom Layout Update textbox, paste this:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;reference</span> <span style="color:#b44">name=</span><span style="color:#b44">&#34;head&#34;</span><span style="color:#008000;font-weight:bold">&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;action</span> <span style="color:#b44">block=</span><span style="color:#b44">&#34;head&#34;</span> <span style="color:#b44">method=</span><span style="color:#b44">&#34;removeItem&#34;</span><span style="color:#008000;font-weight:bold">&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;item&gt;</span>link_rel<span style="color:#008000;font-weight:bold">&lt;/item&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;name&gt;</span>http://loca.lho.st/old-canonical-url<span style="color:#008000;font-weight:bold">&lt;/name&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/action&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;action</span> <span style="color:#b44">method=</span><span style="color:#b44">&#34;addLinkRel&#34;</span> <span style="color:#b44">translate=</span><span style="color:#b44">&#34;title&#34;</span><span style="color:#008000;font-weight:bold">&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;rel&gt;</span>canonical<span style="color:#008000;font-weight:bold">&lt;/rel&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;href&gt;</span>http://loca.lho.st/new-canonical-url<span style="color:#008000;font-weight:bold">&lt;/href&gt;</span> <span style="color:#008000;font-weight:bold">&lt;/action&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;/reference&gt;</span></span></span></code></pre></div>
<p>Change <em><a href="http://loca.lho.st/old-canonical-url">http://loca.lho.st/old-canonical-url</a></em> and <em><a href="http://loca.lho.st/new-canonical-url">http://loca.lho.st/new-canonical-url</a></em> with your desired URLs and save the category.</p>
<p>Basically first <em>action</em> tag in the code removes old canonical URL and second <em>action</em> tag adds the canonical URL with the new value you specify.</p>
<p>You may also need to clear cache.</p>
<p>HTH!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento bug: Incorrect sales order report during DST</title>
      <link>http://localhost:1313/magento-bug-incorrect-sales-order-report-during-dst/</link>
      <pubDate>Fri, 20 Mar 2015 02:49:19 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-bug-incorrect-sales-order-report-during-dst/</guid>
      <description>&lt;p&gt;Before 6 months I found a bug in Magento CE 1.9 and EE 1.13 (latest versions at that time) in Sales Order report calculation during Daylight Savings Time period. I reported it to Magento through their Bug Tracking ticket but after 6 months also there is no reply no progress on that issue. I provided all the details on how to reproduce it and also provided solution to fix the issue. The issue is not yet resolved in latest Magento versions (I have checked Enterprise Edition 1.14.1.0 which is latest stable version now) so I decided to post it online so that other developers/clients who are experiencing same issue during DST (which have started) period can fix it and fetch correct numbers.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Before 6 months I found a bug in Magento CE 1.9 and EE 1.13 (latest versions at that time) in Sales Order report calculation during Daylight Savings Time period. I reported it to Magento through their Bug Tracking ticket but after 6 months also there is no reply no progress on that issue. I provided all the details on how to reproduce it and also provided solution to fix the issue. The issue is not yet resolved in latest Magento versions (I have checked Enterprise Edition 1.14.1.0 which is latest stable version now) so I decided to post it online so that other developers/clients who are experiencing same issue during DST (which have started) period can fix it and fetch correct numbers.</p>
<p>Ticket in Magento bug tracker (you would need to login to see):<br>
<a href="http://www.magentocommerce.com/bug-tracking/issue/index/id/254">http://www.magentocommerce.com/bug-tracking/issue/index/id/254</a></p>
<p><strong>Overview of issue:</strong><br>
Sales order grid data (Admin-&gt;Sales-&gt;Orders) for certain date range is not matching with the report sales order data (Admin-&gt;Reports-&gt;Sales-&gt;Orders). There is some difference in numbers which made me drill into the Magento source code. Upon further investigation I saw Zend_Date’s set method was used without 2nd argument which took the date in wrong format messing with the totals.</p>
<p><strong>Steps to reproduce:</strong><br>
1. Login in Admin panel<br>
2. Go to Reports-&gt;Sales-&gt;Orders screen<br>
3. Filter orders for some date range which should fall in Daylight savings time.<br>
4. Notice the totals which are shown are not 100% correct.</p>
<p><strong>Expected Result:</strong><br>
The totals in Reports-&gt;Sales-&gt;Orders screen should match totals in Sales-&gt;Orders grid screen when downloading CSV from there. I have attached the issue in detail along with solution in the attached file.</p>
<p><strong>Actual Result:</strong><br>
The totals in Reports-&gt;Sales-&gt;Orders screen is not coming correct when date range filter falls in daylight savings time.</p>
<p><strong>Magento version affected:</strong><br>
It seems all CE and EE versions, I only checked CE 1.8, 1.9 and EE 1.13, 1.14</p>
<p><strong>Files Affected:</strong><br>
app/code/core/Mage/Reports/Model/Resource/Report/Abstract.php<br>
app/code/core/Mage/Reports/Model/Mysql4/Report/Abstract.php (In older magento versions using Mysql4 instead of Resource)</p>
<p><strong>Technical Details:</strong><br>
In the file app/code/core/Mage/Reports/Model/Resource/Report/Abstract.php<br>
function: _getTZOffsetTransitions<br>
line 418, $dateTimeObject-&gt;set($tr[‘time’]);</p>
<p>$dateTimeObject is object of Zend_Date() and expects parameter 2 for the date/time format<br>
<a href="http://framework.zend.com/manual/1.11/en/zend.date.basic.html#zend.date.simple.functions.set">http://framework.zend.com/manual/1.11/en/zend.date.basic.html#zend.date.simple.functions.set</a></p>
<p>After changing this line:<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $dateTimeObject-&gt;set($tr[‘time’]);</span></span></span></code></pre></div><br>
with<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $dateTimeObject-&gt;set($tr[‘time’], Varien_Date::DATETIME_INTERNAL_FORMAT);</span></span></span></code></pre></div></p>
<p>the issue was fixed and the order totals were shown correctly in Reports-&gt;Sales-&gt;Order screen.</p>
<p><strong>Important Note:</strong> After the above change it is required to re-build lifetime statistics of Orders to update database table sales_order_aggregated_created.</p>
<p>Make the change by copying the core file to your local so that future upgrade will not overwrite your fix.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get real IP address behind a proxy</title>
      <link>http://localhost:1313/magento-get-real-ip-address-behind-a-proxy/</link>
      <pubDate>Fri, 07 Nov 2014 18:48:19 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-real-ip-address-behind-a-proxy/</guid>
      <description>&lt;p&gt;Get real IP address if your server or customer is behind a proxy network. Magento have function Mage::helper(‘core/http’)-&amp;gt;getRemoteAddr(); to get client IP address, but it gives proxy IP address instead of real IP if there is proxy network in between. Below code checks and returns both real IP and proxy IP address if it founds any.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;empty&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$_SERVER&lt;/span&gt;[‘HTTP_CLIENT_IP’])) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$_SERVER&lt;/span&gt;[‘HTTP_CLIENT_IP’];  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;empty&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$_SERVER&lt;/span&gt;[‘HTTP_X_FORWARDED_FOR’])) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$ips&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; explode(‘,’, &lt;span style=&#34;color:#b8860b&#34;&gt;$_SERVER&lt;/span&gt;[‘HTTP_X_FORWARDED_FOR’]);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; trim(&lt;span style=&#34;color:#b8860b&#34;&gt;$ips&lt;/span&gt;[count(&lt;span style=&#34;color:#b8860b&#34;&gt;$ips&lt;/span&gt;) – &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;]); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//real IP address behind proxy IP  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// echo $_SERVER[‘REMOTE_ADDR’]; //proxy IP address  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;} &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$_SERVER&lt;/span&gt;[‘REMOTE_ADDR’]; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//no proxy found  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>Get real IP address if your server or customer is behind a proxy network. Magento have function Mage::helper(‘core/http’)-&gt;getRemoteAddr(); to get client IP address, but it gives proxy IP address instead of real IP if there is proxy network in between. Below code checks and returns both real IP and proxy IP address if it founds any.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$_SERVER</span>[‘HTTP_CLIENT_IP’])) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$_SERVER</span>[‘HTTP_CLIENT_IP’];  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">else</span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$_SERVER</span>[‘HTTP_X_FORWARDED_FOR’])) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$ips</span> <span style="color:#666">=</span> explode(‘,’, <span style="color:#b8860b">$_SERVER</span>[‘HTTP_X_FORWARDED_FOR’]);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> trim(<span style="color:#b8860b">$ips</span>[count(<span style="color:#b8860b">$ips</span>) – <span style="color:#666">1</span>]); <span style="color:#080;font-style:italic">//real IP address behind proxy IP  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#080;font-style:italic">// echo $_SERVER[‘REMOTE_ADDR’]; //proxy IP address  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$_SERVER</span>[‘REMOTE_ADDR’]; <span style="color:#080;font-style:italic">//no proxy found  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento error: SCP 404: GET /spp/ajax/?___SID=Uco/?id=460&amp;#038;pid=123</title>
      <link>http://localhost:1313/magento-error-scp-404-get-/spp/ajax/___siduco/id460%23038pid123/</link>
      <pubDate>Fri, 07 Nov 2014 17:51:49 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-error-scp-404-get-/spp/ajax/___siduco/id460%23038pid123/</guid>
      <description>&lt;p&gt;If you are using Magento extension Simple Configurable Product (SCP &lt;a href=&#34;http://www.magentocommerce.com/magento-connect/simple-configurable-products.html)&#34;&gt;http://www.magentocommerce.com/magento-connect/simple-configurable-products.html)&lt;/a&gt;, it gets dangerous sometimes when you have configured Special Prices or Tiered Pricing. It requests for prices via ajax after page is loaded. For some customers having old system and browser, this results in sending ___SID (session ID) along with GET request parameter, which causes double question mark in the URL.&lt;/p&gt;&#xA;&lt;p&gt;Ideally, the ajax URL should be:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; http://ma.gen.to/spp/ajax/co?id=460&amp;amp;amp;pid=123 &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If you are using Magento extension Simple Configurable Product (SCP <a href="http://www.magentocommerce.com/magento-connect/simple-configurable-products.html)">http://www.magentocommerce.com/magento-connect/simple-configurable-products.html)</a>, it gets dangerous sometimes when you have configured Special Prices or Tiered Pricing. It requests for prices via ajax after page is loaded. For some customers having old system and browser, this results in sending ___SID (session ID) along with GET request parameter, which causes double question mark in the URL.</p>
<p>Ideally, the ajax URL should be:<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plain" data-lang="plain"><span style="display:flex;"><span> http://ma.gen.to/spp/ajax/co?id=460&amp;amp;pid=123 </span></span></code></pre></div></p>
<p>where it requests to module’s AjaxController and coAction() method, with parameters id (product ID) and pid (parent ID). This should go good without any issue.</p>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plain" data-lang="plain"><span style="display:flex;"><span> http://ma.gen.to/spp/ajax/?___SID=Uco/?id=460&amp;amp;pid=123 </span></span></code></pre></div>
<p>But, ___SID=U, which is used in the cache as a placeorder, also goes along with the parameters it creates a problem. As there are two “?” in the URL, Magento will try to see for AjaxController’s indexAction() because when you don’t have anything for action part in URL, it by defaults to indexAction of the controller.</p>
<p>The problem doesn’t end in just a 404 error in error log, this also DISPLAYS whole 404 page just below the product price in product page. So, customer will get confused as there is a big 404 page inside the product page and configurable attributes like size, color and quantity box are pushed down. This may result in low sales when it appears frequently.</p>
<p>The easiest way to fix this is to create an action indexAction() and check if you have ___SID as a parameter, then just ignore it.</p>
<p>Add the following code in your module’s AjaxController.php file, just above the coAction():</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">indexAction</span>() {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$p</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getParam</span>(‘___SID’);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$p</span>) { <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b44">&#34;&#34;</span>; }  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>This will solve the weird 404 page that gets displayed in product page, but not the 404 error coming up in the logs. You need to remove ?___SID=U from the URL when it appears in the request to completely resolve the issue.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get all attribute values (colors, sizes, etc..)</title>
      <link>http://localhost:1313/magento-get-all-attribute-values-colors-sizes-etc../</link>
      <pubDate>Thu, 06 Nov 2014 20:44:48 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-all-attribute-values-colors-sizes-etc../</guid>
      <description>&lt;p&gt;Magento get all the attribute values you have in the store. Get all the colors and sizes values in Magento. Change the attribute name to whatever you want values for, in the below script.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;require_once&lt;/span&gt;(‘app&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;php’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umask(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;(‘admin’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//set_time_limit(0);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$attribute&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘eav&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;config’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAttribute&lt;/span&gt;(‘catalog_product’, ‘color’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$colors&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$attribute&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSource&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAllOptions&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;true&lt;/span&gt;) &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$option&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$colors&lt;/span&gt;[] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$option&lt;/span&gt;[‘label’];  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sort(&lt;span style=&#34;color:#b8860b&#34;&gt;$colors&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$colors&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$lbl&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;span style&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;background-color:lightgrey&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;“&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$lbl&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; “&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;/&lt;/span&gt;span&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;“;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Replace &lt;em&gt;color&lt;/em&gt; with any attribute you want to get values for. Above script also sorts the result set in alphabetic order to make it easy to view all values. If you don’t want to sort the values, just comment out the line which sorts it.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento get all the attribute values you have in the store. Get all the colors and sizes values in Magento. Change the attribute name to whatever you want values for, in the below script.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">require_once</span>(‘app<span style="color:#666">/</span>Mage<span style="color:#666">.</span>php’);  
</span></span><span style="display:flex;"><span>umask(<span style="color:#666">0</span>);  
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>(‘admin’);  
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//set_time_limit(0);  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$attribute</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘eav<span style="color:#666">/</span>config’)<span style="color:#666">-&gt;</span><span style="color:#b44">getAttribute</span>(‘catalog_product’, ‘color’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$colors</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>();  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$attribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSource</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getAllOptions</span>(<span style="color:#a2f;font-weight:bold">true</span>) <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$option</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$colors</span>[] <span style="color:#666">=</span> <span style="color:#b8860b">$option</span>[‘label’];  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span>sort(<span style="color:#b8860b">$colors</span>);  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$colors</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$lbl</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “<span style="color:#666">&lt;</span>span style<span style="color:#666">=</span><span style="color:#b44">&#34;background-color:lightgrey&#34;</span><span style="color:#666">&gt;</span>“<span style="color:#666">.</span><span style="color:#b8860b">$lbl</span> <span style="color:#666">.</span> “<span style="color:#666">&lt;/</span>span<span style="color:#666">&gt;</span>“;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “  
</span></span><span style="display:flex;"><span>“;  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>Replace <em>color</em> with any attribute you want to get values for. Above script also sorts the result set in alphabetic order to make it easy to view all values. If you don’t want to sort the values, just comment out the line which sorts it.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get all category and subcategory products</title>
      <link>http://localhost:1313/magento-get-all-category-and-subcategory-products/</link>
      <pubDate>Thu, 06 Nov 2014 20:37:45 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-all-category-and-subcategory-products/</guid>
      <description>&lt;p&gt;Magento get all category and subcategory products which are assigned to categories at different levels. Below script will show you all the categories, and all the associated product names under each of those categories.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;?&lt;/span&gt;php &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;require_once&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;app/Mage.php&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umask(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set_time_limit(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$category&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;catalog/category&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$tree&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$category&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getTreeModel&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$tree&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$ids&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$tree&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCollection&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAllIds&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$ids&lt;/span&gt;)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$ids&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$id&lt;/span&gt;)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$cat&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘catalog&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;category’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$cat&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$id&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$cat&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getLevel&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp;&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp; &lt;span style=&#34;color:#b8860b&#34;&gt;$cat&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getIsActive&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$category1&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘catalog&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;category’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$cat&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getId&lt;/span&gt;());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$products&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getResourceModel&lt;/span&gt;(‘catalog&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;product_collection’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToSelect&lt;/span&gt;(‘name’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addCategoryFilter&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$category1&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “&lt;span style=&#34;color:#666&#34;&gt;**&lt;/span&gt;“&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$cat&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getName&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;”&lt;span style=&#34;color:#666&#34;&gt;**&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$products&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;) { &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//print_r($product-&amp;gt;getData());exit;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ” ” &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getName&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; ” – “&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSku&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; “  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Note the line which checks category getLevel()==3, you can change this line to get different subcategory levels by adjusting it.&lt;br&gt;&#xA;For root category, getLevel() should be 1.&lt;br&gt;&#xA;For all the main/primary categories, getLevel() should be 2.&lt;br&gt;&#xA;For all the subcategories, getLevel() should be 3.&lt;br&gt;&#xA;For all the subsubcategories, getLevel() should be 4.&lt;br&gt;&#xA;and so on…&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento get all category and subcategory products which are assigned to categories at different levels. Below script will show you all the categories, and all the associated product names under each of those categories.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#a2f;font-weight:bold">require_once</span>(<span style="color:#b44">&#39;app/Mage.php&#39;</span>);
</span></span><span style="display:flex;"><span>umask(<span style="color:#666">0</span>);
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>(<span style="color:#b44">&#39;admin&#39;</span>);
</span></span><span style="display:flex;"><span>set_time_limit(<span style="color:#666">0</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$category</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(<span style="color:#b44">&#39;catalog/category&#39;</span>);
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$tree</span> <span style="color:#666">=</span> <span style="color:#b8860b">$category</span><span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">getTreeModel</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$tree</span><span style="color:#666">-&gt;</span><span style="color:#b44">load</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$ids</span> <span style="color:#666">=</span> <span style="color:#b8860b">$tree</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCollection</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getAllIds</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$ids</span>)  
</span></span><span style="display:flex;"><span>{  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$ids</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$id</span>)  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$cat</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>category’);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$cat</span><span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$id</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$cat</span><span style="color:#666">-&gt;</span><span style="color:#b44">getLevel</span>()<span style="color:#666">==</span><span style="color:#666">3</span> <span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp; <span style="color:#b8860b">$cat</span><span style="color:#666">-&gt;</span><span style="color:#b44">getIsActive</span>()<span style="color:#666">==</span><span style="color:#666">1</span>)  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$category1</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>category’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$cat</span><span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>());  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$products</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getResourceModel</span>(‘catalog<span style="color:#666">/</span>product_collection’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘name’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addCategoryFilter</span>(<span style="color:#b8860b">$category1</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “<span style="color:#666">**</span>“<span style="color:#666">.</span><span style="color:#b8860b">$cat</span><span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>()<span style="color:#666">.</span>”<span style="color:#666">**</span>  
</span></span><span style="display:flex;"><span>“;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$products</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$product</span>) { <span style="color:#080;font-style:italic">//print_r($product-&gt;getData());exit;  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#a2f;font-weight:bold">echo</span> ” ” <span style="color:#666">.</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>() <span style="color:#666">.</span> ” – “<span style="color:#666">.</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSku</span>() <span style="color:#666">.</span> “  
</span></span><span style="display:flex;"><span>“;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span><span style="color:#080">?&gt;</span><span style="">
</span></span></span></code></pre></div>
<p>Note the line which checks category getLevel()==3, you can change this line to get different subcategory levels by adjusting it.<br>
For root category, getLevel() should be 1.<br>
For all the main/primary categories, getLevel() should be 2.<br>
For all the subcategories, getLevel() should be 3.<br>
For all the subsubcategories, getLevel() should be 4.<br>
and so on…</p>
<p>Above script will get you all the category and subcategories products, products assigned to each and every categories of your store.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get all products with quantities and Out Of Stock</title>
      <link>http://localhost:1313/magento-get-all-products-with-quantities-and-out-of-stock/</link>
      <pubDate>Thu, 06 Nov 2014 20:27:28 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-all-products-with-quantities-and-out-of-stock/</guid>
      <description>&lt;p&gt;Magento get all the simple products which have greater than 0 quantity and are still Out of Stock in inventory.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;?&lt;/span&gt;php &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;require_once&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;app/Mage.php&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umask(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set_time_limit(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$productCollection&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;catalog/product&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCollection&lt;/span&gt;()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToSelect&lt;/span&gt;(‘&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;joinField&lt;/span&gt;(‘qty’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘cataloginventory&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;stock_item’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘qty’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘product_id&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;entity_id’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘{{table}}&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;is_in_stock&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘left’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToFilter&lt;/span&gt;(‘qty’, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(“gt” &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;## Simple Products with &amp;gt;0 quantity and Out of Stock&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$productCollection&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;) { &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//print_r($product-&amp;gt;getData());exit;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getTypeId&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; ‘simple’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getName&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; ” &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; ” &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSku&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; “  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘Done’;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>Magento get all the simple products which have greater than 0 quantity and are still Out of Stock in inventory.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#a2f;font-weight:bold">require_once</span>(<span style="color:#b44">&#39;app/Mage.php&#39;</span>);
</span></span><span style="display:flex;"><span>umask(<span style="color:#666">0</span>);
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>(<span style="color:#b44">&#39;admin&#39;</span>);
</span></span><span style="display:flex;"><span>set_time_limit(<span style="color:#666">0</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$productCollection</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(<span style="color:#b44">&#39;catalog/product&#39;</span>)
</span></span><span style="display:flex;"><span>     <span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">getCollection</span>()  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘<span style="color:#666">*</span>’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">joinField</span>(‘qty’,  
</span></span><span style="display:flex;"><span> ‘cataloginventory<span style="color:#666">/</span>stock_item’,  
</span></span><span style="display:flex;"><span> ‘qty’,  
</span></span><span style="display:flex;"><span> ‘product_id<span style="color:#666">=</span>entity_id’,  
</span></span><span style="display:flex;"><span> ‘{{table}}<span style="color:#666">.</span>is_in_stock<span style="color:#666">=</span><span style="color:#666">0</span>’,  
</span></span><span style="display:flex;"><span> ‘left’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘qty’, <span style="color:#a2f;font-weight:bold">array</span>(“gt” <span style="color:#666">=&gt;</span> <span style="color:#666">0</span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> “
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">## Simple Products with &gt;0 quantity and Out of Stock
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span>“;  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$productCollection</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$product</span>) { <span style="color:#080;font-style:italic">//print_r($product-&gt;getData());exit;  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getTypeId</span>() <span style="color:#666">==</span> ‘simple’)  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>() <span style="color:#666">.</span> ” <span style="color:#666">|</span> ” <span style="color:#666">.</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSku</span>() <span style="color:#666">.</span> “  
</span></span><span style="display:flex;"><span>“;  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> ‘Done’;  
</span></span><span style="display:flex;"><span><span style="color:#080">?&gt;</span><span style="">
</span></span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get all products with 0 quantity and In Stock</title>
      <link>http://localhost:1313/magento-get-all-products-with-0-quantity-and-in-stock/</link>
      <pubDate>Thu, 06 Nov 2014 20:23:39 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-all-products-with-0-quantity-and-in-stock/</guid>
      <description>&lt;p&gt;Magento get all products which have zero quantity and are still In Stock in inventory. Below script will show you all such simple products.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;?&lt;/span&gt;php &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;require_once&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;app/Mage.php&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umask(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set_time_limit(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$productCollection&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;catalog/product&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCollection&lt;/span&gt;()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToSelect&lt;/span&gt;(‘&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;joinField&lt;/span&gt;(‘qty’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘cataloginventory&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;stock_item’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘qty’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘product_id&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;entity_id’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘{{table}}&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;is_in_stock&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘left’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToFilter&lt;/span&gt;(‘qty’, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(“eq” &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;## Simple Products with 0 quantity and In Stock&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$productCollection&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;) { &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//print_r($product-&amp;gt;getData());exit;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getTypeId&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; ‘simple’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getName&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; ” &lt;span style=&#34;color:#666&#34;&gt;|&lt;/span&gt; ” &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSku&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; “  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;“;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘Done’;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>Magento get all products which have zero quantity and are still In Stock in inventory. Below script will show you all such simple products.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#a2f;font-weight:bold">require_once</span>(<span style="color:#b44">&#39;app/Mage.php&#39;</span>);
</span></span><span style="display:flex;"><span>umask(<span style="color:#666">0</span>);
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>(<span style="color:#b44">&#39;admin&#39;</span>);
</span></span><span style="display:flex;"><span>set_time_limit(<span style="color:#666">0</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$productCollection</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(<span style="color:#b44">&#39;catalog/product&#39;</span>)
</span></span><span style="display:flex;"><span>     <span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">getCollection</span>()  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘<span style="color:#666">*</span>’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">joinField</span>(‘qty’,  
</span></span><span style="display:flex;"><span> ‘cataloginventory<span style="color:#666">/</span>stock_item’,  
</span></span><span style="display:flex;"><span> ‘qty’,  
</span></span><span style="display:flex;"><span> ‘product_id<span style="color:#666">=</span>entity_id’,  
</span></span><span style="display:flex;"><span> ‘{{table}}<span style="color:#666">.</span>is_in_stock<span style="color:#666">=</span><span style="color:#666">1</span>’,  
</span></span><span style="display:flex;"><span> ‘left’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘qty’, <span style="color:#a2f;font-weight:bold">array</span>(“eq” <span style="color:#666">=&gt;</span> <span style="color:#666">0</span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> “
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">## Simple Products with 0 quantity and In Stock
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span>“;  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$productCollection</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$product</span>) { <span style="color:#080;font-style:italic">//print_r($product-&gt;getData());exit;  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getTypeId</span>() <span style="color:#666">==</span> ‘simple’)  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>() <span style="color:#666">.</span> ” <span style="color:#666">|</span> ” <span style="color:#666">.</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSku</span>() <span style="color:#666">.</span> “  
</span></span><span style="display:flex;"><span>“;  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> ‘Done’;  
</span></span><span style="display:flex;"><span><span style="color:#080">?&gt;</span><span style="">
</span></span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get all products without categories (orphaned products)</title>
      <link>http://localhost:1313/magento-get-all-products-without-categories-orphaned-products/</link>
      <pubDate>Thu, 06 Nov 2014 20:17:43 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-all-products-without-categories-orphaned-products/</guid>
      <description>&lt;p&gt;Magento get all the configurable/simple products which are not associated with any categories, which are orphaned products. To get all the products (regardless of their type), simply ignore the condition where it checks for type_id in the below query and comment the condition line in foreach loop.&lt;/p&gt;&#xA;&lt;p&gt;Below script will get all such products, you can create new PHP file at the root of Magento installation and paste the code:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento get all the configurable/simple products which are not associated with any categories, which are orphaned products. To get all the products (regardless of their type), simply ignore the condition where it checks for type_id in the below query and comment the condition line in foreach loop.</p>
<p>Below script will get all such products, you can create new PHP file at the root of Magento installation and paste the code:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#a2f;font-weight:bold">require_once</span>(<span style="color:#b44">&#39;app/Mage.php&#39;</span>);
</span></span><span style="display:flex;"><span>umask(<span style="color:#666">0</span>);
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>(<span style="color:#b44">&#39;admin&#39;</span>);
</span></span><span style="display:flex;"><span>set_time_limit(<span style="color:#666">0</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$i</span><span style="color:#666">=</span><span style="color:#666">0</span>;
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$sql</span> <span style="color:#666">=</span> <span style="color:#b44">&#34;select
</span></span></span><span style="display:flex;"><span><span style="color:#b44">    type_id,sku
</span></span></span><span style="display:flex;"><span><span style="color:#b44"> from catalog_product_entity a
</span></span></span><span style="display:flex;"><span><span style="color:#b44"> left join catalog_category_product cp on cp.`product_id` = a.entity_id
</span></span></span><span style="display:flex;"><span><span style="color:#b44"> left join catalog_product_relation cpr on cpr.child_id = a.entity_id
</span></span></span><span style="display:flex;"><span><span style="color:#b44"> where
</span></span></span><span style="display:flex;"><span><span style="color:#b44">       cp.product_id is null
</span></span></span><span style="display:flex;"><span><span style="color:#b44">   and cpr.parent_id is null
</span></span></span><span style="display:flex;"><span><span style="color:#b44">   and a.type_id = &#39;configurable&#39;&#34;</span>;
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$connection</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(<span style="color:#b44">&#39;core/resource&#39;</span>)<span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">getConnection</span>(‘core_read’);  
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//echo count($connection-&gt;fetchAll($sql));exit;
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$connection</span><span style="color:#666">-&gt;</span><span style="color:#b44">fetchAll</span>(<span style="color:#b8860b">$sql</span>) <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$arr_row</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$pid</span> <span style="color:#666">=</span> <span style="color:#b8860b">$arr_row</span>[‘sku’];  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$product</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">loadByAttribute</span>(‘sku’,<span style="color:#b8860b">$pid</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getTypeId</span>()<span style="color:#666">!=</span>’configurable’) <span style="color:#a2f;font-weight:bold">continue</span>;  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$i</span><span style="color:#666">++</span>;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$i</span> <span style="color:#666">.</span>”) “<span style="color:#666">.</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>() <span style="color:#666">.</span> ” – ” <span style="color:#666">.</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSku</span>() <span style="color:#666">.</span> “  
</span></span><span style="display:flex;"><span>“;  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span><span style="color:#080">?&gt;</span><span style="">
</span></span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento fix for error &#34;Code already exists.&#34;</title>
      <link>http://localhost:1313/magento-fix-for-error-code-already-exists./</link>
      <pubDate>Tue, 07 Oct 2014 23:09:09 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-fix-for-error-code-already-exists./</guid>
      <description>&lt;p&gt;Fix for Magento error &lt;strong&gt;Code already exists.&lt;/strong&gt; in Sales &amp;gt; Tax &amp;gt; Manage Tax Rules, when saving the rule.&lt;/p&gt;&#xA;&lt;p&gt;When trying to save Tax rules in Magento, you may get “Code already exists.” error if there are lots of tax rates passing in POST. Magento error is not making sense here, as the issue is something different. Basically when you post the data in PHP, it limits maximum post variables which should pass to the server. For me, that limit was 1000 in max_input_vars, which by changing to 20000 solved this issue and Magento successfully accepted my changes without any error.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Fix for Magento error <strong>Code already exists.</strong> in Sales &gt; Tax &gt; Manage Tax Rules, when saving the rule.</p>
<p>When trying to save Tax rules in Magento, you may get “Code already exists.” error if there are lots of tax rates passing in POST. Magento error is not making sense here, as the issue is something different. Basically when you post the data in PHP, it limits maximum post variables which should pass to the server. For me, that limit was 1000 in max_input_vars, which by changing to 20000 solved this issue and Magento successfully accepted my changes without any error.</p>
<p>To change max_input_vars to higher value, you need to edit in PHP.ini file for max_input_vars like this:<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> max_input_vars 20000</span></span></span></code></pre></div></p>
<p>But as editing PHP.ini requires restarting apache to reflect the changes, I did the change in .htaccess file just for Tax rule modification and later reverted it.</p>
<p>You can edit .htaccess to make this change by copy-pasting below line at the end of the file:<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> php_value max_input_vars 20000</span></span></span></code></pre></div></p>
<p>Now you should be able to change Tax rules even if you have lots of tax rates posting through for that change! I prefered to revert .htaccess back to what it was as I didn’t need to change tax rules frequently.</p>
<p>Note: If the above does not solve the issue for you, make sure your Tax Rule name is not duplicating with another tax rule name.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Show gift card details in admin order page</title>
      <link>http://localhost:1313/magento-show-gift-card-details-in-admin-order-page/</link>
      <pubDate>Tue, 23 Sep 2014 20:13:07 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-show-gift-card-details-in-admin-order-page/</guid>
      <description>&lt;p&gt;Magento display gift card details (code and amount) in Order View page of admin panel. When customer uses gift card in their order Magento does not display gift card code and amount details in admin panel which makes it tough to know. Customer can pay partially through gift card which makes even tougher as Magento only shows payment information of other method and not gift card amount deductions.&lt;/p&gt;&#xA;&lt;p&gt;Below code will show you an additional block in magento admin panel with Gift Card details. If gift card is not used in an order, the block will simply no shown.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento display gift card details (code and amount) in Order View page of admin panel. When customer uses gift card in their order Magento does not display gift card code and amount details in admin panel which makes it tough to know. Customer can pay partially through gift card which makes even tougher as Magento only shows payment information of other method and not gift card amount deductions.</p>
<p>Below code will show you an additional block in magento admin panel with Gift Card details. If gift card is not used in an order, the block will simply no shown.</p>
<p>Open the file app/design/adminhtml/default/default/template/sales/order/view/edit.phtml</p>
<p>Add the below lines of code anywhere you want the gift card block to appear. I have used it after Account Information block.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#b8860b">$cards</span> <span style="color:#666">=</span> unserialize(<span style="color:#b8860b">$_order</span><span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">getGiftCards</span>());  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$cards</span><span style="color:#666">!=</span>” <span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp; count(<span style="color:#b8860b">$cards</span>)<span style="color:#666">&gt;</span><span style="color:#666">0</span>) { <span style="color:#080">?&gt;</span><span style="">
</span></span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style="">&lt;div class=&#34;box-left&#34;&gt;&lt;div class=&#34;entry-edit&#34;&gt;&lt;div class=&#34;entry-edit-head&#34;&gt;#### &lt;?php echo Mage::helper(&#39;sales&#39;)-&gt;
</span></span></span><span style="display:flex;"><span><span style="">__(‘Gift Cards’) ?&gt;
</span></span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style="">&lt;/div&gt;&lt;div class=&#34;fieldset&#34;&gt;&lt;div class=&#34;hor-scroll&#34;&gt;&lt;?php foreach ($cards as $card) { ??&gt;
</span></span></span><span style="display:flex;"><span><span style="">| &lt;label&gt;&lt;?php echo Mage::helper(&#39;sales&#39;)-&gt; __(‘Giftcard Code’) ?&gt;&lt;/label&gt; | &lt;div style=&#34;font-weight:bold&#34;&gt;&lt;?php echo $card[&#39;c&#39;];??&gt; &lt;/div&gt; |
</span></span></span><span style="display:flex;"><span><span style="">|---|---|
</span></span></span><span style="display:flex;"><span><span style="">| &lt;label&gt;&lt;?php echo Mage::helper(&#39;sales&#39;)-&gt; __(‘Giftcard Amount’) ?&gt;&lt;/label&gt; | &lt;div style=&#34;font-weight:bold&#34;&gt;&lt;?php echo $card[&#39;a&#39;];??&gt; &lt;/div&gt; |
</span></span></span><span style="display:flex;"><span><span style=""> &lt;?php }??&gt;
</span></span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style="">&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;?php }??&gt;
</span></span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento add/remove product attribute programatically</title>
      <link>http://localhost:1313/magento-add/remove-product-attribute-programatically/</link>
      <pubDate>Thu, 04 Sep 2014 02:24:16 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-add/remove-product-attribute-programatically/</guid>
      <description>&lt;p&gt;Magento add product attribute using sql setup file in your module. Also assign your custom attribute to attribute set Default and group General programatically.&lt;/p&gt;&#xA;&lt;p&gt;Below code will add your new attribute in Manage Products edit screen at the end of General tab with dropdown values Yes/No. It will not display in frontend website but you can change visibible on front to 1 if you wish. Note that it will assign to Default attribute set only but you can change it to whatever as per your requirement.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento add product attribute using sql setup file in your module. Also assign your custom attribute to attribute set Default and group General programatically.</p>
<p>Below code will add your new attribute in Manage Products edit screen at the end of General tab with dropdown values Yes/No. It will not display in frontend website but you can change visibible on front to 1 if you wish. Note that it will assign to Default attribute set only but you can change it to whatever as per your requirement.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$model</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getResourceModel</span>(‘catalog<span style="color:#666">/</span>setup’,’catalog_setup’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$data</span><span style="color:#666">=</span><span style="color:#a2f;font-weight:bold">array</span>(  
</span></span><span style="display:flex;"><span>‘type’<span style="color:#666">=&gt;</span>’int’,  
</span></span><span style="display:flex;"><span>‘input’<span style="color:#666">=&gt;</span>’boolean’, <span style="color:#080;font-style:italic">//for Yes/No dropdown  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>‘sort_order’<span style="color:#666">=&gt;</span><span style="color:#666">50</span>,  
</span></span><span style="display:flex;"><span>‘label’<span style="color:#666">=&gt;</span>’CUSTOM ATTRIBUTE CODE LABEL’,  
</span></span><span style="display:flex;"><span>‘global’<span style="color:#666">=&gt;</span>Mage_Catalog_Model_Resource_Eav_Attribute<span style="color:#666">::</span><span style="color:#b44">SCOPE_GLOBAL</span>,  
</span></span><span style="display:flex;"><span>‘required’<span style="color:#666">=&gt;</span>’0’,  
</span></span><span style="display:flex;"><span>‘comparable’<span style="color:#666">=&gt;</span>’0’,  
</span></span><span style="display:flex;"><span>‘searchable’<span style="color:#666">=&gt;</span>’0’,  
</span></span><span style="display:flex;"><span>‘is_configurable’<span style="color:#666">=&gt;</span>’1’,  
</span></span><span style="display:flex;"><span>‘user_defined’<span style="color:#666">=&gt;</span>’1’,  
</span></span><span style="display:flex;"><span>‘visible_on_front’ <span style="color:#666">=&gt;</span> <span style="color:#666">0</span>, <span style="color:#080;font-style:italic">//want to show on frontend?  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>‘visible_in_advanced_search’ <span style="color:#666">=&gt;</span> <span style="color:#666">0</span>,  
</span></span><span style="display:flex;"><span>‘is_html_allowed_on_front’ <span style="color:#666">=&gt;</span> <span style="color:#666">0</span>,  
</span></span><span style="display:flex;"><span>‘required’<span style="color:#666">=&gt;</span> <span style="color:#666">0</span>,  
</span></span><span style="display:flex;"><span>‘unique’<span style="color:#666">=&gt;</span><span style="color:#a2f;font-weight:bold">false</span>,  
</span></span><span style="display:flex;"><span>‘apply_to’ <span style="color:#666">=&gt;</span> ‘configurable’, <span style="color:#080;font-style:italic">//simple,configurable,bundled,grouped,virtual,downloadable  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>‘is_configurable’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">false</span>  
</span></span><span style="display:flex;"><span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttribute</span>(‘catalog_product’,’CUSTOM_ATTRIBUTE_CODE’,<span style="color:#b8860b">$data</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSet</span>(  
</span></span><span style="display:flex;"><span> ‘catalog_product’, ‘Default’, ‘General’, ‘CUSTOM_ATTRIBUTE_CODE’  
</span></span><span style="display:flex;"><span>); <span style="color:#080;font-style:italic">//Default = attribute set, General = attribute group  
</span></span></span></code></pre></div>
<p>To remove the product attribute using the setup file, use below code instead:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$model</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getResourceModel</span>(‘catalog<span style="color:#666">/</span>setup’,’catalog_setup’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b44">removeAttribute</span>(‘catalog_product’,’CUSTOM_ATTRIBUTE_CODE’);  
</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento set session cookie lifetime to 1 day</title>
      <link>http://localhost:1313/magento-set-session-cookie-lifetime-to-1-day/</link>
      <pubDate>Tue, 02 Sep 2014 17:28:16 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-set-session-cookie-lifetime-to-1-day/</guid>
      <description>&lt;p&gt;Is your Magento shopping cart kicking out all the items after 24 minutes? Are you frustrated because your customer’s cart items are getting flushed every few hours even though you have correct setting in Magento? Do you want to increase your shopping cart sessions to last for 1 day (or anything you wish)?&lt;/p&gt;&#xA;&lt;p&gt;Here are the things to look for to increase/decrease Magento’s session cookie lifetime.&lt;/p&gt;&#xA;&lt;p&gt;In your php.ini file:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; session.gc_maxlifetime 86400&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;If you have not changed this, it should be by default 1440 i.e. 24 minutes. Change it to 86400 for one day session lifetime&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Is your Magento shopping cart kicking out all the items after 24 minutes? Are you frustrated because your customer’s cart items are getting flushed every few hours even though you have correct setting in Magento? Do you want to increase your shopping cart sessions to last for 1 day (or anything you wish)?</p>
<p>Here are the things to look for to increase/decrease Magento’s session cookie lifetime.</p>
<p>In your php.ini file:<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> session.gc_maxlifetime 86400</span></span></span></code></pre></div><br>
If you have not changed this, it should be by default 1440 i.e. 24 minutes. Change it to 86400 for one day session lifetime</p>
<p>In your Magento admin:<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> System -&gt; Configuration -&gt; Checkout -&gt; Shopping Cart  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">Quote Lifetime (days) -&gt; 1</span></span></span></code></pre></div></p>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> System -&gt; Configuration -&gt; Web -&gt; Session Cookie Management  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">Cookie Lifetime -&gt; 86400</span></span></span></code></pre></div>
<p>Make sure to check if you are in correct website/store if using multi-website/multi-store Magento setup. You can change the scope by changing the website/store from the upper left Store Switcher drop down in System -&gt; Configuration screen.</p>
<p>If you are changing php.ini value, make sure you reload apache to reflect the changes.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento reload top mini cart programatically</title>
      <link>http://localhost:1313/magento-reload-top-mini-cart-programatically/</link>
      <pubDate>Fri, 22 Aug 2014 04:08:20 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-reload-top-mini-cart-programatically/</guid>
      <description>&lt;p&gt;Magento reload/refresh top mini cart programatically. This can be useful when you are using ajax to add/remove product to cart and want to reflect that item changes in the top cart immediately. Simply put below code where you are modifying cart programatically and it will start working.&lt;/p&gt;&#xA;&lt;p&gt;Right now it’s only coded for simple and configurable products, but you can add bundle, group, virtual and downloader product item renderers too if you are using them in your website.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento reload/refresh top mini cart programatically. This can be useful when you are using ajax to add/remove product to cart and want to reflect that item changes in the top cart immediately. Simply put below code where you are modifying cart programatically and it will start working.</p>
<p>Right now it’s only coded for simple and configurable products, but you can add bundle, group, virtual and downloader product item renderers too if you are using them in your website.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$b</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getLayout</span>()  
</span></span><span style="display:flex;"><span><span style="color:#666">-&gt;</span><span style="color:#b44">createBlock</span>(‘checkout<span style="color:#666">/</span>cart_sidebar’)  
</span></span><span style="display:flex;"><span><span style="color:#666">-&gt;</span><span style="color:#b44">addItemRender</span>(‘simple’, ‘checkout<span style="color:#666">/</span>cart_item_renderer’, ‘checkout<span style="color:#666">/</span>cart<span style="color:#666">/</span>sidebar<span style="color:#666">/</span><span style="color:#a2f;font-weight:bold">default</span><span style="color:#666">.</span>phtml’)  
</span></span><span style="display:flex;"><span><span style="color:#666">-&gt;</span><span style="color:#b44">addItemRender</span>(‘configurable’, ‘checkout<span style="color:#666">/</span>cart_item_renderer_configurable’, ‘checkout<span style="color:#666">/</span>cart<span style="color:#666">/</span>sidebar<span style="color:#666">/</span><span style="color:#a2f;font-weight:bold">default</span><span style="color:#666">.</span>phtml’)  
</span></span><span style="display:flex;"><span><span style="color:#666">-&gt;</span><span style="color:#b44">setTemplate</span>(‘checkout<span style="color:#666">/</span>cart<span style="color:#666">/</span>cartheader<span style="color:#666">.</span>phtml’)  
</span></span><span style="display:flex;"><span><span style="color:#666">-&gt;</span><span style="color:#b44">toHtml</span>();  
</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento auto remove out of stock items from shopping cart</title>
      <link>http://localhost:1313/magento-auto-remove-out-of-stock-items-from-shopping-cart/</link>
      <pubDate>Fri, 22 Aug 2014 03:43:35 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-auto-remove-out-of-stock-items-from-shopping-cart/</guid>
      <description>&lt;p&gt;Magento automatically remove product items from shopping cart page which are out of stock. You may need this feature when the situation aries where product goes out of stock and that particular product is already there in other customer’s cart who have not yet checked it out. With this script Magento will auto-check if all the items in the cart are available and in-stock before proceeding for checkout page.&lt;/p&gt;&#xA;&lt;p&gt;In config.xml file:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;events&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;controller_action_predispatch_checkout_cart_index&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;observers&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;namespace_module_autoremove_outofstock&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;singleton&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;class&amp;gt;&lt;/span&gt;namespace_module/observer&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/class&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;method&amp;gt;&lt;/span&gt;autoRemoveOutOfStockItems&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/method&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/namespace_module_autoremove_outofstock&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/observers&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/controller_action_predispatch_checkout_cart_index&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/events&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento automatically remove product items from shopping cart page which are out of stock. You may need this feature when the situation aries where product goes out of stock and that particular product is already there in other customer’s cart who have not yet checked it out. With this script Magento will auto-check if all the items in the cart are available and in-stock before proceeding for checkout page.</p>
<p>In config.xml file:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;events&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;controller_action_predispatch_checkout_cart_index&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;namespace_module_autoremove_outofstock&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;type&gt;</span>singleton<span style="color:#008000;font-weight:bold">&lt;/type&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;class&gt;</span>namespace_module/observer<span style="color:#008000;font-weight:bold">&lt;/class&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;method&gt;</span>autoRemoveOutOfStockItems<span style="color:#008000;font-weight:bold">&lt;/method&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/namespace_module_autoremove_outofstock&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/controller_action_predispatch_checkout_cart_index&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;/events&gt;</span>  </span></span></code></pre></div></p>
<p>In Observer.php file:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">autoRemoveOutOfStockItems</span>(<span style="color:#b8860b">$observer</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$quote</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘checkout<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getQuote</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$cartItems</span> <span style="color:#666">=</span> <span style="color:#b8860b">$quote</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAllItems</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$cartItems</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$item</span>)  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//$productType = $item-&gt;getProduct()-&gt;getTypeId();  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#080;font-style:italic">//if($productType!=’configurable’) {  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$productId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$item</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProductId</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$product</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$productId</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$stockItem</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getStockItem</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#666">!</span><span style="color:#b8860b">$stockItem</span><span style="color:#666">-&gt;</span><span style="color:#b44">getIsInStock</span>())  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">helper</span>(‘checkout<span style="color:#666">/</span>cart’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCart</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">removeItem</span>(<span style="color:#b8860b">$item</span><span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>())<span style="color:#666">-&gt;</span><span style="color:#b44">save</span>();  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//}  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>}  
</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get CMS page content without header/footer</title>
      <link>http://localhost:1313/magento-get-cms-page-content-without-header/footer/</link>
      <pubDate>Fri, 22 Aug 2014 03:35:56 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-cms-page-content-without-header/footer/</guid>
      <description>&lt;p&gt;Magento get CMS page content anywhere on the site without header and footer using below script. You may need to do this for displaying CMS page on part of the page, like popup or sidebar of the page without using header and footer of the CMS page that generally comes when loading the page from the CMS URL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$page&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘cms&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;page’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$page&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setStoreId&lt;/span&gt;(Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getStore&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getId&lt;/span&gt;());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$page&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(‘CMS&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;IDENTIFIER&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;HERE’,’identifier’); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//EDIT IN THIS LINE  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$helper&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;helper&lt;/span&gt;(‘cms’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$processor&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$helper&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getPageTemplateProcessor&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$html&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$processor&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;filter&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$page&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getContent&lt;/span&gt;());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>Magento get CMS page content anywhere on the site without header and footer using below script. You may need to do this for displaying CMS page on part of the page, like popup or sidebar of the page without using header and footer of the CMS page that generally comes when loading the page from the CMS URL.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$page</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘cms<span style="color:#666">/</span>page’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$page</span><span style="color:#666">-&gt;</span><span style="color:#b44">setStoreId</span>(Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getStore</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>());  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$page</span><span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(‘CMS<span style="color:#666">-</span>IDENTIFIER<span style="color:#666">-</span>HERE’,’identifier’); <span style="color:#080;font-style:italic">//EDIT IN THIS LINE  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$helper</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">helper</span>(‘cms’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$processor</span> <span style="color:#666">=</span> <span style="color:#b8860b">$helper</span><span style="color:#666">-&gt;</span><span style="color:#b44">getPageTemplateProcessor</span>();  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$html</span> <span style="color:#666">=</span> <span style="color:#b8860b">$processor</span><span style="color:#666">-&gt;</span><span style="color:#b44">filter</span>(<span style="color:#b8860b">$page</span><span style="color:#666">-&gt;</span><span style="color:#b44">getContent</span>());  
</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento event to check if customer have subscribed to newsletter</title>
      <link>http://localhost:1313/magento-event-to-check-if-customer-have-subscribed-to-newsletter/</link>
      <pubDate>Thu, 21 Aug 2014 21:07:38 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-event-to-check-if-customer-have-subscribed-to-newsletter/</guid>
      <description>&lt;p&gt;Check if the customer has subscribed to the newsletter from registration page or checkout page by using event observer. You may need to take some action programatically if customer subscribes to newsletter, below code will help you exactly in that.&lt;/p&gt;&#xA;&lt;p&gt;Code to put in your config.xml&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;newsletter_subscriber_save_after&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;observers&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;namespace_module_model_observer&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;class&amp;gt;&lt;/span&gt;Namespace_Module_Model_Observer&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/class&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;method&amp;gt;&lt;/span&gt;subscribedToNewsletter&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/method&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/namespace_module_model_observer&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/observers&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/newsletter_subscriber_save_after&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Code to put in your Observer.php file&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;Namespace_Module_Model_Observer&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;subscribedToNewsletter&lt;/span&gt;(Varien_Event_Observer &lt;span style=&#34;color:#b8860b&#34;&gt;$observer&lt;/span&gt;)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$event&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$observer&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getEvent&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$subscriber&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$event&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getDataObject&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$data&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$subscriber&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getData&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$email&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$data&lt;/span&gt;[‘subscriber_email’];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$statusChange&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$subscriber&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getIsStatusChanged&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$data&lt;/span&gt;[‘subscriber_status’] &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; “1” &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp;&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp; &lt;span style=&#34;color:#b8860b&#34;&gt;$statusChange&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;true&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//code to handle if customer is just subscribed…  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Check if the customer has subscribed to the newsletter from registration page or checkout page by using event observer. You may need to take some action programatically if customer subscribes to newsletter, below code will help you exactly in that.</p>
<p>Code to put in your config.xml<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;newsletter_subscriber_save_after&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;namespace_module_model_observer&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;class&gt;</span>Namespace_Module_Model_Observer<span style="color:#008000;font-weight:bold">&lt;/class&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;method&gt;</span>subscribedToNewsletter<span style="color:#008000;font-weight:bold">&lt;/method&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/namespace_module_model_observer&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/observers&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;/newsletter_subscriber_save_after&gt;</span>  </span></span></code></pre></div></p>
<p>Code to put in your Observer.php file<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">class</span> <span style="color:#00f">Namespace_Module_Model_Observer</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">subscribedToNewsletter</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>)  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$event</span> <span style="color:#666">=</span> <span style="color:#b8860b">$observer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getEvent</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$subscriber</span> <span style="color:#666">=</span> <span style="color:#b8860b">$event</span><span style="color:#666">-&gt;</span><span style="color:#b44">getDataObject</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$data</span> <span style="color:#666">=</span> <span style="color:#b8860b">$subscriber</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$email</span> <span style="color:#666">=</span> <span style="color:#b8860b">$data</span>[‘subscriber_email’];
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$statusChange</span> <span style="color:#666">=</span> <span style="color:#b8860b">$subscriber</span><span style="color:#666">-&gt;</span><span style="color:#b44">getIsStatusChanged</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$data</span>[‘subscriber_status’] <span style="color:#666">==</span> “1” <span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp; <span style="color:#b8860b">$statusChange</span> <span style="color:#666">==</span> <span style="color:#a2f;font-weight:bold">true</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//code to handle if customer is just subscribed…  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> }  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}  
</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento event observer for customer registration success</title>
      <link>http://localhost:1313/magento-event-observer-for-customer-registration-success/</link>
      <pubDate>Thu, 21 Aug 2014 21:00:10 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-event-observer-for-customer-registration-success/</guid>
      <description>&lt;p&gt;If you are looking for how to execute some code when customer successfully sign up in your website, you can use below code to check if the registration was successful. Note, this will NOT check if customer was registered from checkout page, if you are looking for that please go to this &lt;a href=&#34;http://ka.lpe.sh/2014/08/21/magento-check-customer-registered-checkout-page/&#34;&gt;post&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;In your xml file:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;events&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;customer_register_success&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;observers&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;namespace_module_customer_register_success&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;singleton&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;class&amp;gt;&lt;/span&gt;Namespace_Module_Model_Observer&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/class&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;method&amp;gt;&lt;/span&gt;customerRegisterSuccess&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/method&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/namespace_module_customer_register_success&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/observers&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/customer_register_success&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/events&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;And in your Observer.php file:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#00f&#34;&gt;Namespace_Module_Model_Observer&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;customerRegisterSuccess&lt;/span&gt;(Varien_Event_Observer &lt;span style=&#34;color:#b8860b&#34;&gt;$observer&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$event&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$observer&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getEvent&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$customer&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$event&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCustomer&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$email&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$customer&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getEmail&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$email&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//code to handle if customer is successfully registered  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If you are looking for how to execute some code when customer successfully sign up in your website, you can use below code to check if the registration was successful. Note, this will NOT check if customer was registered from checkout page, if you are looking for that please go to this <a href="http://ka.lpe.sh/2014/08/21/magento-check-customer-registered-checkout-page/">post</a>.</p>
<p>In your xml file:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;events&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;customer_register_success&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;namespace_module_customer_register_success&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;type&gt;</span>singleton<span style="color:#008000;font-weight:bold">&lt;/type&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;class&gt;</span>Namespace_Module_Model_Observer<span style="color:#008000;font-weight:bold">&lt;/class&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;method&gt;</span>customerRegisterSuccess<span style="color:#008000;font-weight:bold">&lt;/method&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/namespace_module_customer_register_success&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/customer_register_success&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;/events&gt;</span>  </span></span></code></pre></div></p>
<p>And in your Observer.php file:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">class</span> <span style="color:#00f">Namespace_Module_Model_Observer</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">customerRegisterSuccess</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$event</span> <span style="color:#666">=</span> <span style="color:#b8860b">$observer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getEvent</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$customer</span> <span style="color:#666">=</span> <span style="color:#b8860b">$event</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCustomer</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$email</span> <span style="color:#666">=</span> <span style="color:#b8860b">$customer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getEmail</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$email</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//code to handle if customer is successfully registered  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> }  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}  
</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento check if customer registered in checkout page</title>
      <link>http://localhost:1313/magento-check-if-customer-registered-in-checkout-page/</link>
      <pubDate>Thu, 21 Aug 2014 20:49:54 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-check-if-customer-registered-in-checkout-page/</guid>
      <description>&lt;p&gt;If you want to check if the customer is guest, registered or just register to the site when they place the order, below script will help you identify that in success.phtml file.&lt;/p&gt;&#xA;&lt;p&gt;You can find success / order confirmation phtml file at:&lt;br&gt;&#xA;app/design/frontend/[package]/[theme]/template/checkout/success.phtml&lt;/p&gt;&#xA;&lt;p&gt;Just at the end of this file put below lines of code:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;?&lt;/span&gt;php &lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;sales/order&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b44&#34;&gt;loadByIncrementId&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getOrderId&lt;/span&gt;());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$quoteId&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getQuoteId&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$quote&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;quote’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$quoteId&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$method&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$quote&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCheckoutMethod&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;true&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$customer_email&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCustomerEmail&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$method&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt; ‘register’){ &lt;span style=&#34;color:#080&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;//code to handle if customer just registered to your site  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;&amp;lt;?php } elseif($method == &amp;#39;guest&amp;#39;) {??&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;//code to handle if customer is guest  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;&amp;lt;?php } else { ??&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;//code to handle for logged in customer  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;&amp;lt;?php } ??&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If you want to check if the customer is guest, registered or just register to the site when they place the order, below script will help you identify that in success.phtml file.</p>
<p>You can find success / order confirmation phtml file at:<br>
app/design/frontend/[package]/[theme]/template/checkout/success.phtml</p>
<p>Just at the end of this file put below lines of code:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#b8860b">$order</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(<span style="color:#b44">&#39;sales/order&#39;</span>)<span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">loadByIncrementId</span>(<span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getOrderId</span>());  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$quoteId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$order</span><span style="color:#666">-&gt;</span><span style="color:#b44">getQuoteId</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$quote</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>quote’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$quoteId</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$method</span> <span style="color:#666">=</span> <span style="color:#b8860b">$quote</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCheckoutMethod</span>(<span style="color:#a2f;font-weight:bold">true</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$customer_email</span> <span style="color:#666">=</span> <span style="color:#b8860b">$order</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCustomerEmail</span>();  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$method</span> <span style="color:#666">==</span> ‘register’){ <span style="color:#080">?&gt;</span><span style="">  
</span></span></span><span style="display:flex;"><span><span style="">//code to handle if customer just registered to your site  
</span></span></span><span style="display:flex;"><span><span style="">&lt;?php } elseif($method == &#39;guest&#39;) {??&gt;
</span></span></span><span style="display:flex;"><span><span style="">  
</span></span></span><span style="display:flex;"><span><span style="">//code to handle if customer is guest  
</span></span></span><span style="display:flex;"><span><span style="">&lt;?php } else { ??&gt;
</span></span></span><span style="display:flex;"><span><span style="">  
</span></span></span><span style="display:flex;"><span><span style="">//code to handle for logged in customer  
</span></span></span><span style="display:flex;"><span><span style="">&lt;?php } ??&gt;
</span></span></span><span style="display:flex;"><span><span style="">  
</span></span></span></code></pre></div></p>
<p>In the same file, success.phtml, you can request for order number, customer email, customer id, subtotal, grandtotal, order ID just created etc. like this:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$_customerId</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘customer<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCustomerId</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$lastOrderId</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘checkout<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getLastOrderId</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$order</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘sales<span style="color:#666">/</span>order’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$order</span><span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$lastOrderId</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$_totalData</span> <span style="color:#666">=</span><span style="color:#b8860b">$order</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$_sub</span> <span style="color:#666">=</span> <span style="color:#b8860b">$_totalData</span>[‘subtotal’];  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$_orderEmail</span> <span style="color:#666">=</span> <span style="color:#b8860b">$_totalData</span>[‘customer_email’];  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$_orderNumber</span> <span style="color:#666">=</span> <span style="color:#b8860b">$_totalData</span>[‘increment_id’];  
</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get State Code, ID, Name from Region ID</title>
      <link>http://localhost:1313/magento-get-state-code-id-name-from-region-id/</link>
      <pubDate>Wed, 25 Jun 2014 05:26:30 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-state-code-id-name-from-region-id/</guid>
      <description>&lt;p&gt;Magento get state name, ID, code from region ID or region code.&lt;/p&gt;&#xA;&lt;p&gt;Get state code from state id&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$region&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘directory&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;region’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$state_code&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$region&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCode&lt;/span&gt;(); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//CA&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Get state name from state id&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$region&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘directory&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;region’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$state_name&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$region&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getName&lt;/span&gt;(); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//California&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Get state id from state code&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$region&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘directory&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;region’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;loadByCode&lt;/span&gt;(‘CA’, ‘US’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$state_id&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$region&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getId&lt;/span&gt;(); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>Magento get state name, ID, code from region ID or region code.</p>
<p>Get state code from state id</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$region</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘directory<span style="color:#666">/</span>region’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#666">12</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$state_code</span> <span style="color:#666">=</span> <span style="color:#b8860b">$region</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCode</span>(); <span style="color:#080;font-style:italic">//CA
</span></span></span></code></pre></div>
<p>Get state name from state id</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$region</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘directory<span style="color:#666">/</span>region’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#666">12</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$state_name</span> <span style="color:#666">=</span> <span style="color:#b8860b">$region</span><span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>(); <span style="color:#080;font-style:italic">//California
</span></span></span></code></pre></div>
<p>Get state id from state code</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$region</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘directory<span style="color:#666">/</span>region’)<span style="color:#666">-&gt;</span><span style="color:#b44">loadByCode</span>(‘CA’, ‘US’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$state_id</span> <span style="color:#666">=</span> <span style="color:#b8860b">$region</span><span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>(); <span style="color:#080;font-style:italic">//12
</span></span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Sample apache virtualhost for your website</title>
      <link>http://localhost:1313/magento-sample-apache-virtualhost-for-your-website/</link>
      <pubDate>Sun, 22 Jun 2014 19:16:40 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-sample-apache-virtualhost-for-your-website/</guid>
      <description>&lt;p&gt;Sample apache virtualhost to point to your magento directory and run your local website with specified URL.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; &amp;lt;virtualhost&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; ServerAdmin webmaster@dummy-host.example.com  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; DocumentRoot “/var/www/magento/”  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; ServerName loca.lho.st  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; ServerAlias loca.lho.st  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; ErrorLog “logs/error_log”  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; CustomLog “logs/access_log” common  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;/virtualhost&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Add entry to /etc/hosts too:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; 127.0.0.1 loca.lho.st&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Restart apache (service httpd restart OR service apache2 restart) and point your browser location to:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; http://loca.lho.st&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;and you will see the website running from your /var/www/magento directory.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Sample apache virtualhost to point to your magento directory and run your local website with specified URL.</p>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;virtualhost&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> ServerAdmin webmaster@dummy-host.example.com  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> DocumentRoot “/var/www/magento/”  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> ServerName loca.lho.st  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> ServerAlias loca.lho.st  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> ErrorLog “logs/error_log”  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> CustomLog “logs/access_log” common  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">&lt;/virtualhost&gt;</span></span></span></code></pre></div>
<p>Add entry to /etc/hosts too:</p>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> 127.0.0.1 loca.lho.st</span></span></span></code></pre></div>
<p>Restart apache (service httpd restart OR service apache2 restart) and point your browser location to:<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> http://loca.lho.st</span></span></span></code></pre></div><br>
and you will see the website running from your /var/www/magento directory.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Clear all caches from command line</title>
      <link>http://localhost:1313/magento-clear-all-caches-from-command-line/</link>
      <pubDate>Sun, 22 Jun 2014 18:58:17 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-clear-all-caches-from-command-line/</guid>
      <description>&lt;p&gt;Magento clear all caches from command line, programatically from ssh. Clearing the caches is a must when you are making any configuration changes in your Magento website. Although you can always clear the cache from admin panel, sometimes for faster cleaning or unable to log into admin panel reason, it’s good to have a script which will clear all the caches in Magento.&lt;/p&gt;&#xA;&lt;p&gt;Create a file in your Magento root and name it clearCache.php with the below code:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;?&lt;/span&gt;php &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Start Cleaning all caches at ... &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; date(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Y-m-d H:i:s&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n\n&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ini_set(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;display_errors&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;require&lt;/span&gt; &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;app/Mage.php&amp;#39;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setUseSessionInUrl&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;false&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getConfig&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;init&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$types&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCacheInstance&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getTypes&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;try&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “Cleaning data cache… \\n”;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; flush();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$types&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$type&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$data&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “Removing &lt;span style=&#34;color:#b8860b&#34;&gt;$type&lt;/span&gt; … “;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCacheInstance&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;clean&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$data&lt;/span&gt;[“tags”]) &lt;span style=&#34;color:#666&#34;&gt;?&lt;/span&gt; “Cache cleared&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;” &lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; “There is some error&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;”;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “\\n”;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;catch&lt;/span&gt; (exception &lt;span style=&#34;color:#b8860b&#34;&gt;$e&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;die&lt;/span&gt;(“[ERROR&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;” &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$e&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getMessage&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; “]”);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “\\n”;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;try&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “Cleaning stored cache… “;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; flush();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCacheInstance&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;clean&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;?&lt;/span&gt; “Cache cleared&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;” &lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; “There is some error&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;”;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “\\n\\n”;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;catch&lt;/span&gt; (exception &lt;span style=&#34;color:#b8860b&#34;&gt;$e&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;die&lt;/span&gt;(“[ERROR&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;” &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$e&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getMessage&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; “]”);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;Make sure all the double quotes comes good in copy pasting.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento clear all caches from command line, programatically from ssh. Clearing the caches is a must when you are making any configuration changes in your Magento website. Although you can always clear the cache from admin panel, sometimes for faster cleaning or unable to log into admin panel reason, it’s good to have a script which will clear all the caches in Magento.</p>
<p>Create a file in your Magento root and name it clearCache.php with the below code:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b44">&#34;Start Cleaning all caches at ... &#34;</span> <span style="color:#666">.</span> date(<span style="color:#b44">&#34;Y-m-d H:i:s&#34;</span>) <span style="color:#666">.</span> <span style="color:#b44">&#34;</span><span style="color:#b62;font-weight:bold">\n\n</span><span style="color:#b44">&#34;</span>;
</span></span><span style="display:flex;"><span>ini_set(<span style="color:#b44">&#34;display_errors&#34;</span>, <span style="color:#666">1</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">require</span> <span style="color:#b44">&#39;app/Mage.php&#39;</span>;
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>(<span style="color:#b44">&#39;admin&#39;</span>)<span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">setUseSessionInUrl</span>(<span style="color:#a2f;font-weight:bold">false</span>);  
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">getConfig</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">init</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$types</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getCacheInstance</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getTypes</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">try</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “Cleaning data cache… \\n”;  
</span></span><span style="display:flex;"><span> flush();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$types</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$type</span> <span style="color:#666">=&gt;</span> <span style="color:#b8860b">$data</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “Removing <span style="color:#b8860b">$type</span> … “;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getCacheInstance</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">clean</span>(<span style="color:#b8860b">$data</span>[“tags”]) <span style="color:#666">?</span> “Cache cleared<span style="color:#666">!</span>” <span style="color:#666">:</span> “There is some error<span style="color:#666">!</span>”;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “\\n”;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">catch</span> (exception <span style="color:#b8860b">$e</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">die</span>(“[ERROR<span style="color:#666">:</span>” <span style="color:#666">.</span> <span style="color:#b8860b">$e</span><span style="color:#666">-&gt;</span><span style="color:#b44">getMessage</span>() <span style="color:#666">.</span> “]”);  
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> “\\n”;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">try</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “Cleaning stored cache… “;  
</span></span><span style="display:flex;"><span> flush();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getCacheInstance</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">clean</span>() <span style="color:#666">?</span> “Cache cleared<span style="color:#666">!</span>” <span style="color:#666">:</span> “There is some error<span style="color:#666">!</span>”;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “\\n\\n”;  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">catch</span> (exception <span style="color:#b8860b">$e</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">die</span>(“[ERROR<span style="color:#666">:</span>” <span style="color:#666">.</span> <span style="color:#b8860b">$e</span><span style="color:#666">-&gt;</span><span style="color:#b44">getMessage</span>() <span style="color:#666">.</span> “]”);  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span><span style="color:#080">?&gt;</span><span style="">
</span></span></span></code></pre></div><br>
Make sure all the double quotes comes good in copy pasting.</p>
<p>You can now run this script by the command “php -f clearCache.php” from your magento root location in terminal and this will start clearing all the caches for you! Once done, it will confirm by the message “Cache cleared!” or giving error message if it fails.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Enable logs on API calls</title>
      <link>http://localhost:1313/magento-enable-logs-on-api-calls/</link>
      <pubDate>Sun, 22 Jun 2014 18:16:23 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-enable-logs-on-api-calls/</guid>
      <description>&lt;p&gt;There is no setting to enable/disable API calls in Magento, but you can do so by modifying a file which handles all the API calls and logging the requests in a custom log file. This is useful when you know that there are many API calls being requested by third party applications to your website but not sure what is actually being called, how many times, and at what day and time.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>There is no setting to enable/disable API calls in Magento, but you can do so by modifying a file which handles all the API calls and logging the requests in a custom log file. This is useful when you know that there are many API calls being requested by third party applications to your website but not sure what is actually being called, how many times, and at what day and time.</p>
<p>With that said, open the file: app/code/core/Mage/Api/Model/Server/Handler/Abstract.php<br>
and find the function “call” which handles all the API calls. Scroll down the function and find the if block which says:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> (method_exists(<span style="color:#b8860b">$model</span>, <span style="color:#b8860b">$method</span>)) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (isset(<span style="color:#b8860b">$methodInfo</span><span style="color:#666">-&gt;</span><span style="color:#b44">arguments</span>) <span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp; ((string)<span style="color:#b8860b">$methodInfo</span><span style="color:#666">-&gt;</span><span style="color:#b44">arguments</span>) <span style="color:#666">==</span> ‘array’) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b8860b">$method</span>((is_array(<span style="color:#b8860b">$args</span>) <span style="color:#666">?</span> <span style="color:#b8860b">$args</span> <span style="color:#666">:</span> <span style="color:#a2f;font-weight:bold">array</span>(<span style="color:#b8860b">$args</span>)));  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">elseif</span> (<span style="color:#666">!</span>is_array(<span style="color:#b8860b">$args</span>)) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b8860b">$method</span>(<span style="color:#b8860b">$args</span>);  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> call_user_func_array(<span style="color:#a2f;font-weight:bold">array</span>(<span style="color:#666">&amp;</span>amp;<span style="color:#b8860b">$model</span>, <span style="color:#b8860b">$method</span>), <span style="color:#b8860b">$args</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">throw</span> <span style="color:#a2f;font-weight:bold">new</span> Mage_Api_Exception(‘resource_path_not_callable’);  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>and replace it with:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> (method_exists(<span style="color:#b8860b">$model</span>, <span style="color:#b8860b">$method</span>)) {  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">log</span>(<span style="color:#b8860b">$method</span>, <span style="color:#a2f;font-weight:bold">null</span>, ‘api<span style="color:#666">.</span>log’); <span style="color:#080;font-style:italic">//logs the method  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> Mage<span style="color:#666">::</span><span style="color:#b44">log</span>(<span style="color:#b8860b">$args</span>, <span style="color:#a2f;font-weight:bold">null</span>, ‘api<span style="color:#666">.</span>log’); <span style="color:#080;font-style:italic">//logs the arguments  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#a2f;font-weight:bold">if</span> (isset(<span style="color:#b8860b">$methodInfo</span><span style="color:#666">-&gt;</span><span style="color:#b44">arguments</span>) <span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp; ((string)<span style="color:#b8860b">$methodInfo</span><span style="color:#666">-&gt;</span><span style="color:#b44">arguments</span>) <span style="color:#666">==</span> ‘array’) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b8860b">$method</span>((is_array(<span style="color:#b8860b">$args</span>) <span style="color:#666">?</span> <span style="color:#b8860b">$args</span> <span style="color:#666">:</span> <span style="color:#a2f;font-weight:bold">array</span>(<span style="color:#b8860b">$args</span>)));  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">elseif</span> (<span style="color:#666">!</span>is_array(<span style="color:#b8860b">$args</span>)) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$model</span><span style="color:#666">-&gt;</span><span style="color:#b8860b">$method</span>(<span style="color:#b8860b">$args</span>);  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> call_user_func_array(<span style="color:#a2f;font-weight:bold">array</span>(<span style="color:#666">&amp;</span>amp;<span style="color:#b8860b">$model</span>, <span style="color:#b8860b">$method</span>), <span style="color:#b8860b">$args</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">throw</span> <span style="color:#a2f;font-weight:bold">new</span> Mage_Api_Exception(‘resource_path_not_callable’);  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>Now you should have your var/log/api.log file filled with the “method” and “arguments” requested by third party systems on your server. This should help you in knowing what was requested and at what time in your new log file.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento continue shopping link to last added product&#39;s category page</title>
      <link>http://localhost:1313/magento-continue-shopping-link-to-last-added-products-category-page/</link>
      <pubDate>Sun, 05 Jan 2014 16:35:54 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-continue-shopping-link-to-last-added-products-category-page/</guid>
      <description>&lt;p&gt;In Magento checkout cart, link Continue shopping button to last added product’s category page. Below code will check last added product’s id in cart and gets the last category assigned to the product.&lt;/p&gt;&#xA;&lt;p&gt;Put below code at the start of the checkout/cart.phtml file&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$lastProductIdAddedToCart&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSingleton&lt;/span&gt;(‘checkout&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;session’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getLastAddedProductId&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$lastProductIdAddedToCart&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$productCategoryIdsArray&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘catalog&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;product’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$lastProductIdAddedToCart&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCategoryIds&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//print_r($productCategoryIdsArray);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$continueShoppingCategoryUrl&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘catalog&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;category’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(end(&lt;span style=&#34;color:#b8860b&#34;&gt;$productCategoryIdsArray&lt;/span&gt;))&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getUrl&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Replace continue shopping button with below code, in the checkout/cart.phtml file&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;?&lt;/span&gt;php &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getContinueShoppingUrl&lt;/span&gt;())&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt; &amp;lt;button title=&amp;#34;&amp;lt;?php echo $this-&amp;gt;__(‘Continue Shopping’) ?&amp;gt;” class=”button btn-continue” onclick=”setLocation(‘&amp;lt;?php echo (isset($continueShoppingCategoryUrl)) ? $continueShoppingCategoryUrl : $this-&amp;gt;getContinueShoppingUrl(); ?&amp;gt;’)”&amp;gt;&amp;lt;span&amp;gt;&amp;lt;span&amp;gt;&amp;lt;?php echo $this-&amp;gt;__(‘Continue Shopping’) ?&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/button&amp;gt;&amp;lt;br /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;&amp;lt;?php endif; ?&amp;gt; &amp;#34; type=&amp;#34;button&amp;#34;&amp;gt;&amp;lt;/button&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In Magento checkout cart, link Continue shopping button to last added product’s category page. Below code will check last added product’s id in cart and gets the last category assigned to the product.</p>
<p>Put below code at the start of the checkout/cart.phtml file<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$lastProductIdAddedToCart</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘checkout<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getLastAddedProductId</span>();  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$lastProductIdAddedToCart</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$productCategoryIdsArray</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$lastProductIdAddedToCart</span>)<span style="color:#666">-&gt;</span><span style="color:#b44">getCategoryIds</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//print_r($productCategoryIdsArray);  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$continueShoppingCategoryUrl</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>category’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(end(<span style="color:#b8860b">$productCategoryIdsArray</span>))<span style="color:#666">-&gt;</span><span style="color:#b44">getUrl</span>();  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div></p>
<p>Replace continue shopping button with below code, in the checkout/cart.phtml file<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span> <span style="color:#666">&lt;?</span>php <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getContinueShoppingUrl</span>())<span style="color:#666">:</span> <span style="color:#080">?&gt;</span><span style="">  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;button title=&#34;&lt;?php echo $this-&gt;__(‘Continue Shopping’) ?&gt;” class=”button btn-continue” onclick=”setLocation(‘&lt;?php echo (isset($continueShoppingCategoryUrl)) ? $continueShoppingCategoryUrl : $this-&gt;getContinueShoppingUrl(); ?&gt;’)”&gt;&lt;span&gt;&lt;span&gt;&lt;?php echo $this-&gt;__(‘Continue Shopping’) ?&gt;&lt;/span&gt;&lt;/span&gt;&lt;/button&gt;&lt;br /&gt;
</span></span></span><span style="display:flex;"><span><span style="">&lt;?php endif; ?&gt; &#34; type=&#34;button&#34;&gt;&lt;/button&gt;
</span></span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento display categories and sub-categories</title>
      <link>http://localhost:1313/magento-display-categories-and-sub-categories/</link>
      <pubDate>Sun, 05 Jan 2014 14:40:21 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-display-categories-and-sub-categories/</guid>
      <description>&lt;p&gt;Magento display categories and sub-categories. Below code will show all the parent and child categories along with show/hide functionalities by jQuery.&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;div class=&amp;#34;block block-layered-nav&amp;#34;&amp;gt;&amp;lt;div class=&amp;#34;block-title&amp;#34;&amp;gt; **&amp;lt;span&amp;gt;&amp;lt;?php echo $this-&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;__(‘Shop By Category’) ?&amp;gt;&amp;lt;/span&amp;gt;** &amp;lt;/div&amp;gt;&amp;lt;div class=&amp;#34;block-content&amp;#34;&amp;gt; &amp;lt;?php $productid = Mage::registry(&amp;#39;current_product&amp;#39;)-&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;getId();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; $product = Mage::getSingleton(‘catalog/product’)-&amp;gt;load($productid);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; $parentIds = $product-&amp;gt;getCategoryIds();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; $parentId = $parentIds[0];  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; $_categories = Mage::getBlockSingleton(‘catalog/navigation’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; foreach ($_categories-&amp;gt;getStoreCategories() as $_category) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; $category = Mage::getModel(‘catalog/category’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; $category-&amp;gt;load($_category-&amp;gt;getId());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; $subcategories = explode(‘,’, $category-&amp;gt;getChildren());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; if(!in_array($_category-&amp;gt;getId(),$parentIds)) { $hide=”display:none”; $inactive=”inactive”; } else { $hide=””; $inactive=”active”; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; ?&amp;gt; &amp;lt;div style=&amp;#34;padding:5px 5px 0px 10px&amp;#34;&amp;gt;&amp;lt;div child=&amp;#34;&amp;#34; class=&amp;#34;cat parent &amp;lt;?php echo $inactive;?&amp;gt;” style=”font-size:15px”&amp;gt;&amp;lt;?php echo $_category-&amp;gt;getName() ?&amp;gt;&amp;lt;/div&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;div class=&amp;#34; style=&amp;#34;&amp;lt;?php echo $hide;?&amp;gt;“&amp;gt;&amp;lt;br /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;                         &amp;lt;?php foreach ($subcategories as $subcategoryId) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;                                $category-&amp;gt;load($subcategoryId);&amp;lt;br /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;                                if($category-&amp;gt;getChildren() == ”) {&amp;lt;br /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;                                        if(in_array($subcategoryId,$parentIds)) { $bold = “font-weight:bold”; } else { $bold = “”; }&amp;lt;br /&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;                                      echo ‘&amp;lt;/p&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;div class=&amp;#34; subcat=&amp;#34;&amp;#34;&amp;gt;[&amp;lt;div class=&amp;#34;parent active&amp;#34;&amp;gt;&amp;lt;?php echo $category-&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;getName() ?&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;#34;child&amp;#34;&amp;gt; &amp;lt;?php $subsubcategories = explode(&amp;#39;,&amp;#39;, $category-&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;getChildren());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; foreach($subsubcategories as $subsubcatid) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; if(in_array($subsubcatid, $parentIds)) { $bold = “font-weight:bold”; } else { $bold = “”; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; $category-&amp;gt;load($subsubcatid);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; echo ‘ &amp;lt;div style=&amp;#34;padding-left:10px;&amp;#39;.$bold.&amp;#39;&amp;#34;&amp;gt;[ jQuery(&amp;#39;.block-content .cat&amp;#39;).click(function(){ var t = jQuery(this); if(jQuery(this).next().css(&amp;#39;display&amp;#39;)==&amp;#39;none&amp;#39;) { jQuery(&amp;#39;.col-left .block-content .child&amp;#39;).hide(); t.next().show(); t.next().find(&amp;#39;div.child&amp;#39;).show(&amp;#34;slow&amp;#34;); } else { t.next().hide(); t.next().find(&amp;#39;div.child&amp;#39;).hide(&amp;#34;slow&amp;#34;); } }); &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt; ](&amp;lt;&amp;rsquo; . $category-&amp;gt;getURL() . ‘”&amp;gt;’ . $category-&amp;gt;getName() . ‘&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento display categories and sub-categories. Below code will show all the parent and child categories along with show/hide functionalities by jQuery.</p>
<p>



<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> 
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">&lt;div class=&#34;block block-layered-nav&#34;&gt;&lt;div class=&#34;block-title&#34;&gt; **&lt;span&gt;&lt;?php echo $this-&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">__(‘Shop By Category’) ?&gt;&lt;/span&gt;** &lt;/div&gt;&lt;div class=&#34;block-content&#34;&gt; &lt;?php $productid = Mage::registry(&#39;current_product&#39;)-&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">getId();  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $product = Mage::getSingleton(‘catalog/product’)-&gt;load($productid);  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $parentIds = $product-&gt;getCategoryIds();  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $parentId = $parentIds[0];  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $_categories = Mage::getBlockSingleton(‘catalog/navigation’);  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> foreach ($_categories-&gt;getStoreCategories() as $_category) {  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $category = Mage::getModel(‘catalog/category’);  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $category-&gt;load($_category-&gt;getId());  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $subcategories = explode(‘,’, $category-&gt;getChildren());  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> if(!in_array($_category-&gt;getId(),$parentIds)) { $hide=”display:none”; $inactive=”inactive”; } else { $hide=””; $inactive=”active”; }  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> ?&gt; &lt;div style=&#34;padding:5px 5px 0px 10px&#34;&gt;&lt;div child=&#34;&#34; class=&#34;cat parent &lt;?php echo $inactive;?&gt;” style=”font-size:15px”&gt;&lt;?php echo $_category-&gt;getName() ?&gt;&lt;/div&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">&lt;div class=&#34; style=&#34;&lt;?php echo $hide;?&gt;“&gt;&lt;br /&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">                         &lt;?php foreach ($subcategories as $subcategoryId) {
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">                                $category-&gt;load($subcategoryId);&lt;br /&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">                                if($category-&gt;getChildren() == ”) {&lt;br /&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">                                        if(in_array($subcategoryId,$parentIds)) { $bold = “font-weight:bold”; } else { $bold = “”; }&lt;br /&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">                                      echo ‘&lt;/p&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">&lt;div class=&#34; subcat=&#34;&#34;&gt;[&lt;div class=&#34;parent active&#34;&gt;&lt;?php echo $category-&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">getName() ?&gt;&lt;/div&gt;&lt;div class=&#34;child&#34;&gt; &lt;?php $subsubcategories = explode(&#39;,&#39;, $category-&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">getChildren());  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> foreach($subsubcategories as $subsubcatid) {  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> if(in_array($subsubcatid, $parentIds)) { $bold = “font-weight:bold”; } else { $bold = “”; }  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> $category-&gt;load($subsubcatid);  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> echo ‘ &lt;div style=&#34;padding-left:10px;&#39;.$bold.&#39;&#34;&gt;[ jQuery(&#39;.block-content .cat&#39;).click(function(){ var t = jQuery(this); if(jQuery(this).next().css(&#39;display&#39;)==&#39;none&#39;) { jQuery(&#39;.col-left .block-content .child&#39;).hide(); t.next().show(); t.next().find(&#39;div.child&#39;).show(&#34;slow&#34;); } else { t.next().hide(); t.next().find(&#39;div.child&#39;).hide(&#34;slow&#34;); } }); </span></span></span></code></pre></div> ](&lt;&rsquo; . $category-&gt;getURL() . ‘”&gt;’ . $category-&gt;getName() . ‘<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<!-- raw HTML omitted -->
<pre><code>    } ?&gt;
&lt;/div&gt;
</code></pre>
<!-- raw HTML omitted -->
]]></content:encoded>
    </item>
    <item>
      <title>Magento Redis read error on connection</title>
      <link>http://localhost:1313/magento-redis-read-error-on-connection/</link>
      <pubDate>Sun, 01 Dec 2013 19:57:02 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-redis-read-error-on-connection/</guid>
      <description>&lt;p&gt;Magento read error on connection when using Redis. If you are using Redis as cache in Magento and read timeout is not specified, you may get this error. Below is how it looks in the error report.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; read error on connection&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;Trace:  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#1 lib/Mage/Cache/Backend/Redis.php(210): Credis_Client-&amp;gt;hGet(‘zc:k:0cd_FPC_DE…’, ‘d’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#2 lib/Zend/Cache/Core.php(303): Mage_Cache_Backend_Redis-&amp;gt;load(‘0cd_FPC_DESIGN_…’, false)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#3 lib/Varien/Cache/Core.php(158): Zend_Cache_Core-&amp;gt;load(‘FPC_DESIGN_EXCE…’, false, false)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#4 app/code/core/Mage/Core/Model/Cache.php(379): Varien_Cache_Core-&amp;gt;load(‘FPC_DESIGN_EXCE…’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#5 app/code/core/Enterprise/PageCache/Model/Processor.php(185): Mage_Core_Model_Cache-&amp;gt;load(‘FPC_DESIGN_EXCE…’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#6 app/code/core/Enterprise/PageCache/Model/Processor.php(146): Enterprise_PageCache_Model_Processor-&amp;gt;_getDesignPackage()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#7 app/code/core/Enterprise/PageCache/Model/Processor.php(108): Enterprise_PageCache_Model_Processor-&amp;gt;_createRequestIds()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#8 app/code/core/Mage/Core/Model/Cache.php(703): Enterprise_PageCache_Model_Processor-&amp;gt;__construct()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#9 app/code/core/Mage/Core/Model/Cache.php(685): Mage_Core_Model_Cache-&amp;gt;_getProcessor(‘Enterprise_Page…’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#10 app/code/core/Mage/Core/Model/App.php(340): Mage_Core_Model_Cache-&amp;gt;processRequest()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#11 app/Mage.php(683): Mage_Core_Model_App-&amp;gt;run(Array)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\#12 /var/www/source/index.php(87): Mage::run(”, ‘store’)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;The solution (atleast for us) was to add a read_timeout config option in app/etc/local.xml where you have configured Redis cache for Magento.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento read error on connection when using Redis. If you are using Redis as cache in Magento and read timeout is not specified, you may get this error. Below is how it looks in the error report.</p>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> read error on connection
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">Trace:  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#1 lib/Mage/Cache/Backend/Redis.php(210): Credis_Client-&gt;hGet(‘zc:k:0cd_FPC_DE…’, ‘d’)  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#2 lib/Zend/Cache/Core.php(303): Mage_Cache_Backend_Redis-&gt;load(‘0cd_FPC_DESIGN_…’, false)  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#3 lib/Varien/Cache/Core.php(158): Zend_Cache_Core-&gt;load(‘FPC_DESIGN_EXCE…’, false, false)  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#4 app/code/core/Mage/Core/Model/Cache.php(379): Varien_Cache_Core-&gt;load(‘FPC_DESIGN_EXCE…’)  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#5 app/code/core/Enterprise/PageCache/Model/Processor.php(185): Mage_Core_Model_Cache-&gt;load(‘FPC_DESIGN_EXCE…’)  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#6 app/code/core/Enterprise/PageCache/Model/Processor.php(146): Enterprise_PageCache_Model_Processor-&gt;_getDesignPackage()  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#7 app/code/core/Enterprise/PageCache/Model/Processor.php(108): Enterprise_PageCache_Model_Processor-&gt;_createRequestIds()  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#8 app/code/core/Mage/Core/Model/Cache.php(703): Enterprise_PageCache_Model_Processor-&gt;__construct()  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#9 app/code/core/Mage/Core/Model/Cache.php(685): Mage_Core_Model_Cache-&gt;_getProcessor(‘Enterprise_Page…’)  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#10 app/code/core/Mage/Core/Model/App.php(340): Mage_Core_Model_Cache-&gt;processRequest()  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#11 app/Mage.php(683): Mage_Core_Model_App-&gt;run(Array)  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\#12 /var/www/source/index.php(87): Mage::run(”, ‘store’)</span></span></span></code></pre></div>
<p>The solution (atleast for us) was to add a read_timeout config option in app/etc/local.xml where you have configured Redis cache for Magento.</p>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;cache&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;backend&gt;Mage_Cache_Backend_Redis&lt;/backend&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;backend_options&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;server&gt;127.0.0.1&lt;/server&gt; &lt;port&gt;6379&lt;/port&gt; &lt;persistent&gt;&lt;/persistent&gt; &lt;database&gt;0&lt;/database&gt; &lt;password&gt;&lt;/password&gt; &lt;force_standalone&gt;0&lt;/force_standalone&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;connect_retries&gt;1&lt;/connect_retries&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;read_timeout&gt;10&lt;/read_timeout&gt; &lt;lifetimelimit&gt;57600&lt;/lifetimelimit&gt; &lt;compress_data&gt;0&lt;/compress_data&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;/backend_options&gt;  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">&lt;/cache&gt;</span></span></span></code></pre></div>
<p>HTH!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento enterprise: show top mini cart when product is added to cart</title>
      <link>http://localhost:1313/magento-enterprise-show-top-mini-cart-when-product-is-added-to-cart/</link>
      <pubDate>Sun, 17 Nov 2013 11:40:23 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-enterprise-show-top-mini-cart-when-product-is-added-to-cart/</guid>
      <description>&lt;p&gt;Magento Enterprise comes with a top header mini-cart, which displays all the items with their custom options added to cart, when you click on My Cart in the header. This is a good feature, but what if you want to show this mini-cart each time a product is added, without clicking on that link? I will show you here how to display your mini cart automatically when a product is added to cart.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento Enterprise comes with a top header mini-cart, which displays all the items with their custom options added to cart, when you click on My Cart in the header. This is a good feature, but what if you want to show this mini-cart each time a product is added, without clicking on that link? I will show you here how to display your mini cart automatically when a product is added to cart.</p>
<p>Open your cartheader.php file, which is located at:<br>
<em>app/design/frontend/enterprise/YOUR_DESIGN/template/checkout/cart/cartheader.phtml</em></p>
<p>In the last few lines of this file, you should find the below line in javascript:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span>Enterprise.TopCart.initialize(<span style="">‘</span>topCartContent<span style="">’</span>);  
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">// Below can be used to show minicart after item added  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">// Enterprise.TopCart.showCart(7);
</span></span></span></code></pre></div>
<p>Replace the last line, <strong>//Enterprise.TopCart.showCart(7);</strong> with the below lines:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span>jQuery( <span style="color:#a2f">document</span> ).ready(<span style="color:#a2f;font-weight:bold">function</span>() {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>( jQuery(<span style="">‘#</span>messages_product_view<span style="">’</span>).children().length ){  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(jQuery(<span style="">‘#</span>messages_product_view<span style="">’</span>).children().children().attr(<span style="">‘</span><span style="color:#a2f;font-weight:bold">class</span><span style="">’</span>) <span style="color:#666">==</span> <span style="">‘</span>success<span style="color:#666">-</span>msg<span style="">’</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(jQuery(<span style="">‘</span>.success<span style="color:#666">-</span>msg ul li span<span style="">’</span>).text().indexOf(<span style="">‘</span>was added to your shopping cart<span style="">’</span>) <span style="color:#666">&gt;</span> <span style="color:#666">-</span><span style="color:#666">1</span>) {  
</span></span><span style="display:flex;"><span> Enterprise.TopCart.showCart(<span style="color:#666">7</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>});</span></span></code></pre></div>
<p>So whenever in the page, there will be an element with ID “#messages_product_view” and it has a children with class “success-msg” and it has a ul/li/span with text containing “was added to your shopping cart”, we will show the top mini-cart. This is only true when an product is added to shopping cart.</p>
<p>You can also show top mini-cart without this jquery hack, by making a new module in Magento and catch the event when product is added to cart. Then programmatically clicking the top mini cart to display it. But according to me this small piece of code is better than to create whole new Magento module.</p>
<p>HTH!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento remove session id from URL</title>
      <link>http://localhost:1313/magento-remove-session-id-from-url/</link>
      <pubDate>Sun, 03 Nov 2013 20:00:28 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-remove-session-id-from-url/</guid>
      <description>&lt;p&gt;Magento displays session ID in url, something like:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; http://loca.lho.st?__SID=2wewesfdgfsdm&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;You can remove this in two ways:&lt;/p&gt;&#xA;&lt;p&gt;1. Go to your &lt;strong&gt;Magento admin panel &amp;gt; System &amp;gt; Configuration &amp;gt; Web&lt;/strong&gt;.&lt;br&gt;&#xA;Under Session Validation Settings, set “No” against label “Use SID on the Frontend”.&lt;br&gt;&#xA;If this doesn’t work, then move to option two below.&lt;/p&gt;&#xA;&lt;p&gt;2. Edit the file at &lt;strong&gt;app/code/core/Mage/Core/Model/App.php&lt;/strong&gt; (somewhere around line 222),&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$_useSessionInUrl&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;Change that value to “false”. That should now prevent session IDs appearing in URL.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento displays session ID in url, something like:<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> http://loca.lho.st?__SID=2wewesfdgfsdm</span></span></span></code></pre></div></p>
<p>You can remove this in two ways:</p>
<p>1. Go to your <strong>Magento admin panel &gt; System &gt; Configuration &gt; Web</strong>.<br>
Under Session Validation Settings, set “No” against label “Use SID on the Frontend”.<br>
If this doesn’t work, then move to option two below.</p>
<p>2. Edit the file at <strong>app/code/core/Mage/Core/Model/App.php</strong> (somewhere around line 222),<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">protected</span> <span style="color:#b8860b">$_useSessionInUrl</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">true</span>;</span></span></code></pre></div><br>
Change that value to “false”. That should now prevent session IDs appearing in URL.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento debug XML (layout, config) files</title>
      <link>http://localhost:1313/magento-debug-xml-layout-config-files/</link>
      <pubDate>Sat, 17 Aug 2013 18:37:02 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-debug-xml-layout-config-files/</guid>
      <description>&lt;p&gt;In Magento if there is any error in XML file, Magento silently ignores it and continues further parsing. So you never get to know where is the actual error and makes it difficult to debug. You can’t even do any logging in XML file and also Magento don’t tell that error is in XML. It makes debugging almost impossible and ends up wasting in hours to find some silly mistake.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In Magento if there is any error in XML file, Magento silently ignores it and continues further parsing. So you never get to know where is the actual error and makes it difficult to debug. You can’t even do any logging in XML file and also Magento don’t tell that error is in XML. It makes debugging almost impossible and ends up wasting in hours to find some silly mistake.</p>
<p>But we can know if there is any error in XML (layout.xml or config.xml or any xml file) if you use below code in the controller action which is being called. The browser will display WHOLE XML code and if it encounters any error in it, simply gives where is the error in the XML tree.</p>
<p>If you are trying to load let’s say Product View page, then put this code in Mage/Catalog/controllers/ProductController.php file’s viewAction() method temporarily to display whole XML tree to find out error(s) if any. As we are saying to display the page as XML, the page will break if it finds any mal-formed XML code and will show where is the mistake.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>header(“Content<span style="color:#666">-</span>Type<span style="color:#666">:</span> text<span style="color:#666">/</span>xml”);  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getConfig</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getNode</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">asXml</span>();<span style="color:#a2f;font-weight:bold">exit</span>;</span></span></code></pre></div>
<p>If you want to debug Layout Handles only, you can just check by this code:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>header(“Content<span style="color:#666">-</span>Type<span style="color:#666">:</span> text<span style="color:#666">/</span>xml”);  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getLayout</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getUpdate</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getHandles</span>();<span style="color:#a2f;font-weight:bold">exit</span>;</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento delete empty categories and sub-categories</title>
      <link>http://localhost:1313/magento-delete-empty-categories-and-sub-categories/</link>
      <pubDate>Sat, 17 Aug 2013 14:36:45 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-delete-empty-categories-and-sub-categories/</guid>
      <description>&lt;p&gt;Remove all empty categories and sub-categories in Magento. When there are empty categories, the website shows empty page in those categories in frontend. Create a file in the magento root, I will name it rmvEmptyCats.php, with following code:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;require&lt;/span&gt; “app&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;php”;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umask(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$categoryCollection&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘catalog&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;category’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCollection&lt;/span&gt;()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addFieldToFilter&lt;/span&gt;(‘level’, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(‘gteq’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;)); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//greater than root category id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$categoryCollection&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$category&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$category&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getProductCount&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$category&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;delete&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘Empty Categories Deleted&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;’;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Now you can easily run it by navigating to &lt;a href=&#34;http://loca.lho.st/rmvEmptyCats.php&#34;&gt;http://loca.lho.st/rmvEmptyCats.php&lt;/a&gt; and wait for the message Empty Categories Deleted!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Remove all empty categories and sub-categories in Magento. When there are empty categories, the website shows empty page in those categories in frontend. Create a file in the magento root, I will name it rmvEmptyCats.php, with following code:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">require</span> “app<span style="color:#666">/</span>Mage<span style="color:#666">.</span>php”;  
</span></span><span style="display:flex;"><span>umask(<span style="color:#666">0</span>);  
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$categoryCollection</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>category’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCollection</span>()  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addFieldToFilter</span>(‘level’, <span style="color:#a2f;font-weight:bold">array</span>(‘gteq’ <span style="color:#666">=&gt;</span> <span style="color:#666">2</span>)); <span style="color:#080;font-style:italic">//greater than root category id
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$categoryCollection</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$category</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$category</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProductCount</span>() <span style="color:#666">===</span> <span style="color:#666">0</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$category</span><span style="color:#666">-&gt;</span><span style="color:#b44">delete</span>();  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> ‘Empty Categories Deleted<span style="color:#666">!</span>’;</span></span></code></pre></div>
<p>Now you can easily run it by navigating to <a href="http://loca.lho.st/rmvEmptyCats.php">http://loca.lho.st/rmvEmptyCats.php</a> and wait for the message Empty Categories Deleted!</p>
<p>Note that this is going to DELETE those categories with zero product count.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento convert attribute type from TEXT to DROPDOWN</title>
      <link>http://localhost:1313/magento-convert-attribute-type-from-text-to-dropdown/</link>
      <pubDate>Tue, 13 Aug 2013 23:15:44 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-convert-attribute-type-from-text-to-dropdown/</guid>
      <description>&lt;p&gt;Magento convert attribute type from TEXT (varchar) to DROPDOWN / SELECT (int) in Backend.&lt;br&gt;&#xA;Magento doesn’t have this in-built so we will have to do it in our own way. We will convert our existing attribute which is in TEXT type, to DROPDOWN (select). Let’s say our attribute code is “vendor”, you will need to replace it with your own attribute code in all the code below.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: All the coupon codes that uses this attribute for discounts/promotions will GO AWAY! Please note down all the coupon code Conditions and Actions (which uses this attribute) before converting the attribute.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento convert attribute type from TEXT (varchar) to DROPDOWN / SELECT (int) in Backend.<br>
Magento doesn’t have this in-built so we will have to do it in our own way. We will convert our existing attribute which is in TEXT type, to DROPDOWN (select). Let’s say our attribute code is “vendor”, you will need to replace it with your own attribute code in all the code below.</p>
<p><strong>WARNING</strong>: All the coupon codes that uses this attribute for discounts/promotions will GO AWAY! Please note down all the coupon code Conditions and Actions (which uses this attribute) before converting the attribute.</p>
<p><strong>Step 1.)</strong> Backup your database.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-mariadb" data-lang="mariadb"><span style="display:flex;"><span>mysqldump<span style="color:#bbb"> </span><span style="color:#666">-</span>u<span style="color:#bbb"> </span>mysqluser<span style="color:#bbb"> </span><span style="color:#666">-</span>p<span style="color:#bbb"> </span>mysqldbname<span style="color:#bbb"> </span><span style="color:#666">&gt;</span><span style="color:#bbb"> </span>mysqldbname_backup.<span style="color:#a2f;font-weight:bold">sql</span></span></span></code></pre></div></p>
<p><strong>Step 2.)</strong> Export all the values of the attribute you want to convert in a CSV file. For that, create a file vendor.php (your_attribute.php) in your magento root with following code inside it:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">require</span> “app<span style="color:#666">/</span>Mage<span style="color:#666">.</span>php”;  
</span></span><span style="display:flex;"><span>umask(<span style="color:#666">0</span>);  
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$collection</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">getCollection</span>()  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘sku’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘vendor’); <span style="color:#080;font-style:italic">//replace vendor with your attribute code
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$data</span> <span style="color:#666">=</span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$data</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$product</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$product</span>[‘entity_id’] <span style="color:#666">.</span> “,” <span style="color:#666">.</span> <span style="color:#b8860b">$product</span>[‘vendor’]<span style="color:#666">.</span>”\\n”;  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div></p>
<p>After saving the above code, run it from command line:</p>
<p>



<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> php vendor.php &gt; vendor.csv</span></span></span></code></pre></div><br>
You should now have all the attribute’s data with product ID in the vendor.csv (your_attribute.csv) file.</p>
<p><strong>Step 3.)</strong> Now get all the unique values you have in the attribute’s data, which we will be filling them as options of select dropdown.<br>
Run following mysql command to get all the unique values and copy them in a new file:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-mariadb" data-lang="mariadb"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">select</span><span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">distinct</span><span style="color:#bbb"> </span>value<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">from</span><span style="color:#bbb"> </span>catalog_product_entity_varchar<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">where</span><span style="color:#bbb"> </span>attribute_id<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">in</span><span style="color:#bbb"> </span>(<span style="color:#a2f;font-weight:bold">select</span><span style="color:#bbb"> </span>attribute_id<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">from</span><span style="color:#bbb"> </span>eav_attribute<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">where</span><span style="color:#bbb"> </span>attribute_code<span style="color:#666">=</span><span style="">’</span>vendor<span style="">’</span>);<span style="color:#bbb"> </span><span style="color:#666">//</span><span style="color:#a2f;font-weight:bold">replace</span><span style="color:#bbb"> </span>vendor<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">with</span><span style="color:#bbb"> </span>your<span style="color:#bbb"> </span>own<span style="color:#bbb"> </span>attribute<span style="color:#bbb"> </span>code</span></span></code></pre></div></p>
<p>After this step, we have all the attribute’s data in CSV file, and all the UNIQUE attribute values.</p>
<p><strong>Step 4.)</strong> Note all the settings of the attribute and Delete the attribute from backend Manage Attributes screen. Now create new attribute from there with SAME attribute code but different Frontend Type (Dropdown). Rest all the settings will be same as you had it before. Save it. Go to Manage Attribute Sets page and assign the attribute to the Group it was assigned to before.</p>
<p><strong>Step 5.)</strong> Now we have to insert all the options to this attribute so that the values are shown in the dropdown. Edit your vendor.php file and replace the code with below:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">require</span> “app<span style="color:#666">/</span>Mage<span style="color:#666">.</span>php”;  
</span></span><span style="display:flex;"><span>umask(<span style="color:#666">0</span>);  
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$installer</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">new</span> Mage_Eav_Model_Entity_Setup(‘core_setup’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$installer</span><span style="color:#666">-&gt;</span><span style="color:#b44">startSetup</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Change this….  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$values</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>(“val1″,”val2”); <span style="color:#080;font-style:italic">//your unique attributes values that you copied in a new file  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$attrCode</span> <span style="color:#666">=</span> ‘vendor’; <span style="color:#080;font-style:italic">//your attribute code here  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//……..
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$values</span> <span style="color:#666">=</span> array_map(‘utf8_encode’,<span style="color:#b8860b">$values</span>); <span style="color:#080;font-style:italic">//If you’re using special characters  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$iProductEntityTypeId</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">getResource</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getTypeId</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$aOption</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$aOption</span>[‘attribute_id’] <span style="color:#666">=</span> <span style="color:#b8860b">$installer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAttributeId</span>(<span style="color:#b8860b">$iProductEntityTypeId</span>, <span style="color:#b8860b">$attrCode</span>);  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">for</span>(<span style="color:#b8860b">$iCount</span><span style="color:#666">=</span><span style="color:#666">0</span>;<span style="color:#b8860b">$iCount</span><span style="color:#666">&lt;</span>sizeof<span style="color:#666">&gt;</span>addAttributeOption(<span style="color:#b8860b">$aOption</span>);<span style="color:#666">&lt;/</span>sizeof<span style="color:#666">&gt;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$installer</span><span style="color:#666">-&gt;</span><span style="color:#b44">endSetup</span>();</span></span></code></pre></div></p>
<p>After running this, check your attribute manage page and see if all the values are updated or not. You can find the values in “Manage Labels/Options” tab of attribute’s Manage Attributes screen.</p>
<p><strong>Step 6.)</strong> Now comes the main part which will insert the attribute values in the database. The old values are stored in catalog_product_entity_varchar (text type), while now the values should go to catalog_product_entity_int (dropdown type). Replace your vendor.php file with below code:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">require</span> “app<span style="color:#666">/</span>Mage<span style="color:#666">.</span>php”;  
</span></span><span style="display:flex;"><span>umask(<span style="color:#666">0</span>);  
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$attribute</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘eav<span style="color:#666">/</span>config’)<span style="color:#666">-&gt;</span><span style="color:#b44">getAttribute</span>(‘catalog_product’, ‘vendor’); <span style="color:#080;font-style:italic">//change to your attribute code  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$allOptions</span> <span style="color:#666">=</span> <span style="color:#b8860b">$attribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSource</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getAllOptions</span>(<span style="color:#a2f;font-weight:bold">true</span>, <span style="color:#a2f;font-weight:bold">true</span>);  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$allOptions</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$instance</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$myArray</span>[<span style="color:#b8860b">$instance</span>[‘label’]] <span style="color:#666">=</span> <span style="color:#b8860b">$instance</span>[‘value’];  
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> ((<span style="color:#b8860b">$handle</span> <span style="color:#666">=</span> fopen(“vendor<span style="color:#666">.</span>csv”, “r”)) <span style="color:#666">!==</span> <span style="color:#a2f;font-weight:bold">FALSE</span>) { <span style="color:#080;font-style:italic">//change to your attribute .csv file  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#a2f;font-weight:bold">while</span> ((<span style="color:#b8860b">$data</span> <span style="color:#666">=</span> fgetcsv(<span style="color:#b8860b">$handle</span>, <span style="color:#666">1000</span>, “,”)) <span style="color:#666">!==</span> <span style="color:#a2f;font-weight:bold">FALSE</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">list</span>(<span style="color:#b8860b">$_id</span>, <span style="color:#b8860b">$_value</span>) <span style="color:#666">=</span> <span style="color:#b8860b">$data</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$product</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$_id</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">setVendor</span>(<span style="color:#b8860b">$myArray</span>[<span style="color:#b8860b">$_value</span>]); <span style="color:#080;font-style:italic">//setVendor should be setYourAttributeCode
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">try</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getResource</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">saveAttribute</span>(<span style="color:#b8860b">$product</span>, ‘vendor’); <span style="color:#080;font-style:italic">//change to your attribute code  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> } <span style="color:#a2f;font-weight:bold">catch</span>(Exception <span style="color:#b8860b">$e</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$_id</span> <span style="color:#666">.</span>”<span style="color:#666">:</span>”<span style="color:#666">.</span> <span style="color:#b8860b">$e</span><span style="color:#666">-&gt;</span><span style="color:#b44">getMessage</span>() <span style="color:#666">.</span>”\\n”;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> fclose(<span style="color:#b8860b">$handle</span>);  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>Run the file, it will take time to complete depending on how many values you had for that attribute.</p>
<p><strong>Step 7.)</strong> Clear cache, Re-index the indexes.</p>
<p>Done!<br>
Test it thoroughly.<br>
Based on my Magento Stackexchange question: <a href="http://magento.stackexchange.com/questions/6707/convert-attribute-type-from-text-to-dropdown/6710">http://magento.stackexchange.com/questions/6707/convert-attribute-type-from-text-to-dropdown/6710</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento how to remove order</title>
      <link>http://localhost:1313/magento-how-to-remove-order/</link>
      <pubDate>Sun, 11 Aug 2013 19:38:44 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-how-to-remove-order/</guid>
      <description>&lt;p&gt;First of all, removing live orders is not recommended. But if you are sure you want to remove orders (test orders?) then you can do so by custom script below. Get the order increment id(s) of the order you wish to delete from Magento. Remember, once order is deleted you can’t get any related information of that order.&lt;/p&gt;&#xA;&lt;p&gt;Create a test PHP file in your Magento project root with below code:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;require&lt;/span&gt; ‘app&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;php’;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;(‘admin’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setUseSessionInUrl&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;false&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$orderIncrementIDs&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(‘100000001′,’100000002’); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//your order increment ids to delete, beware!  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$rmvd&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$orderIncrementIDs&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$ordID&lt;/span&gt;){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;try&lt;/span&gt;{  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;loadByIncrementId&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$ordID&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;delete&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$rmvd&lt;/span&gt;[] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$ordID&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; } &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;catch&lt;/span&gt;(Exception &lt;span style=&#34;color:#b8860b&#34;&gt;$e&lt;/span&gt;){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘Error&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; ‘&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$e&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getMessage&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;’  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;‘;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; “Following Orders Removed&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;” &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; implode(“, “,&lt;span style=&#34;color:#b8860b&#34;&gt;$rmvd&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;and run the file to delete the order(s).&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>First of all, removing live orders is not recommended. But if you are sure you want to remove orders (test orders?) then you can do so by custom script below. Get the order increment id(s) of the order you wish to delete from Magento. Remember, once order is deleted you can’t get any related information of that order.</p>
<p>Create a test PHP file in your Magento project root with below code:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">require</span> ‘app<span style="color:#666">/</span>Mage<span style="color:#666">.</span>php’;  
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>(‘admin’)<span style="color:#666">-&gt;</span><span style="color:#b44">setUseSessionInUrl</span>(<span style="color:#a2f;font-weight:bold">false</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$orderIncrementIDs</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>(‘100000001′,’100000002’); <span style="color:#080;font-style:italic">//your order increment ids to delete, beware!  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$rmvd</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$orderIncrementIDs</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$ordID</span>){  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">try</span>{  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>order’)<span style="color:#666">-&gt;</span><span style="color:#b44">loadByIncrementId</span>(<span style="color:#b8860b">$ordID</span>)<span style="color:#666">-&gt;</span><span style="color:#b44">delete</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$rmvd</span>[] <span style="color:#666">=</span> <span style="color:#b8860b">$ordID</span>;  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">catch</span>(Exception <span style="color:#b8860b">$e</span>){  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘Error<span style="color:#666">:</span> ‘<span style="color:#666">.</span><span style="color:#b8860b">$e</span><span style="color:#666">-&gt;</span><span style="color:#b44">getMessage</span>()<span style="color:#666">.</span>’  
</span></span><span style="display:flex;"><span>‘;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> “Following Orders Removed<span style="color:#666">!</span>  
</span></span><span style="display:flex;"><span>” <span style="color:#666">.</span> implode(“, “,<span style="color:#b8860b">$rmvd</span>);</span></span></code></pre></div><br>
and run the file to delete the order(s).</p>
<p>You can also delete orders directly from database using below query:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-mariadb" data-lang="mariadb"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">select</span><span style="color:#bbb"> </span><span style="color:#666">@</span>order_id:<span style="color:#666">=</span>entity_id<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">from</span><span style="color:#bbb"> </span>sales_order_entity<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">where</span><span style="color:#bbb"> </span>increment_id<span style="color:#666">=</span><span style="">’</span><span style="color:#666">100000001</span><span style="">′</span>;<span style="color:#bbb">  
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#a2f;font-weight:bold">delete</span><span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">from</span><span style="color:#bbb"> </span>sales_order_entity<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">where</span><span style="color:#bbb"> </span>entity_id<span style="color:#666">=@</span>order_id<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">or</span><span style="color:#bbb"> </span>parent_id<span style="color:#666">=@</span>order_id;</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get current url with and without parameters</title>
      <link>http://localhost:1313/magento-get-current-url-with-and-without-parameters/</link>
      <pubDate>Sun, 21 Jul 2013 23:09:53 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-current-url-with-and-without-parameters/</guid>
      <description>&lt;p&gt;You can get the current page URL and it’s parameters (if any) by using getCurrentUrl() method in Magento. Below code will show you how to use it. Consider for example you have this url:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://loca.lho.st/review/product/list/id/27/name/sony&#34;&gt;http://loca.lho.st/review/product/list/id/27/name/sony&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;To get this (current) URL in your module:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$currentUrl&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;helper&lt;/span&gt;(‘core&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;url’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCurrentUrl&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Gives: http://loca.lho.st/review/product/list/id/27/name/sony&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;To get current URL parameters:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$params&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getRequest&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getParams&lt;/span&gt;(); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//all the parameters  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Gives: Array ( [id] =&amp;gt; 27 [name] =&amp;gt; sony )  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$param&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getRequest&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getParam&lt;/span&gt;(‘name’); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//parameter “name”  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Gives: sony&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>You can get the current page URL and it’s parameters (if any) by using getCurrentUrl() method in Magento. Below code will show you how to use it. Consider for example you have this url:</p>
<p><a href="http://loca.lho.st/review/product/list/id/27/name/sony">http://loca.lho.st/review/product/list/id/27/name/sony</a></p>
<p>To get this (current) URL in your module:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$currentUrl</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">helper</span>(‘core<span style="color:#666">/</span>url’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCurrentUrl</span>();  
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Gives: http://loca.lho.st/review/product/list/id/27/name/sony
</span></span></span></code></pre></div></p>
<p>To get current URL parameters:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$params</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getParams</span>(); <span style="color:#080;font-style:italic">//all the parameters  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Gives: Array ( [id] =&gt; 27 [name] =&gt; sony )  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$param</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getParam</span>(‘name’); <span style="color:#080;font-style:italic">//parameter “name”  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Gives: sony
</span></span></span></code></pre></div></p>
<p>To get only URL without parameters:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$request</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$urlWithoutParameters</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getBaseUrl</span>() <span style="color:#666">.</span> <span style="color:#b8860b">$request</span><span style="color:#666">-&gt;</span><span style="color:#b44">getRouteName</span>() <span style="color:#666">.</span>DS<span style="color:#666">.</span> <span style="color:#b8860b">$request</span><span style="color:#666">-&gt;</span><span style="color:#b44">getControllerName</span>() <span style="color:#666">.</span>DS<span style="color:#666">.</span> <span style="color:#b8860b">$request</span><span style="color:#666">-&gt;</span><span style="color:#b44">getActionName</span>();  
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Gives: http://loca.lho.st/review/product/list
</span></span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get all categories of a product</title>
      <link>http://localhost:1313/magento-get-all-categories-of-a-product/</link>
      <pubDate>Sun, 21 Jul 2013 15:44:40 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-all-categories-of-a-product/</guid>
      <description>&lt;p&gt;Get all the categories a product belongs to in Magento. Below code will get you all the categories with details the product is attached to. Product can be shown under more than one category, so you may get more than one category ID. Either get the category collection from product, or get all the category IDs and then load them using catalog category collection model.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//$_product = Mage::getModel(‘catalog/product’)-&amp;gt;load($productID);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;First way,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$catCollection&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$_product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCategoryCollection&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$catCollection&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$cat&lt;/span&gt;){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; print_r(&lt;span style=&#34;color:#b8860b&#34;&gt;$cat&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getData&lt;/span&gt;());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//echo $cat-&amp;gt;getName();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//echo $cat-&amp;gt;getUrl();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Get all the categories a product belongs to in Magento. Below code will get you all the categories with details the product is attached to. Product can be shown under more than one category, so you may get more than one category ID. Either get the category collection from product, or get all the category IDs and then load them using catalog category collection model.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#080;font-style:italic">//$_product = Mage::getModel(‘catalog/product’)-&gt;load($productID);
</span></span></span></code></pre></div>
<p>First way,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$catCollection</span> <span style="color:#666">=</span> <span style="color:#b8860b">$_product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCategoryCollection</span>();  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$catCollection</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$cat</span>){  
</span></span><span style="display:flex;"><span> print_r(<span style="color:#b8860b">$cat</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>());  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//echo $cat-&gt;getName();  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#080;font-style:italic">//echo $cat-&gt;getUrl();  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}</span></span></code></pre></div></p>
<p>Another way,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$catIds</span> <span style="color:#666">=</span> <span style="color:#b8860b">$_product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCategoryIds</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$catCollection</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getResourceModel</span>(‘catalog<span style="color:#666">/</span>category_collection’)  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//-&gt;addAttributeToSelect(‘name’)  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#080;font-style:italic">//-&gt;addAttributeToSelect(‘url’)  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘<span style="color:#666">*</span>’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘entity_id’, <span style="color:#b8860b">$catIds</span>)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addIsActiveFilter</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$catCollection</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$cat</span>){  
</span></span><span style="display:flex;"><span> print_r(<span style="color:#b8860b">$cat</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>());  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//echo $cat-&gt;getName();  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#080;font-style:italic">//echo $cat-&gt;getUrl();  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento redirect from observer</title>
      <link>http://localhost:1313/magento-redirect-from-observer/</link>
      <pubDate>Sun, 21 Jul 2013 14:11:11 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-redirect-from-observer/</guid>
      <description>&lt;p&gt;Redirection in observer doesn’t work normally as it do in Blocks, templates and controllers. Also there is no standard code to redirect from observer that works in every situation.&lt;/p&gt;&#xA;&lt;p&gt;You will need an argument to achieve redirect when using below code:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;observingMethod&lt;/span&gt;(Varien_Event_Observer &lt;span style=&#34;color:#b8860b&#34;&gt;$observer&lt;/span&gt;)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$observer&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getRequest&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setParam&lt;/span&gt;(‘return_url’,&lt;span style=&#34;color:#b8860b&#34;&gt;$urlToRedirect&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;Note that $observer object should have getRequest() method to make above code work. You may need to use $observer-&amp;gt;getEvent()-&amp;gt;getFront()-&amp;gt;getRequest() otherwise, or simply var_dump/Mage::log $observer to get better idea what methods the object have.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Redirection in observer doesn’t work normally as it do in Blocks, templates and controllers. Also there is no standard code to redirect from observer that works in every situation.</p>
<p>You will need an argument to achieve redirect when using below code:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">observingMethod</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>)  
</span></span><span style="display:flex;"><span>{  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$observer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">setParam</span>(‘return_url’,<span style="color:#b8860b">$urlToRedirect</span>);  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div><br>
Note that $observer object should have getRequest() method to make above code work. You may need to use $observer-&gt;getEvent()-&gt;getFront()-&gt;getRequest() otherwise, or simply var_dump/Mage::log $observer to get better idea what methods the object have.</p>
<p>Or you can use below code which is not recommended:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">observingMethod</span>() {  
</span></span><span style="display:flex;"><span> header(‘Location<span style="color:#666">:</span> ‘ <span style="color:#666">.</span> <span style="color:#b8860b">$urlToRedirect</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">exit</span>;  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div><br>
We don’t need any arguments using above method.</p>
<p>Another approach, again not recommended:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">observingMethod</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>)  
</span></span><span style="display:flex;"><span>{  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$response</span> <span style="color:#666">=</span> <span style="color:#b8860b">$observer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getResponse</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//$response = Mage::app()-&gt;getFrontController()-&gt;getResponse();  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$response</span><span style="color:#666">-&gt;</span><span style="color:#b44">setRedirect</span>(<span style="color:#b8860b">$urlToRedirect</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getFrontController</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">sendResponse</span>();  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento products not showing in categories</title>
      <link>http://localhost:1313/magento-products-not-showing-in-categories/</link>
      <pubDate>Fri, 19 Jul 2013 14:19:50 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-products-not-showing-in-categories/</guid>
      <description>&lt;p&gt;If your Magento products are not showing up in frontend category pages, that can be because one or more of the below points are not done correctly.&lt;/p&gt;&#xA;&lt;p&gt;The products must have following set correctly to appear in the category pages in frontend. You can check all the below things in Manage Products screen of any individual product.&lt;br&gt;&#xA;– &lt;em&gt;Status&lt;/em&gt; must be Enabled (under General tab)&lt;br&gt;&#xA;– &lt;em&gt;Visiblility&lt;/em&gt; should be Catalog OR Catalog, Search (under General tab)&lt;br&gt;&#xA;– Stock &lt;em&gt;Qty&lt;/em&gt; (quantity) should be greater than &lt;em&gt;Qty for Item’s Status to Become Out of Stock&lt;/em&gt; (under Inventory tab)&lt;br&gt;&#xA;– &lt;em&gt;Stock Availability&lt;/em&gt; must be IN STOCK&lt;br&gt;&#xA;– &lt;em&gt;Category&lt;/em&gt; should be assigned (under Categories tab)&lt;br&gt;&#xA;– &lt;em&gt;Website&lt;/em&gt; must be assigned (under Websites tab)&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If your Magento products are not showing up in frontend category pages, that can be because one or more of the below points are not done correctly.</p>
<p>The products must have following set correctly to appear in the category pages in frontend. You can check all the below things in Manage Products screen of any individual product.<br>
– <em>Status</em> must be Enabled (under General tab)<br>
– <em>Visiblility</em> should be Catalog OR Catalog, Search (under General tab)<br>
– Stock <em>Qty</em> (quantity) should be greater than <em>Qty for Item’s Status to Become Out of Stock</em> (under Inventory tab)<br>
– <em>Stock Availability</em> must be IN STOCK<br>
– <em>Category</em> should be assigned (under Categories tab)<br>
– <em>Website</em> must be assigned (under Websites tab)</p>
<p>Clear the cache, re-index the indexes related to product (Product prices, Product flat data and Category products) and everything should work as expected.</p>
<p>This post is written to address the following issue:<br>
magento products not displaying in categories<br>
magento products not showing in categories<br>
magento items not showing in categories<br>
magento products not showing up in categories<br>
magento products not showing under categories<br>
magento products not displaying on category page<br>
magento product images not showing in category<br>
magento configurable product not showing in category<br>
magento new product not showing in category</p>
<p>If you are unable to see Product Images in frontend category pages, check this blog post to resolve it: <a href="http://ka.lpe.sh/2013/02/26/magento-cant-see-product-images-in-category-page/" title="Magento cannot see product images in category page">http://ka.lpe.sh/2013/02/26/magento-cant-see-product-images-in-category-page/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento tweak .htaccess for performance optimization</title>
      <link>http://localhost:1313/magento-tweak-.htaccess-for-performance-optimization/</link>
      <pubDate>Fri, 19 Jul 2013 01:09:41 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-tweak-.htaccess-for-performance-optimization/</guid>
      <description>&lt;p&gt;Tweak .htaccess for performance optimization in Magento. It will not sky rocket your website, but will show notable improvement. The default Magento .htaccess comes with performance optimization, but commented by default. I will show you here which lines to uncomment and improve the performance.&lt;/p&gt;&#xA;&lt;h2 id=&#34;compressing-web-pages-with-mod_deflate&#34;&gt;Compressing web pages with mod_deflate&lt;/h2&gt;&#xA;&lt;p&gt;The mod_deflate module allows the Apache2 web service to compress files and deliver them to browser that can handle them. With mod_deflate you can compress HTML, text or XML files by upto 70% of their original sizes! Thus, saving you server traffic and speeding up page loads.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Tweak .htaccess for performance optimization in Magento. It will not sky rocket your website, but will show notable improvement. The default Magento .htaccess comes with performance optimization, but commented by default. I will show you here which lines to uncomment and improve the performance.</p>
<h2 id="compressing-web-pages-with-mod_deflate">Compressing web pages with mod_deflate</h2>
<p>The mod_deflate module allows the Apache2 web service to compress files and deliver them to browser that can handle them. With mod_deflate you can compress HTML, text or XML files by upto 70% of their original sizes! Thus, saving you server traffic and speeding up page loads.</p>
<p>Check your .htaccess file for below code, I have removed hashes before few lines to uncomment them for performance.<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;ifmodule mod_deflate.c=&#34;&#34;&gt;&lt;/ifmodule&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\############################################  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\## enable apache served files compression  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\## http://developer.yahoo.com/performance/rules.html#gzip
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> # Insert filter on all content  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> SetOutputFilter DEFLATE  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> # Insert filter on selected content types only  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> # Netscape 4.x has some problems…  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> BrowserMatch ^Mozilla/4 gzip-only-text/html
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> # Netscape 4.06-4.08 have some more problems  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> BrowserMatch ^Mozilla/4\\.0[678] no-gzip
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> # MSIE masquerades as Netscape, but it is fine  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> BrowserMatch \\bMSIE !no-gzip !gzip-only-text/html
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> # Don’t compress images  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> SetEnvIfNoCase Request_URI \\.(?:gif|jpe?g|png)$ no-gzip dont-vary
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> # Make sure proxies don’t deliver the wrong content  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> Header append Vary User-Agent env=!dont-vary</span></span></span></code></pre></div></p>
<h2 id="enabling-expires-header-with-mod_expires">Enabling expires header with mod_expires</h2>
<p>Make browser cache static files with Apache2’s mod_expires module.</p>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> &lt;ifmodule mod_expires.c=&#34;&#34;&gt;&lt;/ifmodule&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\############################################  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\## Add default Expires header  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">\## http://developer.yahoo.com/performance/rules.html#expires
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> ExpiresActive On  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> ExpiresDefault “access plus 1 year”</span></span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento event observer cheatsheet list</title>
      <link>http://localhost:1313/magento-event-observer-cheatsheet-list/</link>
      <pubDate>Wed, 17 Jul 2013 13:34:56 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-event-observer-cheatsheet-list/</guid>
      <description>&lt;p&gt;Below events are available in Magento community edition 1.7, but they should be mostly available for other Magento versions and editions too. Check out which event you want to observe for your next Magento development requirement!&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; adminhtml_controller_action_predispatch_start  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_add_is_active_filter  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_collect_totals_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_collect_totals_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_import_data_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_init_virtual_grid_columns  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_load_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_load_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_load_by_txn_id_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_load_by_txn_id_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_merge_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_merge_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_save_attribute_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_save_attribute_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_set_sales_order  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix . ‘_update_grid_records  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_clear  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_delete_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_delete_after_done  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_delete_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_delete_commit_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_load_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_load_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_move_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_move_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_save_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_save_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_save_commit_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_validate_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$this-&amp;gt;_eventPrefix.’_validate_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;add_synchronize_message  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;admin_permissions_role_prepare_save  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;admin_session_user_login_failed  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;admin_session_user_login_success  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;admin_system_config_changed_section_{$section}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;admin_system_config_changed_section_currency  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;admin_system_config_changed_section_currency_before_reinit  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;admin_system_config_section_save_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;admin_user_authenticate_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;admin_user_authenticate_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_block_eav_attribute_edit_form_init  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_block_html_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_block_promo_widget_chooser_prepare_collection  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_block_salesrule_actions_prepareform  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_block_system_config_init_tab_sections_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_cache_flush_all  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_cache_flush_system  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_cache_refresh_type  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_category_edit_prepare_form  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_category_tabs  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_category_tree_can_add_root_category  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_category_tree_can_add_sub_category  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_category_tree_is_moveable  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_product_attribute_edit_prepare_form  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_product_attribute_set_main_html_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_product_attribute_set_toolbar_main_html_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_product_edit_element_types  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_product_edit_prepare_form  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_product_edit_tab_attributes_create_html_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_product_form_prepare_excluded_field_list  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_catalog_product_grid_prepare_massaction  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_cms_page_edit_tab_content_prepare_form  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_cms_page_edit_tab_design_prepare_form  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_cms_page_edit_tab_meta_prepare_form  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_cmspage_on_delete  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_controller_catalogrule_prepare_save  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_controller_salesrule_prepare_save  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_customer_orders_add_action_renderer  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_customer_prepare_save  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_customer_save_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_product_attribute_types  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_promo_catalog_edit_tab_main_prepare_form  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_promo_quote_edit_tab_coupons_form_prepare_form  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_promo_quote_edit_tab_main_prepare_form  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_sales_order_create_process_data  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_sales_order_create_process_data_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_sales_order_creditmemo_register_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_store_edit_form_prepare_form  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_system_config_advanced_disableoutput_render_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_widget_container_html_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;adminhtml_widget_grid_filter_collection  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;after_reindex_process_’ . indexercode  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;api_user_authenticated  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;api_user_html_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;application_clean_cache  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;before_save_message_queue  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;bundle_product_view_config  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_block_product_list_collection  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_category_change_products  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_category_flat_loadnodes_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_category_prepare_save  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_category_tree_init_inactive_category_ids  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_category_tree_move_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_category_tree_move_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_controller_category_delete  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_controller_category_init_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_controller_category_init_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_controller_product_delete  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_controller_product_init  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_controller_product_init_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_controller_product_view  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_helper_output_construct  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_model_product_duplicate  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_prepare_price_select  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_attribute_update_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_collection_apply_limitations_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_collection_before_add_count_to_categories  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_collection_load_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_collection_load_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_compare_add_product  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_compare_item_collection_clear  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_compare_remove_product  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_edit_action  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_edit_form_render_recurring  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_flat_prepare_columns  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_flat_prepare_indexes  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_flat_rebuild  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_flat_update_product  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_gallery_prepare_layout  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_gallery_upload_image_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_get_final_price  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_import_finish_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_is_salable_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_is_salable_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_media_add_image  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_media_save_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_new_action  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_prepare_index_select  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_prepare_save  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_status_update  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_to_website_change  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_type_configurable_price  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_type_grouped_price  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_upsell  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_view_config  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_website_update  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalog_product_website_update_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalogindex_get_minimal_price  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalogindex_plain_reindex_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalogindex_prepare_price_select  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalogrule_after_apply  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalogrule_before_apply  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalogsearch_index_process_complete  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalogsearch_index_process_start  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catalogsearch_reset_search_result  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;category_move  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;category_prepare_ajax_response  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;catelogsearch_searchable_attributes_load_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_allow_guest  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_cart_add_product_complete  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_cart_product_add_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_cart_product_update_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_cart_save_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_cart_save_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_cart_update_item_complete  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_cart_update_items_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_cart_update_items_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_controller_multishipping_shipping_post  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_controller_onepage_save_shipping_method  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_multishipping_controller_success_action  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_multishipping_refund_all  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_onepage_controller_success_action  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_quote_destroy  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_quote_init  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_submit_all_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_type_multishipping_create_orders_single  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_type_multishipping_set_shipping_items  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_type_onepage_save_order  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;checkout_type_onepage_save_order_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;clean_catalog_images_cache_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;clean_media_cache_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;clear_expired_quotes_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;cms_controller_router_match_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;cms_page_get_available_statuses  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;cms_page_prepare_save  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;cms_page_render  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;cms_wysiwyg_config_prepare  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;cms_wysiwyg_images_static_urls_allowed  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_layout_generate_blocks_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_layout_generate_blocks_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_layout_generate_xml_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_layout_load_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_layout_render_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_layout_render_before_’.$this-&amp;gt;getFullActionName(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_nocookies  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_noroute  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_postdispatch  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_postdispatch_’.$this-&amp;gt;getFullActionName(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_postdispatch_’.$this-&amp;gt;getRequest(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_postdispatch_adminhtml  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_predispatch  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_predispatch_’ . $this-&amp;gt;getFullActionName(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_action_predispatch_’ . $this-&amp;gt;getRequest(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_front_init_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_front_init_routers  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_front_send_response_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_front_send_response_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;controller_response_redirect  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_block_abstract_prepare_layout_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_block_abstract_to_html_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_block_abstract_to_html_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_clean_cache  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_collection_abstrac&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;t_load_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_collection_abstract_load_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_layout_block_create_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_layout_update_updates_get_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_locale_set_locale  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_session_abstract_add_message  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;core_session_abstract_clear_messages  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;currency_display_options_forming  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;custom_quote_process  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;customer_address_format  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;customer_customer_authenticated  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;customer_login  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;customer_logout  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;customer_register_success  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;customer_registration_is_allowed  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;customer_session_init  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;eav_collection_abstract_load_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;enterprise_giftcardaccount_add  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;gift_options_prepare_items  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;google_checkout_discount_item_price  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;googlecheckout_block_link_html_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;googlecheckout_checkout_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;googlecheckout_create_order_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;googlecheckout_save_order_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;http_response_send_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;index_process_change_status  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;load_customer_quote_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;log_log_clean_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;log_log_clean_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;log_visitor_collection_load_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;model_config_data_save_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;model_delete_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;model_delete_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;model_delete_commit_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;model_load_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;model_load_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;model_save_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;model_save_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;model_save_commit_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;on_view_report  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;order_cancel_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;page_block_html_topmenu_gethtml_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;page_block_html_topmenu_gethtml_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;payment_form_block_to_html_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;payment_info_block_prepare_specific_information  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;payment_method_is_active  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;paypal_prepare_line_items  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;permissions_user_html_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;persistent_session_expired  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;poll_vote_add  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;prepare_catalog_product_collection_prices  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;prepare_catalog_product_index_select  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;prepare_catalog_product_price_index_table  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;product_option_renderer_init  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;resource_get_tablename  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;review_controller_product_init  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;review_controller_product_init_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;review_review_collection_load_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;rss_catalog_category_xml_callback  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;rss_catalog_new_xml_callback  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;rss_catalog_notify_stock_collection_select  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;rss_catalog_review_collection_select  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;rss_catalog_special_xml_callback  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;rss_catalog_tagged_item_xml_callback  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;rss_order_new_collection_select  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;rss_wishlist_xml_callback  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;rule_environment_collect  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_convert_order_item_to_quote_item  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_convert_order_to_quote  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_convert_order_to_quote  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_convert_quote_address_to_order  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_convert_quote_address_to_order_address  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_convert_quote_item_to_order_item  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_convert_quote_payment_to_order_payment  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_convert_quote_to_order  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_model_service_quote_submit_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_model_service_quote_submit_failure  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_model_service_quote_submit_success  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_creditmemo_cancel  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_creditmemo_refund  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_invoice_cancel  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_invoice_pay  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_invoice_register  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_item_cancel  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_payment_cancel  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_payment_cancel_creditmemo  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_payment_cancel_invoice  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_payment_capture  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_payment_pay  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_payment_place_end  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_payment_place_start  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_payment_refund  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_payment_void  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_order_place_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_quote_add_item  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_quote_address_discount_item  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_quote_config_get_product_attributes  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_quote_item_collection_products_after_load  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_quote_item_qty_set_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_quote_item_set_product  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_quote_product_add_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_quote_remove_item  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sales_sale_collection_query_before  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;salesrule_rule_condition_combine  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;salesrule_rule_get_coupon_types  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;salesrule_validator_process  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;sendfriend_product  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;store_delete  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;store_group_save  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;tax_rate_data_fetch  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;tax_settings_change_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;visitor_init  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;wishlist_add_item  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;wishlist_add_product  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;wishlist_item_collection_products_after_load  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;wishlist_items_renewed  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;wishlist_product_add_after  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;wishlist_share  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;wishlist_update_item&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Happy observing! 🙂&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Below events are available in Magento community edition 1.7, but they should be mostly available for other Magento versions and editions too. Check out which event you want to observe for your next Magento development requirement!</p>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> adminhtml_controller_action_predispatch_start  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_add_is_active_filter  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_collect_totals_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_collect_totals_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_import_data_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_init_virtual_grid_columns  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_load_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_load_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_load_by_txn_id_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_load_by_txn_id_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_merge_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_merge_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_save_attribute_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_save_attribute_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_set_sales_order  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix . ‘_update_grid_records  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_clear  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_delete_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_delete_after_done  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_delete_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_delete_commit_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_load_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_load_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_move_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_move_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_save_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_save_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_save_commit_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_validate_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">$this-&gt;_eventPrefix.’_validate_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">add_synchronize_message  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">admin_permissions_role_prepare_save  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">admin_session_user_login_failed  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">admin_session_user_login_success  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">admin_system_config_changed_section_{$section}  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">admin_system_config_changed_section_currency  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">admin_system_config_changed_section_currency_before_reinit  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">admin_system_config_section_save_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">admin_user_authenticate_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">admin_user_authenticate_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_block_eav_attribute_edit_form_init  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_block_html_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_block_promo_widget_chooser_prepare_collection  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_block_salesrule_actions_prepareform  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_block_system_config_init_tab_sections_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_cache_flush_all  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_cache_flush_system  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_cache_refresh_type  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_category_edit_prepare_form  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_category_tabs  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_category_tree_can_add_root_category  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_category_tree_can_add_sub_category  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_category_tree_is_moveable  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_product_attribute_edit_prepare_form  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_product_attribute_set_main_html_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_product_attribute_set_toolbar_main_html_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_product_edit_element_types  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_product_edit_prepare_form  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_product_edit_tab_attributes_create_html_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_product_form_prepare_excluded_field_list  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_catalog_product_grid_prepare_massaction  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_cms_page_edit_tab_content_prepare_form  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_cms_page_edit_tab_design_prepare_form  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_cms_page_edit_tab_meta_prepare_form  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_cmspage_on_delete  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_controller_catalogrule_prepare_save  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_controller_salesrule_prepare_save  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_customer_orders_add_action_renderer  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_customer_prepare_save  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_customer_save_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_product_attribute_types  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_promo_catalog_edit_tab_main_prepare_form  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_promo_quote_edit_tab_coupons_form_prepare_form  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_promo_quote_edit_tab_main_prepare_form  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_sales_order_create_process_data  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_sales_order_create_process_data_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_sales_order_creditmemo_register_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_store_edit_form_prepare_form  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_system_config_advanced_disableoutput_render_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_widget_container_html_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">adminhtml_widget_grid_filter_collection  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">after_reindex_process_’ . indexercode  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">api_user_authenticated  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">api_user_html_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">application_clean_cache  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">before_save_message_queue  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">bundle_product_view_config  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_block_product_list_collection  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_category_change_products  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_category_flat_loadnodes_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_category_prepare_save  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_category_tree_init_inactive_category_ids  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_category_tree_move_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_category_tree_move_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_controller_category_delete  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_controller_category_init_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_controller_category_init_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_controller_product_delete  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_controller_product_init  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_controller_product_init_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_controller_product_view  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_helper_output_construct  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_model_product_duplicate  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_prepare_price_select  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_attribute_update_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_collection_apply_limitations_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_collection_before_add_count_to_categories  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_collection_load_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_collection_load_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_compare_add_product  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_compare_item_collection_clear  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_compare_remove_product  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_edit_action  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_edit_form_render_recurring  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_flat_prepare_columns  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_flat_prepare_indexes  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_flat_rebuild  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_flat_update_product  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_gallery_prepare_layout  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_gallery_upload_image_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_get_final_price  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_import_finish_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_is_salable_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_is_salable_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_media_add_image  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_media_save_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_new_action  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_prepare_index_select  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_prepare_save  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_status_update  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_to_website_change  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_type_configurable_price  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_type_grouped_price  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_upsell  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_view_config  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_website_update  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalog_product_website_update_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalogindex_get_minimal_price  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalogindex_plain_reindex_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalogindex_prepare_price_select  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalogrule_after_apply  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalogrule_before_apply  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalogsearch_index_process_complete  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalogsearch_index_process_start  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catalogsearch_reset_search_result  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">category_move  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">category_prepare_ajax_response  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">catelogsearch_searchable_attributes_load_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_allow_guest  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_cart_add_product_complete  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_cart_product_add_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_cart_product_update_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_cart_save_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_cart_save_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_cart_update_item_complete  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_cart_update_items_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_cart_update_items_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_controller_multishipping_shipping_post  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_controller_onepage_save_shipping_method  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_multishipping_controller_success_action  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_multishipping_refund_all  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_onepage_controller_success_action  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_quote_destroy  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_quote_init  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_submit_all_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_type_multishipping_create_orders_single  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_type_multishipping_set_shipping_items  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_type_onepage_save_order  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">checkout_type_onepage_save_order_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">clean_catalog_images_cache_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">clean_media_cache_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">clear_expired_quotes_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">cms_controller_router_match_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">cms_page_get_available_statuses  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">cms_page_prepare_save  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">cms_page_render  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">cms_wysiwyg_config_prepare  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">cms_wysiwyg_images_static_urls_allowed  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_layout_generate_blocks_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_layout_generate_blocks_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_layout_generate_xml_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_layout_load_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_layout_render_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_layout_render_before_’.$this-&gt;getFullActionName(  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_nocookies  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_noroute  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_postdispatch  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_postdispatch_’.$this-&gt;getFullActionName(  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_postdispatch_’.$this-&gt;getRequest(  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_postdispatch_adminhtml  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_predispatch  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_predispatch_’ . $this-&gt;getFullActionName(  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_action_predispatch_’ . $this-&gt;getRequest(  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_front_init_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_front_init_routers  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_front_send_response_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_front_send_response_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">controller_response_redirect  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_block_abstract_prepare_layout_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_block_abstract_to_html_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_block_abstract_to_html_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_clean_cache  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_collection_abstrac</span><span style="color:#960050;background-color:#1e0010">t_load_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_collection_abstract_load_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_layout_block_create_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_layout_update_updates_get_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_locale_set_locale  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_session_abstract_add_message  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">core_session_abstract_clear_messages  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">currency_display_options_forming  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">custom_quote_process  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">customer_address_format  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">customer_customer_authenticated  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">customer_login  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">customer_logout  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">customer_register_success  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">customer_registration_is_allowed  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">customer_session_init  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">eav_collection_abstract_load_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">enterprise_giftcardaccount_add  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">gift_options_prepare_items  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">google_checkout_discount_item_price  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">googlecheckout_block_link_html_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">googlecheckout_checkout_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">googlecheckout_create_order_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">googlecheckout_save_order_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">http_response_send_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">index_process_change_status  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">load_customer_quote_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">log_log_clean_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">log_log_clean_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">log_visitor_collection_load_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">model_config_data_save_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">model_delete_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">model_delete_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">model_delete_commit_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">model_load_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">model_load_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">model_save_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">model_save_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">model_save_commit_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">on_view_report  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">order_cancel_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">page_block_html_topmenu_gethtml_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">page_block_html_topmenu_gethtml_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">payment_form_block_to_html_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">payment_info_block_prepare_specific_information  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">payment_method_is_active  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">paypal_prepare_line_items  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">permissions_user_html_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">persistent_session_expired  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">poll_vote_add  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">prepare_catalog_product_collection_prices  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">prepare_catalog_product_index_select  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">prepare_catalog_product_price_index_table  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">product_option_renderer_init  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">resource_get_tablename  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">review_controller_product_init  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">review_controller_product_init_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">review_review_collection_load_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">rss_catalog_category_xml_callback  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">rss_catalog_new_xml_callback  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">rss_catalog_notify_stock_collection_select  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">rss_catalog_review_collection_select  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">rss_catalog_special_xml_callback  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">rss_catalog_tagged_item_xml_callback  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">rss_order_new_collection_select  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">rss_wishlist_xml_callback  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">rule_environment_collect  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_convert_order_item_to_quote_item  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_convert_order_to_quote  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_convert_order_to_quote  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_convert_quote_address_to_order  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_convert_quote_address_to_order_address  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_convert_quote_item_to_order_item  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_convert_quote_payment_to_order_payment  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_convert_quote_to_order  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_model_service_quote_submit_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_model_service_quote_submit_failure  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_model_service_quote_submit_success  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_creditmemo_cancel  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_creditmemo_refund  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_invoice_cancel  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_invoice_pay  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_invoice_register  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_item_cancel  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_payment_cancel  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_payment_cancel_creditmemo  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_payment_cancel_invoice  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_payment_capture  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_payment_pay  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_payment_place_end  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_payment_place_start  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_payment_refund  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_payment_void  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_order_place_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_quote_add_item  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_quote_address_discount_item  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_quote_config_get_product_attributes  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_quote_item_collection_products_after_load  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_quote_item_qty_set_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_quote_item_set_product  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_quote_product_add_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_quote_remove_item  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sales_sale_collection_query_before  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">salesrule_rule_condition_combine  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">salesrule_rule_get_coupon_types  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">salesrule_validator_process  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">sendfriend_product  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">store_delete  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">store_group_save  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">tax_rate_data_fetch  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">tax_settings_change_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">visitor_init  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">wishlist_add_item  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">wishlist_add_product  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">wishlist_item_collection_products_after_load  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">wishlist_items_renewed  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">wishlist_product_add_after  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">wishlist_share  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">wishlist_update_item</span></span></span></code></pre></div>
<p>Happy observing! 🙂</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get products without category</title>
      <link>http://localhost:1313/magento-get-products-without-category/</link>
      <pubDate>Tue, 16 Jul 2013 13:12:09 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-products-without-category/</guid>
      <description>&lt;p&gt;Get a list of all orphaned products which are not associated with any category in Magento. Sometimes you may have missed to select categories for products by mistake when filling new product details, and now want to list them and assign categories to those products. You can’t get it from the Magento admin screen so you will need to run below MySQL query to get all the products without categories.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Get a list of all orphaned products which are not associated with any category in Magento. Sometimes you may have missed to select categories for products by mistake when filling new product details, and now want to list them and assign categories to those products. You can’t get it from the Magento admin screen so you will need to run below MySQL query to get all the products without categories.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-mariadb" data-lang="mariadb"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">SELECT</span><span style="color:#bbb"> </span>e.entity_id,<span style="color:#bbb"> </span>e.sku,<span style="color:#bbb"> </span>e.name<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">FROM</span><span style="color:#bbb"> </span>catalog_product_entity<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">AS</span><span style="color:#bbb"> </span>e<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">LEFT</span><span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">JOIN</span><span style="color:#bbb"> </span>catalog_category_product<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">AS</span><span style="color:#bbb"> </span>cp<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">ON</span><span style="color:#bbb"> </span>cp.product_id<span style="color:#bbb"> </span><span style="color:#666">=</span><span style="color:#bbb"> </span>e.entity_id<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">WHERE</span><span style="color:#bbb"> </span>cp.category_id<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">IS</span><span style="color:#bbb"> </span><span style="color:#800">NULL</span></span></span></code></pre></div>
<p>Above sql query will simply bring the product ID, SKU, Name of products where category is NULL. You can add more columns in select (like e.*) to list full details of products.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento partial refund creditmemo programatically</title>
      <link>http://localhost:1313/magento-partial-refund-creditmemo-programatically/</link>
      <pubDate>Tue, 16 Jul 2013 12:54:24 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-partial-refund-creditmemo-programatically/</guid>
      <description>&lt;p&gt;Suppose you have a product which is out of stock or something and you want to refund that product line item from order programatically. The below code will create creditmemo/refund for the products with certain SKU if it finds it in the line items of the order.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;(‘admin’); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//You can create creditmemo in admin area only  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//You should have $orderID as order increment ID and $sku as product SKU you want to refund for.  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;loadByIncrementId&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$orderID&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$orderItem&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getItemsCollection&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getItemByColumnValue&lt;/span&gt;(‘sku’, &lt;span style=&#34;color:#b8860b&#34;&gt;$sku&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$service&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;service_order’, &lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$data&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘qtys’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$orderItem&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getId&lt;/span&gt;() &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//qty to refund.. $orderItem-&amp;gt;getQty()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; )  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$creditMemo&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$service&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;prepareCreditmemo&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$data&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;save&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>Suppose you have a product which is out of stock or something and you want to refund that product line item from order programatically. The below code will create creditmemo/refund for the products with certain SKU if it finds it in the line items of the order.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>(‘admin’); <span style="color:#080;font-style:italic">//You can create creditmemo in admin area only  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//You should have $orderID as order increment ID and $sku as product SKU you want to refund for.  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$order</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>order’)<span style="color:#666">-&gt;</span><span style="color:#b44">loadByIncrementId</span>(<span style="color:#b8860b">$orderID</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$orderItem</span> <span style="color:#666">=</span> <span style="color:#b8860b">$order</span><span style="color:#666">-&gt;</span><span style="color:#b44">getItemsCollection</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getItemByColumnValue</span>(‘sku’, <span style="color:#b8860b">$sku</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$service</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>service_order’, <span style="color:#b8860b">$order</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$data</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>(  
</span></span><span style="display:flex;"><span> ‘qtys’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">array</span>(  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$orderItem</span><span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>() <span style="color:#666">=&gt;</span> <span style="color:#666">1</span> <span style="color:#080;font-style:italic">//qty to refund.. $orderItem-&gt;getQty()  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> )  
</span></span><span style="display:flex;"><span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$creditMemo</span> <span style="color:#666">=</span> <span style="color:#b8860b">$service</span><span style="color:#666">-&gt;</span><span style="color:#b44">prepareCreditmemo</span>(<span style="color:#b8860b">$data</span>)<span style="color:#666">-&gt;</span><span style="color:#b44">save</span>();</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento system config 404 error</title>
      <link>http://localhost:1313/magento-system-config-404-error/</link>
      <pubDate>Sat, 13 Jul 2013 00:02:22 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-system-config-404-error/</guid>
      <description>&lt;p&gt;Magento gives 404 error / Forbidden error / Access denied error when you try to open the screen of your newly written config/system XML code because either of 2 reasons.&lt;/p&gt;&#xA;&lt;p&gt;1.) You have written the code CORRECTLY, but Magento needs to write permissions for that module in session to show it.&lt;br&gt;&#xA;– Just logout and login again and you should see your newly developed screen.&lt;/p&gt;&#xA;&lt;p&gt;2.) You have some error in your ACL role code. Magento needs the ACL role information to allow admin view the admin module.&lt;br&gt;&#xA;– Check your ACL code definition again and make sure everything there is correct.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento gives 404 error / Forbidden error / Access denied error when you try to open the screen of your newly written config/system XML code because either of 2 reasons.</p>
<p>1.) You have written the code CORRECTLY, but Magento needs to write permissions for that module in session to show it.<br>
– Just logout and login again and you should see your newly developed screen.</p>
<p>2.) You have some error in your ACL role code. Magento needs the ACL role information to allow admin view the admin module.<br>
– Check your ACL code definition again and make sure everything there is correct.</p>
<p><em>Sample code of ACL to display custom menu item in navigation:</em><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;config&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;acl&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;resources&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;all&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;title&gt;</span>Allow everything<span style="color:#008000;font-weight:bold">&lt;/title&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/all&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;admin&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;mycustommenu</span> <span style="color:#b44">module=</span><span style="color:#b44">&#34;modulename&#34;</span> <span style="color:#b44">translate=</span><span style="color:#b44">&#34;title&#34;</span><span style="color:#008000;font-weight:bold">&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;title&gt;</span>Custom MENU<span style="color:#008000;font-weight:bold">&lt;/title&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;sort_order&gt;</span>500<span style="color:#008000;font-weight:bold">&lt;/sort_order&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;children&gt;</span>  
</span></span><span style="display:flex;"><span>   
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;submenuitem</span> <span style="color:#b44">module=</span><span style="color:#b44">&#34;modulename&#34;</span> <span style="color:#b44">translate=</span><span style="color:#b44">&#34;title&#34;</span><span style="color:#008000;font-weight:bold">&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;title&gt;</span>Custom SUB MENU<span style="color:#008000;font-weight:bold">&lt;/title&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;sort_order&gt;</span>10<span style="color:#008000;font-weight:bold">&lt;/sort_order&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/submenuitem&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/mycustommenu&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/admin&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/resources&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/acl&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;/config&gt;</span></span></span></code></pre></div></p>
<p><em>Sample code of ACL for new submenu under SYSTEM main menu in navigation:</em><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;config&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;acl&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;resources&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;all&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;title&gt;</span>Allow everything<span style="color:#008000;font-weight:bold">&lt;/title&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/all&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;admin&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;system&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;mycustomsystem&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;title&gt;</span>SUB SYSTEM!<span style="color:#008000;font-weight:bold">&lt;/title&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/mycustomsystem&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/system&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/admin&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/resources&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/acl&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;/config&gt;</span></span></span></code></pre></div></p>
<p><em>Sample code of ACL for new screen under System Configuration:</em><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;config&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;acl&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;resources&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;all&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;title&gt;</span>Allow everything<span style="color:#008000;font-weight:bold">&lt;/title&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/all&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;admin&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;system&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;config&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;example</span> <span style="color:#b44">translate=</span><span style="color:#b44">&#34;title&#34;</span><span style="color:#008000;font-weight:bold">&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;title&gt;</span>An Example Section<span style="color:#008000;font-weight:bold">&lt;/title&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;sort_order&gt;</span>100<span style="color:#008000;font-weight:bold">&lt;/sort_order&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/example&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/config&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/system&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/children&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/admin&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/resources&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/acl&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;/config&gt;</span></span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get store information</title>
      <link>http://localhost:1313/magento-get-store-information/</link>
      <pubDate>Sat, 29 Jun 2013 21:24:28 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-store-information/</guid>
      <description>&lt;p&gt;Magento get store information from any page.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$store&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getStore&lt;/span&gt;(); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Mage_Core_Model_Store object&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Now to get store ID,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$storeID&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$store&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getStoreId&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;To get store code,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$storeCode&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$store&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCode&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;To get store Website ID,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$websiteID&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$store&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getWebsiteId&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;To get store name,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$storeName&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$store&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getName&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;To get Default View store name,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$storeName&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$store&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getFrontendName&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;To check if store is active or not,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$active&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$store&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getIsActive&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;To get store’s Home URL,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$storeHomeURL&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$store&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getHomeUrl&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you want to find store’s group name,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$storeGroupName&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$store&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getGroup&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getName&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;If you want ADMIN Store information, admin store has ID 0. So, you can get the details of Admin Store like this:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$store&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘core&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;store’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento get store information from any page.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$store</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getStore</span>(); <span style="color:#080;font-style:italic">//Mage_Core_Model_Store object
</span></span></span></code></pre></div>
<p>Now to get store ID,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$storeID</span> <span style="color:#666">=</span> <span style="color:#b8860b">$store</span><span style="color:#666">-&gt;</span><span style="color:#b44">getStoreId</span>();</span></span></code></pre></div></p>
<p>To get store code,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$storeCode</span> <span style="color:#666">=</span> <span style="color:#b8860b">$store</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCode</span>();</span></span></code></pre></div></p>
<p>To get store Website ID,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$websiteID</span> <span style="color:#666">=</span> <span style="color:#b8860b">$store</span><span style="color:#666">-&gt;</span><span style="color:#b44">getWebsiteId</span>();</span></span></code></pre></div></p>
<p>To get store name,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$storeName</span> <span style="color:#666">=</span> <span style="color:#b8860b">$store</span><span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>();</span></span></code></pre></div></p>
<p>To get Default View store name,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$storeName</span> <span style="color:#666">=</span> <span style="color:#b8860b">$store</span><span style="color:#666">-&gt;</span><span style="color:#b44">getFrontendName</span>();</span></span></code></pre></div></p>
<p>To check if store is active or not,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$active</span> <span style="color:#666">=</span> <span style="color:#b8860b">$store</span><span style="color:#666">-&gt;</span><span style="color:#b44">getIsActive</span>();</span></span></code></pre></div></p>
<p>To get store’s Home URL,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$storeHomeURL</span> <span style="color:#666">=</span> <span style="color:#b8860b">$store</span><span style="color:#666">-&gt;</span><span style="color:#b44">getHomeUrl</span>();</span></span></code></pre></div></p>
<p>If you want to find store’s group name,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$storeGroupName</span> <span style="color:#666">=</span> <span style="color:#b8860b">$store</span><span style="color:#666">-&gt;</span><span style="color:#b44">getGroup</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>();</span></span></code></pre></div></p>
<p>If you want ADMIN Store information, admin store has ID 0. So, you can get the details of Admin Store like this:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$store</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘core<span style="color:#666">/</span>store’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#666">0</span>);</span></span></code></pre></div></p>
<p>and then getting all the information as shown above.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get attribute options</title>
      <link>http://localhost:1313/magento-get-attribute-options/</link>
      <pubDate>Sat, 15 Jun 2013 21:19:28 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-attribute-options/</guid>
      <description>&lt;p&gt;Get attribute options list i.e. label and value, if the attribute type is dropdown.&lt;/p&gt;&#xA;&lt;p&gt;This post will show you how to get all the options of attribute with dropdown type in Magento. If your attribute has options, below code will give all the attribute options labels and values in an array format.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$attribute&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSingleton&lt;/span&gt;(‘eav&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;config’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAttribute&lt;/span&gt;(‘catalog_product’, ‘shirt_size’); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//change shirt_size to your attribute code  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$attribute&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;usesSource&lt;/span&gt;()) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$options&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$attribute&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSource&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAllOptions&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;false&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$options&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$option&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; print_r(&lt;span style=&#34;color:#b8860b&#34;&gt;$option&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;In the above code, first line will initialize the attribute. Then we are checking if the attribute is using source model or not, if using then get all the options of that attribute.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Get attribute options list i.e. label and value, if the attribute type is dropdown.</p>
<p>This post will show you how to get all the options of attribute with dropdown type in Magento. If your attribute has options, below code will give all the attribute options labels and values in an array format.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$attribute</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘eav<span style="color:#666">/</span>config’)<span style="color:#666">-&gt;</span><span style="color:#b44">getAttribute</span>(‘catalog_product’, ‘shirt_size’); <span style="color:#080;font-style:italic">//change shirt_size to your attribute code  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$attribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">usesSource</span>()) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$options</span> <span style="color:#666">=</span> <span style="color:#b8860b">$attribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSource</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getAllOptions</span>(<span style="color:#a2f;font-weight:bold">false</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$options</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$option</span>) {  
</span></span><span style="display:flex;"><span> print_r(<span style="color:#b8860b">$option</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>In the above code, first line will initialize the attribute. Then we are checking if the attribute is using source model or not, if using then get all the options of that attribute.</p>
<p>It will output this for attribute shirt_size:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plain" data-lang="plain"><span style="display:flex;"><span>Array  
</span></span><span style="display:flex;"><span>(  
</span></span><span style="display:flex;"><span> [value] =&gt; 100  
</span></span><span style="display:flex;"><span> [label] =&gt; Small  
</span></span><span style="display:flex;"><span>)  
</span></span><span style="display:flex;"><span>Array  
</span></span><span style="display:flex;"><span>(  
</span></span><span style="display:flex;"><span> [value] =&gt; 99  
</span></span><span style="display:flex;"><span> [label] =&gt; Medium  
</span></span><span style="display:flex;"><span>)  
</span></span><span style="display:flex;"><span>Array  
</span></span><span style="display:flex;"><span>(  
</span></span><span style="display:flex;"><span> [value] =&gt; 98  
</span></span><span style="display:flex;"><span> [label] =&gt; Large  
</span></span><span style="display:flex;"><span>)</span></span></code></pre></div>
<p>If you are here to get attribute option’s label from value OR get attribute option’s value from label, just check out this post: <a href="http://ka.lpe.sh/2012/09/13/magento-get-product-attribute-select-option-idlabelvalue/">http://ka.lpe.sh/2012/09/13/magento-get-product-attribute-select-option-idlabelvalue/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get attribute value</title>
      <link>http://localhost:1313/magento-get-attribute-value/</link>
      <pubDate>Sat, 15 Jun 2013 20:49:33 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-attribute-value/</guid>
      <description>&lt;p&gt;To get product attribute value in Magento is very common. You will need it everytime when dealing with catalog products in your development. Attributes have different types, which can be any of Text Field, Text Area, Date, Yes/No, Multiple Select, Dropdown, Price, Gallery, Media Image, Fixed Product Tax (as you can see in backend &lt;em&gt;Manage Attributes &amp;gt; New Attribute &amp;gt; Catalog Input Type for Store Owner&lt;/em&gt;). To get the value for these different types of attributes there is no one straight line of code, you will need to use different code for getting values from plain attributes, while different code to get values from select and multiselect attributes.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>To get product attribute value in Magento is very common. You will need it everytime when dealing with catalog products in your development. Attributes have different types, which can be any of Text Field, Text Area, Date, Yes/No, Multiple Select, Dropdown, Price, Gallery, Media Image, Fixed Product Tax (as you can see in backend <em>Manage Attributes &gt; New Attribute &gt; Catalog Input Type for Store Owner</em>). To get the value for these different types of attributes there is no one straight line of code, you will need to use different code for getting values from plain attributes, while different code to get values from select and multiselect attributes.</p>
<p>Get attribute value for PLAIN TEXT, TEXTAREA or DATE type attribute:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$attribute_value</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getShirtSize</span>(); <span style="color:#080;font-style:italic">//for shirt_size attribute
</span></span></span></code></pre></div></p>
<p>Get value from SELECT, MULTISELECT, DROPDOWN or YES/NO attributes:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$attribute_value</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAttributeText</span>(<span style="color:#b8860b">$attribute_code</span>);</span></span></code></pre></div><br>
OR<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$attribute_value</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getResource</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getAttribute</span>(<span style="color:#b8860b">$attribute_code</span>)<span style="color:#666">-&gt;</span><span style="color:#b44">getFrontend</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getValue</span>(<span style="color:#b8860b">$product</span>);</span></span></code></pre></div></p>
<p>Get value from PRICE attributes:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$attribute_value</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getNew_price</span>(); <span style="color:#080;font-style:italic">//for attribute code “new_price”
</span></span></span></code></pre></div><br>
and in product list page,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$attribute_value</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getNewPrice</span>();</span></span></code></pre></div></p>
<p>Get attribute value by attribute code and productID WITHOUT loading whole product<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$attribute_value</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getResourceModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">getAttributeRawValue</span>(<span style="color:#b8860b">$product_id</span>, <span style="color:#b8860b">$attribute_code</span>, <span style="color:#b8860b">$store_id</span>);</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get attribute label</title>
      <link>http://localhost:1313/magento-get-attribute-label/</link>
      <pubDate>Sat, 15 Jun 2013 19:25:06 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-attribute-label/</guid>
      <description>&lt;p&gt;To get attribute label for the product in Magento is not that straight-forward as we do for getting attribute value. You will need attribute code and product object to get the attribute label as shown below.&lt;/p&gt;&#xA;&lt;p&gt;If you have the product object, you can use it to get the attribute’s label..&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$label&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getResource&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAttribute&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$attribute_code&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getFrontend&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getLabel&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;For the current/selected store view..&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$label&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$product&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getResource&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAttribute&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$attribute_code&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getStoreLabel&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;This will output you the label of the attribute associated with the attribute code you passed for that product. E.g. Shirt Size, Color, etc..&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>To get attribute label for the product in Magento is not that straight-forward as we do for getting attribute value. You will need attribute code and product object to get the attribute label as shown below.</p>
<p>If you have the product object, you can use it to get the attribute’s label..<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$label</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getResource</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getAttribute</span>(<span style="color:#b8860b">$attribute_code</span>)<span style="color:#666">-&gt;</span><span style="color:#b44">getFrontend</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getLabel</span>(<span style="color:#b8860b">$product</span>);</span></span></code></pre></div></p>
<p>For the current/selected store view..<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$label</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getResource</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getAttribute</span>(<span style="color:#b8860b">$attribute_code</span>)<span style="color:#666">-&gt;</span><span style="color:#b44">getStoreLabel</span>();</span></span></code></pre></div></p>
<p>This will output you the label of the attribute associated with the attribute code you passed for that product. E.g. Shirt Size, Color, etc..</p>
<p>To get select/dropdown attribute label by value OR to get select/dropdown attribute value by label, please check this post: <a href="http://ka.lpe.sh/2012/09/13/magento-get-product-attribute-select-option-idlabelvalue/">http://ka.lpe.sh/2012/09/13/magento-get-product-attribute-select-option-idlabelvalue/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get list of all product attributes</title>
      <link>http://localhost:1313/magento-get-list-of-all-product-attributes/</link>
      <pubDate>Sat, 15 Jun 2013 00:16:13 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-list-of-all-product-attributes/</guid>
      <description>&lt;p&gt;Get list of all the product attributes defined in Magento. This will fetch you an array with all the attribute codes as a key AND all the attribute details including attribute code as a value. You can limit this array by just attribute code and attribute label as per your need. I will show you all the possible attribute information you can fetch defined for the product.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$attrib_data&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(); &lt;span style=&#34;color:#b8860b&#34;&gt;$allAttributeCodes&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$attributes&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getResourceModel&lt;/span&gt;(‘catalog&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;product_attribute_collection’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getItems&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$attributes&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$attribute&lt;/span&gt;){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$attrib_data&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$attribute&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAttributeCode&lt;/span&gt;()] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$attribute&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getData&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//$allAttributeCodes[] = $attribute-&amp;gt;getAttributeCode();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;&lt;em&gt;Sample Output:&lt;/em&gt;&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Array(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [color] =&amp;gt; Array  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [entity_type_id] =&amp;gt; 10  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [attribute_code] =&amp;gt; color  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [attribute_model] =&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [backend_model] =&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [backend_type] =&amp;gt; int  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [backend_table] =&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [frontend_model] =&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [frontend_input] =&amp;gt; select  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [frontend_label] =&amp;gt; Color  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [frontend_class] =&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [source_model] =&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_required] =&amp;gt; 0  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_user_defined] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [default_value] =&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_unique] =&amp;gt; 0  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [note] =&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [attribute_id] =&amp;gt; 272  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [frontend_input_renderer] =&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_global] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_visible] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_searchable] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_filterable] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_comparable] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_visible_on_front] =&amp;gt; 0  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_html_allowed_on_front] =&amp;gt; 0  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_used_for_price_rules] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_filterable_in_search] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [used_in_product_listing] =&amp;gt; 0  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [used_for_sort_by] =&amp;gt; 0  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_configurable] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [apply_to] =&amp;gt; simple  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_visible_in_advanced_search] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [position] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_wysiwyg_enabled] =&amp;gt; 0  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_used_for_promo_rules] =&amp;gt; 1  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; )  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [other_attribute_code] =&amp;gt; Array  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ….  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; )  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Get list of all the product attributes defined in Magento. This will fetch you an array with all the attribute codes as a key AND all the attribute details including attribute code as a value. You can limit this array by just attribute code and attribute label as per your need. I will show you all the possible attribute information you can fetch defined for the product.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$attrib_data</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>(); <span style="color:#b8860b">$allAttributeCodes</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$attributes</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getResourceModel</span>(‘catalog<span style="color:#666">/</span>product_attribute_collection’)<span style="color:#666">-&gt;</span><span style="color:#b44">getItems</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$attributes</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$attribute</span>){  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$attrib_data</span>[<span style="color:#b8860b">$attribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAttributeCode</span>()] <span style="color:#666">=</span> <span style="color:#b8860b">$attribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//$allAttributeCodes[] = $attribute-&gt;getAttributeCode();  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}</span></span></code></pre></div>
<p><em>Sample Output:</em><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-plain" data-lang="plain"><span style="display:flex;"><span>Array(  
</span></span><span style="display:flex;"><span> [color] =&gt; Array  
</span></span><span style="display:flex;"><span> (  
</span></span><span style="display:flex;"><span> [entity_type_id] =&gt; 10  
</span></span><span style="display:flex;"><span> [attribute_code] =&gt; color  
</span></span><span style="display:flex;"><span> [attribute_model] =&gt;  
</span></span><span style="display:flex;"><span> [backend_model] =&gt;  
</span></span><span style="display:flex;"><span> [backend_type] =&gt; int  
</span></span><span style="display:flex;"><span> [backend_table] =&gt;  
</span></span><span style="display:flex;"><span> [frontend_model] =&gt;  
</span></span><span style="display:flex;"><span> [frontend_input] =&gt; select  
</span></span><span style="display:flex;"><span> [frontend_label] =&gt; Color  
</span></span><span style="display:flex;"><span> [frontend_class] =&gt;  
</span></span><span style="display:flex;"><span> [source_model] =&gt;  
</span></span><span style="display:flex;"><span> [is_required] =&gt; 0  
</span></span><span style="display:flex;"><span> [is_user_defined] =&gt; 1  
</span></span><span style="display:flex;"><span> [default_value] =&gt;  
</span></span><span style="display:flex;"><span> [is_unique] =&gt; 0  
</span></span><span style="display:flex;"><span> [note] =&gt;  
</span></span><span style="display:flex;"><span> [attribute_id] =&gt; 272  
</span></span><span style="display:flex;"><span> [frontend_input_renderer] =&gt;  
</span></span><span style="display:flex;"><span> [is_global] =&gt; 1  
</span></span><span style="display:flex;"><span> [is_visible] =&gt; 1  
</span></span><span style="display:flex;"><span> [is_searchable] =&gt; 1  
</span></span><span style="display:flex;"><span> [is_filterable] =&gt; 1  
</span></span><span style="display:flex;"><span> [is_comparable] =&gt; 1  
</span></span><span style="display:flex;"><span> [is_visible_on_front] =&gt; 0  
</span></span><span style="display:flex;"><span> [is_html_allowed_on_front] =&gt; 0  
</span></span><span style="display:flex;"><span> [is_used_for_price_rules] =&gt; 1  
</span></span><span style="display:flex;"><span> [is_filterable_in_search] =&gt; 1  
</span></span><span style="display:flex;"><span> [used_in_product_listing] =&gt; 0  
</span></span><span style="display:flex;"><span> [used_for_sort_by] =&gt; 0  
</span></span><span style="display:flex;"><span> [is_configurable] =&gt; 1  
</span></span><span style="display:flex;"><span> [apply_to] =&gt; simple  
</span></span><span style="display:flex;"><span> [is_visible_in_advanced_search] =&gt; 1  
</span></span><span style="display:flex;"><span> [position] =&gt; 1  
</span></span><span style="display:flex;"><span> [is_wysiwyg_enabled] =&gt; 0  
</span></span><span style="display:flex;"><span> [is_used_for_promo_rules] =&gt; 1  
</span></span><span style="display:flex;"><span> )  
</span></span><span style="display:flex;"><span> [other_attribute_code] =&gt; Array  
</span></span><span style="display:flex;"><span> (  
</span></span><span style="display:flex;"><span> ….  
</span></span><span style="display:flex;"><span> )  
</span></span><span style="display:flex;"><span>)</span></span></code></pre></div></p>
<p>Now you can easily access all the attribute information from the above array.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento filter products by status</title>
      <link>http://localhost:1313/magento-filter-products-by-status/</link>
      <pubDate>Sun, 26 May 2013 18:35:49 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-filter-products-by-status/</guid>
      <description>&lt;p&gt;Get all the products with status equal to enabled/disabled.&lt;/p&gt;&#xA;&lt;p&gt;If you are using Flat Catalog in Magento, you will not get disabled products by this filter as in flat table all the products are only enabled one. You can check if your Magento website uses flat catalog or not by going here:&lt;br&gt;&#xA;&lt;em&gt;Admin &amp;gt; System &amp;gt; Configuration &amp;gt; Catalog section &amp;gt; Catalog &amp;gt; Frontend&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Check &lt;em&gt;Use Flat Catalog Category&lt;/em&gt; and &lt;em&gt;Use Flat Catalog Product&lt;/em&gt;, if they are &lt;em&gt;Yes&lt;/em&gt; it means you are using flat catalog, if they are &lt;em&gt;No&lt;/em&gt; it means you are NOT using flat catalog.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Get all the products with status equal to enabled/disabled.</p>
<p>If you are using Flat Catalog in Magento, you will not get disabled products by this filter as in flat table all the products are only enabled one. You can check if your Magento website uses flat catalog or not by going here:<br>
<em>Admin &gt; System &gt; Configuration &gt; Catalog section &gt; Catalog &gt; Frontend</em></p>
<p>Check <em>Use Flat Catalog Category</em> and <em>Use Flat Catalog Product</em>, if they are <em>Yes</em> it means you are using flat catalog, if they are <em>No</em> it means you are NOT using flat catalog.</p>
<p>So, if you don’t have flat catalog enabled and you want to filter all the products with status equal to disabled, you can use below code:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$products</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>category’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$category_id</span>)  
</span></span><span style="display:flex;"><span><span style="color:#666">-&gt;</span><span style="color:#b44">getProductCollection</span>()  
</span></span><span style="display:flex;"><span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘<span style="color:#666">*</span>’) <span style="color:#080;font-style:italic">//whatever attributes you want to get here  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(  
</span></span><span style="display:flex;"><span> ‘status’,  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">array</span>(‘eq’ <span style="color:#666">=&gt;</span> Mage_Catalog_Model_Product_Status<span style="color:#666">::</span><span style="color:#b44">STATUS_DISABLED</span>)  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//replace DISABLED to ENABLED for products with status enabled  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>);</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento disable guest checkout / enable guest checkout</title>
      <link>http://localhost:1313/magento-disable-guest-checkout-/-enable-guest-checkout/</link>
      <pubDate>Sun, 26 May 2013 17:42:39 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-disable-guest-checkout-/-enable-guest-checkout/</guid>
      <description>&lt;p&gt;By default the guest checkout in Magento is enabled and visitors can place an order without registering to the website. Some websites require mandatory login for placing orders, and this default feature should be turned off to disallow guest checkout.&lt;/p&gt;&#xA;&lt;p&gt;To disable guest checkout, navigate to:&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;System &amp;gt; Configuration &amp;gt; Sales section &amp;gt; Checkout &amp;gt; Checkout Options&lt;/em&gt;&lt;br&gt;&#xA;Set &lt;em&gt;Allow Guest Checkout&lt;/em&gt; to &lt;em&gt;No&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;This will now disable any guest checkout in your site.&lt;br&gt;&#xA;To enable guest checkout, simply set the above dropdown option to &lt;em&gt;Yes&lt;/em&gt;.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>By default the guest checkout in Magento is enabled and visitors can place an order without registering to the website. Some websites require mandatory login for placing orders, and this default feature should be turned off to disallow guest checkout.</p>
<p>To disable guest checkout, navigate to:</p>
<p><em>System &gt; Configuration &gt; Sales section &gt; Checkout &gt; Checkout Options</em><br>
Set <em>Allow Guest Checkout</em> to <em>No</em></p>
<p>This will now disable any guest checkout in your site.<br>
To enable guest checkout, simply set the above dropdown option to <em>Yes</em>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento performace optimization, Catalog URL Rewrite Management</title>
      <link>http://localhost:1313/magento-performace-optimization-catalog-url-rewrite-management/</link>
      <pubDate>Sun, 26 May 2013 15:56:17 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-performace-optimization-catalog-url-rewrite-management/</guid>
      <description>&lt;p&gt;If your Magento site is slow, then one of the reason can be because of Catalog URL Rewrites. You can check in the Magento Admin &amp;gt; Catalog &amp;gt; URL Rewrite Management. If you see the catalog rewrites are very large than expected as per total Categories and Products you have, this will create your site to be slow. This generally gets too large if you edit the categories/products and change it’s URL. Generally we keep on changing the product URL to optimize for search engines or to correct some typo in the link. Magento saves all the previous category and product URLs even if it is changed many times, resulting in more number of URL rewrites in database. I have seen in one of the project, where total SKUs were near to 4,00,000 while the URL Rewrites were near to 46,00,000 with just one website and store!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If your Magento site is slow, then one of the reason can be because of Catalog URL Rewrites. You can check in the Magento Admin &gt; Catalog &gt; URL Rewrite Management. If you see the catalog rewrites are very large than expected as per total Categories and Products you have, this will create your site to be slow. This generally gets too large if you edit the categories/products and change it’s URL. Generally we keep on changing the product URL to optimize for search engines or to correct some typo in the link. Magento saves all the previous category and product URLs even if it is changed many times, resulting in more number of URL rewrites in database. I have seen in one of the project, where total SKUs were near to 4,00,000 while the URL Rewrites were near to 46,00,000 with just one website and store!</p>
<p><img src="http://ka.lpe.sh/wp-content/uploads/2013/05/Catalog_URL_Rewrite_Management.png" alt="Magento Catalog URL Rewrite Management"></p>
<p><strong>Solution:</strong><br>
– First step is ofcourse, to take the backup of table core_url_rewrite<br>
If something goes wrong then we can restore our old core_url_rewrite table to bring it back.</p>
<p>– Now truncate the table core_url_rewrite<br>
<em>truncate table core_url_rewrite</em> in your Mysql console or from phpMyAdmin to empty this table.</p>
<p>– Re-index “Catalog URL Rewrite” from Index Management<br>
This will create all the URL rewrites (current URLs only) for your categories and products and insert it into core_url_rewrite table.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento remove index.php from URL</title>
      <link>http://localhost:1313/magento-remove-index.php-from-url/</link>
      <pubDate>Sun, 26 May 2013 14:39:38 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-remove-index.php-from-url/</guid>
      <description>&lt;p&gt;In Magento remove index.php from URL using below steps. It will convert your URL from&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;http://www.example.com/index.php/blah&#34;&gt;http://www.example.com/index.php/blah&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;to&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;a href=&#34;http://www.example.com/blah&#34;&gt;http://www.example.com/blah&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;1.) In Magento &lt;em&gt;Admin &amp;gt; System &amp;gt; Configuration &amp;gt; Web &amp;gt; Search Engine Optimization&lt;/em&gt;, change the value of &lt;em&gt;Web Server Rewrites&lt;/em&gt; to &lt;em&gt;Yes&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Make sure your web server rewrite module is enabled. If you are using apache as your web server on Linux, you can check it by going to &lt;em&gt;/etc/apache2/mods-enabled/rewrite.load&lt;/em&gt;, if rewrite.load is present there it means your rewrite module is enabled. If not, you will need to copy &lt;em&gt;rewrite.load&lt;/em&gt; from &lt;em&gt;/etc/apache2/mods-available/&lt;/em&gt; and paste it at &lt;em&gt;/etc/apache2/mods-enabled/&lt;/em&gt; location. Then reload the apache by running &lt;em&gt;service apache2 reload&lt;/em&gt;.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In Magento remove index.php from URL using below steps. It will convert your URL from</p>
<p><em><a href="http://www.example.com/index.php/blah">http://www.example.com/index.php/blah</a></em></p>
<p>to</p>
<p><em><a href="http://www.example.com/blah">http://www.example.com/blah</a></em></p>
<p>1.) In Magento <em>Admin &gt; System &gt; Configuration &gt; Web &gt; Search Engine Optimization</em>, change the value of <em>Web Server Rewrites</em> to <em>Yes</em></p>
<p>Make sure your web server rewrite module is enabled. If you are using apache as your web server on Linux, you can check it by going to <em>/etc/apache2/mods-enabled/rewrite.load</em>, if rewrite.load is present there it means your rewrite module is enabled. If not, you will need to copy <em>rewrite.load</em> from <em>/etc/apache2/mods-available/</em> and paste it at <em>/etc/apache2/mods-enabled/</em> location. Then reload the apache by running <em>service apache2 reload</em>.</p>
<p>2.) Check the file permission of .htaccess, it should be present in Magento root directory and readable by server.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento clone collection &amp;#8211; How to clone collection in Magento</title>
      <link>http://localhost:1313/magento-clone-collection-%238211-how-to-clone-collection-in-magento/</link>
      <pubDate>Thu, 23 May 2013 09:03:43 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-clone-collection-%238211-how-to-clone-collection-in-magento/</guid>
      <description>&lt;p&gt;Clone collection in Magento in an easy and effective way. Cloning collection in Magento is not as straight forward as we do in PHP object cloning. That’s because Magento does not implement clone in it’s collection object, which is why if you try to clone Magento collection it will nothing but just a copy of the original collection itself. If the original collection gets updated, this cloned will also get updated, which is what we don’t want right?&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Clone collection in Magento in an easy and effective way. Cloning collection in Magento is not as straight forward as we do in PHP object cloning. That’s because Magento does not implement clone in it’s collection object, which is why if you try to clone Magento collection it will nothing but just a copy of the original collection itself. If the original collection gets updated, this cloned will also get updated, which is what we don’t want right?</p>
<p>Let’s see an example where PHP’s clone keyword will fail. Consider you have an $collection in the class method and you want to perform operations on this $collection in two different ways. So you need to clone this $collection and perform operation differently in both the collections so that both collections have different result set.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$coll1</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">clone</span> <span style="color:#b8860b">$collection</span>;  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$coll2</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">clone</span> <span style="color:#b8860b">$collection</span>;</span></span></code></pre></div>
<p>Let’s perform different operations on these two separate collections now, like this:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$coll1</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSelect</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">where</span>(‘first where condition’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$coll2</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSelect</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">where</span>(‘second where condition’);  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$coll1</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSize</span>() <span style="color:#666">==</span> <span style="color:#666">0</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$collection</span> <span style="color:#666">=</span> <span style="color:#b8860b">$coll2</span>;  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$collection</span> <span style="color:#666">=</span> <span style="color:#b8860b">$coll1</span>;  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>But this will fail and not work what we expect here. $collection here will hold BOTH the where conditions, instead of any one depending on the result of IF condition.</p>
<p>To overcome this, in Magento, what you have to do is:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Assuming you have original collection as $collection  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSelect</span>()  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">joinLeft</span>(‘table1 <span style="color:#a2f;font-weight:bold">as</span> table1alias’, ‘table1alias<span style="color:#666">.</span>entity_id<span style="color:#666">=</span>e<span style="color:#666">.</span>entity_id’,<span style="color:#a2f;font-weight:bold">array</span>(‘name’,’description’))  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">where</span>(‘<span style="color:#b8860b">$firstWhereCondition’</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$coll</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">clone</span> <span style="color:#b8860b">$collection</span>;  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$coll</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSize</span>() <span style="color:#666">==</span> <span style="color:#666">0</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$fromPart</span> <span style="color:#666">=</span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSelect</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getPart</span>(Zend_Db_Select<span style="color:#666">::</span><span style="color:#b44">FROM</span>); <span style="color:#080;font-style:italic">//getting all the FROM clause from collection  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$wherePart</span> <span style="color:#666">=</span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSelect</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getPart</span>(Zend_Db_Select<span style="color:#666">::</span><span style="color:#b44">WHERE</span>); <span style="color:#080;font-style:italic">//getting all the WHERE clause conditions from collection  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#080;font-style:italic">//debug to see what you have to remove  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#080;font-style:italic">//print_r($fromPart);print_r($wherePart);exit;
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span> unset(<span style="color:#b8860b">$fromPart</span>[‘table1alias’]); <span style="color:#080;font-style:italic">//removing table1 join which we did for first where condition  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> unset(<span style="color:#b8860b">$wherePart</span>[<span style="color:#666">0</span>]); <span style="color:#080;font-style:italic">//removing first where condition, this may be different based on your query
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//removed FROM and first WHERE condition from collection  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSelect</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">setPart</span>(Zend_Db_Select<span style="color:#666">::</span><span style="color:#b44">FROM</span>, <span style="color:#b8860b">$fromPart</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSelect</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">setPart</span>(Zend_Db_Select<span style="color:#666">::</span><span style="color:#b44">WHERE</span>, <span style="color:#b8860b">$wherePart</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//now assign FROM and second WHERE condition to collection  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSelect</span>()  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">joinLeft</span>(‘table1 <span style="color:#a2f;font-weight:bold">as</span> table1alias’, ‘table1alias<span style="color:#666">.</span>entity_id<span style="color:#666">=</span>e<span style="color:#666">.</span>entity_id’,<span style="color:#a2f;font-weight:bold">array</span>(‘name’,’description’))  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">where</span>(<span style="color:#b8860b">$secondWhereCondition</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//echo $collection-&gt;getSelect()-&gt;__toString();
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSize</span>();</span></span></code></pre></div>
<p>That’s it! You have just used one collection and applied two where conditions. Similarly you can even apply multiple FROM and WHERE clause conditions as per the requirement.</p>
<p>HTH!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento Recoverable Error Argument 1 passed to Mage _Core _Model _Store ::setWebsite() must be an instance of Mage_Core_Model_Website</title>
      <link>http://localhost:1313/magento-recoverable-error-argument-1-passed-to-mage-_core-_model-_store-setwebsite-must-be-an-instance-of-mage_core_model_website/</link>
      <pubDate>Wed, 22 May 2013 17:37:10 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-recoverable-error-argument-1-passed-to-mage-_core-_model-_store-setwebsite-must-be-an-instance-of-mage_core_model_website/</guid>
      <description>&lt;p&gt;Magento Recoverable Error: Argument 1 passed to Mage_Core_Model_Store::setWebsite() must be an instance of Mage_Core_Model_Website, null given, called in /var/www/xxx/app/code/core/Mage/Core/Model/App.php on line 634 and defined in /var/www/xxx/app/code/core/Mage/Core/Model/Store.php on line 395&lt;/p&gt;&#xA;&lt;p&gt;When migrating Magento site from old server to new server, this error often occurs and appears in var/log/system.log. It prevents your Magento Admin to load JS and CSS files hence your admin panel becomes skinless.&lt;/p&gt;&#xA;&lt;p&gt;The solution to get rid of this and load JS and CSS files is to run the following mysql commands in Mysql console or phpMyAdmin.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento Recoverable Error: Argument 1 passed to Mage_Core_Model_Store::setWebsite() must be an instance of Mage_Core_Model_Website, null given, called in /var/www/xxx/app/code/core/Mage/Core/Model/App.php on line 634 and defined in /var/www/xxx/app/code/core/Mage/Core/Model/Store.php on line 395</p>
<p>When migrating Magento site from old server to new server, this error often occurs and appears in var/log/system.log. It prevents your Magento Admin to load JS and CSS files hence your admin panel becomes skinless.</p>
<p>The solution to get rid of this and load JS and CSS files is to run the following mysql commands in Mysql console or phpMyAdmin.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-mariadb" data-lang="mariadb"><span style="display:flex;"><span><span style="color:#0b0;font-weight:bold">SET</span><span style="color:#bbb"> </span>FOREIGN_KEY_CHECKS<span style="color:#666">=</span><span style="color:#666">0</span>;<span style="color:#bbb">  
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#a2f;font-weight:bold">UPDATE</span><span style="color:#bbb"> </span><span style="color:#666">`</span>core_store<span style="color:#666">`</span><span style="color:#bbb"> </span><span style="color:#0b0;font-weight:bold">SET</span><span style="color:#bbb"> </span>store_id<span style="color:#bbb"> </span><span style="color:#666">=</span><span style="color:#bbb"> </span><span style="color:#666">0</span><span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">WHERE</span><span style="color:#bbb"> </span>code<span style="color:#666">=</span><span style="">’</span>admin<span style="">’</span>;<span style="color:#bbb">  
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#a2f;font-weight:bold">UPDATE</span><span style="color:#bbb"> </span><span style="color:#666">`</span>core_store_group<span style="color:#666">`</span><span style="color:#bbb"> </span><span style="color:#0b0;font-weight:bold">SET</span><span style="color:#bbb"> </span>group_id<span style="color:#bbb"> </span><span style="color:#666">=</span><span style="color:#bbb"> </span><span style="color:#666">0</span><span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">WHERE</span><span style="color:#bbb"> </span>name<span style="color:#666">=</span><span style="">’</span><span style="color:#a2f;font-weight:bold">Default</span><span style="">’</span>;<span style="color:#bbb">  
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#a2f;font-weight:bold">UPDATE</span><span style="color:#bbb"> </span><span style="color:#666">`</span>core_website<span style="color:#666">`</span><span style="color:#bbb"> </span><span style="color:#0b0;font-weight:bold">SET</span><span style="color:#bbb"> </span>website_id<span style="color:#bbb"> </span><span style="color:#666">=</span><span style="color:#bbb"> </span><span style="color:#666">0</span><span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">WHERE</span><span style="color:#bbb"> </span>code<span style="color:#666">=</span><span style="">’</span>admin<span style="">’</span>;<span style="color:#bbb">  
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#a2f;font-weight:bold">UPDATE</span><span style="color:#bbb"> </span><span style="color:#666">`</span>customer_group<span style="color:#666">`</span><span style="color:#bbb"> </span><span style="color:#0b0;font-weight:bold">SET</span><span style="color:#bbb"> </span>customer_group_id<span style="color:#bbb"> </span><span style="color:#666">=</span><span style="color:#bbb"> </span><span style="color:#666">0</span><span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">WHERE</span><span style="color:#bbb"> </span>customer_group_code<span style="color:#666">=</span><span style="">’</span><span style="color:#a2f;font-weight:bold">NOT</span><span style="color:#bbb"> </span>LOGGED<span style="color:#bbb"> </span><span style="color:#a2f;font-weight:bold">IN</span><span style="">’</span>;<span style="color:#bbb">  
</span></span></span><span style="display:flex;"><span><span style="color:#bbb"></span><span style="color:#0b0;font-weight:bold">SET</span><span style="color:#bbb"> </span>FOREIGN_KEY_CHECKS<span style="color:#666">=</span><span style="color:#666">1</span>;</span></span></code></pre></div>
<p>What the above mysql commands does is:<br>
– Disables foreign key checks on tables so that you don’t get any foreign key errors while executing immediate update queries.<br>
– Updates store, store_group and website tables with ID = 0, for admin user</p>
<p>Once the above set of queries are executed, don’t forget to <strong>clear cache</strong> to reflect your changes.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento add attribute to order</title>
      <link>http://localhost:1313/magento-add-attribute-to-order/</link>
      <pubDate>Fri, 10 May 2013 21:46:48 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-add-attribute-to-order/</guid>
      <description>&lt;p&gt;Adding custom attribute to order in Magento is same as we do for customer and category. The difference is we will use different setup class AND we will not need attribute set, group and attribute input type now. We will create a quick module which will do exactly what we want and nothing more than that. So let’s start our new module.&lt;/p&gt;&#xA;&lt;p&gt;1.) Create a file at app/etc/modules/ and name it whatever you want. I will name it Namespace_Module.xml&lt;br&gt;&#xA;Paste this code in that file:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;??&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;config&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;namespace_module&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;active&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/active&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;codepool&amp;gt;&lt;/span&gt;local&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/codepool&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/namespace_module&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Adding custom attribute to order in Magento is same as we do for customer and category. The difference is we will use different setup class AND we will not need attribute set, group and attribute input type now. We will create a quick module which will do exactly what we want and nothing more than that. So let’s start our new module.</p>
<p>1.) Create a file at app/etc/modules/ and name it whatever you want. I will name it Namespace_Module.xml<br>
Paste this code in that file:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#080">&lt;?xml version=&#34;1.0&#34;??&gt;</span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;config&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;modules&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;namespace_module&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;active&gt;</span>true<span style="color:#008000;font-weight:bold">&lt;/active&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;codepool&gt;</span>local<span style="color:#008000;font-weight:bold">&lt;/codepool&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/namespace_module&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/modules&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;/config&gt;</span></span></span></code></pre></div></p>
<p>2.) Create necessary directories to reach to app/code/local/Namespace/Module/etc/, so that we can create our config.xml there. Paste below code in this config file:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#080">&lt;?xml version=&#34;1.0&#34;??&gt;</span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;config&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;modules&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;namespace_module&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;version&gt;</span>0.0.1<span style="color:#008000;font-weight:bold">&lt;/version&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/namespace_module&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/modules&gt;&lt;/config&gt;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;global&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;resources&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;modulename_setup&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;setup&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;module&gt;</span>Namespace_Module<span style="color:#008000;font-weight:bold">&lt;/module&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;class&gt;</span>Mage_Sales_Model_Mysql4_Setup<span style="color:#008000;font-weight:bold">&lt;/class&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/setup&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;connection&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;use&gt;</span>core_setup<span style="color:#008000;font-weight:bold">&lt;/use&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/connection&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/modulename_setup&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;modulename_write&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;connection&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;use&gt;</span>core_write<span style="color:#008000;font-weight:bold">&lt;/use&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/connection&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/modulename_write&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;modulename_read&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;connection&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;use&gt;</span>core_read<span style="color:#008000;font-weight:bold">&lt;/use&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/connection&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/modulename_read&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/resources&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/global&gt;</span>  </span></span></code></pre></div></p>
<p>3.) Now comes our main file, which will create new Order attribute for us. Create file “mysql4-install-0.0.1.php” in app/code/local/Namespace/Module/sql/module_setup/, and paste the below code in it:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">startSetup</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttribute</span>(‘order’, ‘your_custom_attribute_here’, <span style="color:#a2f;font-weight:bold">array</span>(  
</span></span><span style="display:flex;"><span> ‘type’ <span style="color:#666">=&gt;</span> ‘varchar’,  
</span></span><span style="display:flex;"><span> ‘label’ <span style="color:#666">=&gt;</span> ‘Custom Order attribute label’,  
</span></span><span style="display:flex;"><span> ‘visible’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">true</span>,  
</span></span><span style="display:flex;"><span> ‘required’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">false</span>,  
</span></span><span style="display:flex;"><span> ‘visible_on_front’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">true</span>,  
</span></span><span style="display:flex;"><span> ‘user_defined’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">true</span>  
</span></span><span style="display:flex;"><span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">endSetup</span>();</span></span></code></pre></div></p>
<p>This will add new attribute to Order and after clearing cache you can see your custom attribute in backend “Manage Orders” screen and in customer frontend screen “My Orders”. HTH!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento add attribute to category</title>
      <link>http://localhost:1313/magento-add-attribute-to-category/</link>
      <pubDate>Fri, 10 May 2013 21:16:55 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-add-attribute-to-category/</guid>
      <description>&lt;p&gt;Adding category attribute in Magento is same as we add for product and customer. Here in this post I will create a custom module which will add your new custom category attribute in Magento. So let’s start with the module:&lt;/p&gt;&#xA;&lt;p&gt;1.) As usual, create an XML file in app/etc/modules/ directory, I will name it Namespace_Module.xml&lt;br&gt;&#xA;Paste below code in it changing the Namespace and Module as you want.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;??&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;config&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;modules&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;namespace_module&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;active&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/active&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;codepool&amp;gt;&lt;/span&gt;local&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/codepool&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/namespace_module&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/modules&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/config&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Adding category attribute in Magento is same as we add for product and customer. Here in this post I will create a custom module which will add your new custom category attribute in Magento. So let’s start with the module:</p>
<p>1.) As usual, create an XML file in app/etc/modules/ directory, I will name it Namespace_Module.xml<br>
Paste below code in it changing the Namespace and Module as you want.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#080">&lt;?xml version=&#34;1.0&#34;??&gt;</span>
</span></span><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;config&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;modules&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;namespace_module&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;active&gt;</span>true<span style="color:#008000;font-weight:bold">&lt;/active&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;codepool&gt;</span>local<span style="color:#008000;font-weight:bold">&lt;/codepool&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/namespace_module&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/modules&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;/config&gt;</span></span></span></code></pre></div></p>
<p>2.) Second step would be to create a file config.xml in app/code/local/Namespace/Module/etc/ directory. Create all the directories required get there. Paste the below code in it making sure you have changed Namespace and Module with your naming.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>xml version<span style="color:#666">=</span><span style="color:#b44">&#34;1.0&#34;</span><span style="color:#666">?</span><span style="color:#080">?&gt;</span><span style="">
</span></span></span><span style="display:flex;"><span><span style="">  
</span></span></span><span style="display:flex;"><span><span style="">&lt;config&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;modules&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;namespace_module&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;version&gt;0.0.1&lt;/version&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/namespace_module&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/modules&gt;&lt;/config&gt;
</span></span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""> &lt;global&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;resources&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;module&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;setup&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;module&gt;Namespace_Module&lt;/module&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;class&gt;Mage_Catalog_Model_Resource_Eav_Mysql4_Setup&lt;/class&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/setup&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;connection&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;use&gt;core_setup&lt;/use&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/connection&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/module&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;module_write&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;connection&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;use&gt;core_write&lt;/use&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/connection&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/module_write&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;module_read&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;connection&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;use&gt;core_read&lt;/use&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/connection&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/module_read&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/resources&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/global&gt;  
</span></span></span></code></pre></div><br>
I have only included setup class and connections as those are the only things we will need to execute our script which will insert the custom attribute to category in our Magento project.</p>
<p>3.) Here comes main file, which will actually add attribute to category. We will put below code in app/code/local/Namespace/Module/sql/module_setup/mysql4-install-0.1.0.php<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">startSetup</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttribute</span>(‘catalog_category’, ‘your_custom_attribute_here’, <span style="color:#a2f;font-weight:bold">array</span>(  
</span></span><span style="display:flex;"><span> ‘group’ <span style="color:#666">=&gt;</span> ‘General’,  
</span></span><span style="display:flex;"><span> ‘input’ <span style="color:#666">=&gt;</span> ‘text’,  
</span></span><span style="display:flex;"><span> ‘type’ <span style="color:#666">=&gt;</span> ‘varchar’,  
</span></span><span style="display:flex;"><span> ‘label’ <span style="color:#666">=&gt;</span> ‘Custom Category attribute label’,  
</span></span><span style="display:flex;"><span> ‘visible’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">true</span>,  
</span></span><span style="display:flex;"><span> ‘required’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">false</span>,  
</span></span><span style="display:flex;"><span> ‘visible_on_front’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">true</span>,  
</span></span><span style="display:flex;"><span> ‘global’ <span style="color:#666">=&gt;</span> Mage_Catalog_Model_Resource_Eav_Attribute<span style="color:#666">::</span><span style="color:#b44">SCOPE_GLOBAL</span>,  
</span></span><span style="display:flex;"><span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">endSetup</span>();  
</span></span><span style="display:flex;"><span><span style="color:#080">?&gt;</span><span style="">
</span></span></span></code></pre></div></p>
<p>We have used minimal things to create this module and add attribute to category. You can go further and do more additions from this.</p>
<p>After clearing cache, you will see that your new custom attribute appear in Category pages in frontend as well as Manage Categories section in backend. HTH!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento add attribute to customer</title>
      <link>http://localhost:1313/magento-add-attribute-to-customer/</link>
      <pubDate>Fri, 10 May 2013 20:52:55 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-add-attribute-to-customer/</guid>
      <description>&lt;p&gt;In Magento to add an attribute to customer is not an option in the admin panel like it does have for Product attribute. So you have to end up writing the script that will add your custom attribute in customer’s EAV tables.&lt;/p&gt;&#xA;&lt;p&gt;Below code will insert your custom customer attribute in Magento system. You can even specify whil creating the attribute whether that attribute should appear in the forms (like register/signup) or not.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In Magento to add an attribute to customer is not an option in the admin panel like it does have for Product attribute. So you have to end up writing the script that will add your custom attribute in customer’s EAV tables.</p>
<p>Below code will insert your custom customer attribute in Magento system. You can even specify whil creating the attribute whether that attribute should appear in the forms (like register/signup) or not.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$installer</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span>;  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$installer</span><span style="color:#666">-&gt;</span><span style="color:#b44">startSetup</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$setup</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">new</span> Mage_Eav_Model_Entity_Setup(‘core_setup’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$entityTypeId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$setup</span><span style="color:#666">-&gt;</span><span style="color:#b44">getEntityTypeId</span>(‘customer’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$attributeSetId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$setup</span><span style="color:#666">-&gt;</span><span style="color:#b44">getDefaultAttributeSetId</span>(<span style="color:#b8860b">$entityTypeId</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$attributeGroupId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$setup</span><span style="color:#666">-&gt;</span><span style="color:#b44">getDefaultAttributeGroupId</span>(<span style="color:#b8860b">$entityTypeId</span>, <span style="color:#b8860b">$attributeSetId</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$setup</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttribute</span>(‘customer’, ‘your_attribute_code_here’, <span style="color:#a2f;font-weight:bold">array</span>(  
</span></span><span style="display:flex;"><span> ‘input’ <span style="color:#666">=&gt;</span> ‘text’, <span style="color:#080;font-style:italic">//or select or whatever you like  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> ‘type’ <span style="color:#666">=&gt;</span> ‘int’, <span style="color:#080;font-style:italic">//or varchar or anything you want it  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> ‘label’ <span style="color:#666">=&gt;</span> ‘Attribute description goes here’,  
</span></span><span style="display:flex;"><span> ‘visible’ <span style="color:#666">=&gt;</span> <span style="color:#666">1</span>,  
</span></span><span style="display:flex;"><span> ‘required’ <span style="color:#666">=&gt;</span> <span style="color:#666">0</span>, <span style="color:#080;font-style:italic">//mandatory? then 1  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> ‘user_defined’ <span style="color:#666">=&gt;</span> <span style="color:#666">1</span>,  
</span></span><span style="display:flex;"><span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$setup</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToGroup</span>(  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$entityTypeId</span>,  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$attributeSetId</span>,  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$attributeGroupId</span>,  
</span></span><span style="display:flex;"><span> ‘your_attribute_code_here’,  
</span></span><span style="display:flex;"><span> ‘100’  
</span></span><span style="display:flex;"><span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$oAttribute</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘eav<span style="color:#666">/</span>config’)<span style="color:#666">-&gt;</span><span style="color:#b44">getAttribute</span>(‘customer’, ‘your_attribute_code_here’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$oAttribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">setData</span>(‘used_in_forms’, <span style="color:#a2f;font-weight:bold">array</span>(‘adminhtml_customer’));  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$oAttribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">save</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$setup</span><span style="color:#666">-&gt;</span><span style="color:#b44">endSetup</span>();</span></span></code></pre></div>
<p>Here we have used our custom attribute’s:<br>
– <em>input</em> type as <em>text</em>, but you can have it anything you like to appear in the form. It can be textarea, date, select or anything you want.<br>
– data <em>type</em> as <em>int</em>, but you can have it anything from text, datetime, varchar or decimal. Remember customer is EAV in Magento, so it needs this information to store all the future values of this attribute in customer_entity_int (customer_entity_*) table.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get products by attribute set id or name</title>
      <link>http://localhost:1313/magento-get-products-by-attribute-set-id-or-name/</link>
      <pubDate>Fri, 10 May 2013 19:18:29 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-products-by-attribute-set-id-or-name/</guid>
      <description>&lt;p&gt;In Magento get all the products by specific attribute set ID or Name with below code snippet. If you want to get products by attribute set Name, then first get the attribute set ID from name as shown in the first 4 lines of code. If you already have attribute set ID, ignore first 4 lines of code as it is only used if you have attribute set Name and not it’s ID.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In Magento get all the products by specific attribute set ID or Name with below code snippet. If you want to get products by attribute set Name, then first get the attribute set ID from name as shown in the first 4 lines of code. If you already have attribute set ID, ignore first 4 lines of code as it is only used if you have attribute set Name and not it’s ID.</p>
<p>The resultant array will give you all the products with all the attributes and values. You can narrow the attributes that you only need by specifying them when you call <em>$products-&gt;addAttributeToSelect(</em>)* or when you get all data from product <em>$prod-&gt;getData()</em>.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#080;font-style:italic">//If planning to get all products by attribute set NAME  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$attrSetName</span> <span style="color:#666">=</span> ‘your_attribute_set_name_here’;  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$attributeSetId</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘eav<span style="color:#666">/</span>entity_attribute_set’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$attrSetName</span>, ‘attribute_set_name’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">getAttributeSetId</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//If planning to get all products by attribute set ID  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$attributeSetId</span> <span style="color:#666">=</span> ‘your_attribute_set_id_here’;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$products</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCollection</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$products</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘attribute_set_id’,<span style="color:#b8860b">$attributeSetId</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$products</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘<span style="color:#666">*</span>’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$products</span><span style="color:#666">-&gt;</span><span style="color:#b44">load</span>();  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$products</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$prod</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$productsArray</span>[] <span style="color:#666">=</span> <span style="color:#b8860b">$prod</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>(); <span style="color:#080;font-style:italic">//get all data or specify any attribute  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">log</span>(<span style="color:#b8860b">$productsArray</span>());</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get all invoices and shipments of an order</title>
      <link>http://localhost:1313/magento-get-all-invoices-and-shipments-of-an-order/</link>
      <pubDate>Sun, 28 Apr 2013 19:37:49 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-all-invoices-and-shipments-of-an-order/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Getting all the invoices of an order:&lt;/strong&gt;&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$orderID&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;hasInvoices&lt;/span&gt;()) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$invIncrementIDs&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getInvoiceCollection&lt;/span&gt;() &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$inv&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$invIncrementIDs&lt;/span&gt;[] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$inv&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getIncrementId&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//other invoice details…  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; } Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$invIncrementIDs&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Getting all the shipments of an order:&lt;/strong&gt;&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$orderID&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$order&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getShipmentsCollection&lt;/span&gt;() &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$shipment&lt;/span&gt;)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$shipment&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getData&lt;/span&gt;()); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//get each shipment data here…  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><strong>Getting all the invoices of an order:</strong><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$order</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>order’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$orderID</span>);  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$order</span><span style="color:#666">-&gt;</span><span style="color:#b44">hasInvoices</span>()) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invIncrementIDs</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$order</span><span style="color:#666">-&gt;</span><span style="color:#b44">getInvoiceCollection</span>() <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$inv</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invIncrementIDs</span>[] <span style="color:#666">=</span> <span style="color:#b8860b">$inv</span><span style="color:#666">-&gt;</span><span style="color:#b44">getIncrementId</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//other invoice details…  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> } Mage<span style="color:#666">::</span><span style="color:#b44">log</span>(<span style="color:#b8860b">$invIncrementIDs</span>);  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div></p>
<p><strong>Getting all the shipments of an order:</strong><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$order</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>order’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$orderID</span>);  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$order</span><span style="color:#666">-&gt;</span><span style="color:#b44">getShipmentsCollection</span>() <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$shipment</span>)  
</span></span><span style="display:flex;"><span>{  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">log</span>(<span style="color:#b8860b">$shipment</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>()); <span style="color:#080;font-style:italic">//get each shipment data here…  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento join EAV collection with Flat table</title>
      <link>http://localhost:1313/magento-join-eav-collection-with-flat-table/</link>
      <pubDate>Sun, 28 Apr 2013 15:26:29 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-join-eav-collection-with-flat-table/</guid>
      <description>&lt;p&gt;Joining tables in Magento when it comes to EAV with Flat table is quite complicated. Consider you want to join sales_flat_order table with customer EAV tables to get Customer’s firstname and lastname, it becomes difficult as customer’s name comes from customer_entity_varchar table.&lt;/p&gt;&#xA;&lt;p&gt;Below code will join sales order flat table with customer EAV to get customer’s full name in the collection along with all the order details.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$coll&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCollection&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$fn&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘eav&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;entity_attribute’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;loadByCode&lt;/span&gt;(‘1’, ‘firstname’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$ln&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘eav&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;entity_attribute’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;loadByCode&lt;/span&gt;(‘1’, ‘lastname’);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$coll&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSelect&lt;/span&gt;()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;join&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(‘ce1’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; ‘customer_entity_varchar’), ‘ce1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;entity_id&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;main_table&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;customer_id’, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(‘firstname’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; ‘value’))  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;where&lt;/span&gt;(‘ce1&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;attribute_id&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;’&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$fn&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAttributeId&lt;/span&gt;())  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;join&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(‘ce2’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; ‘customer_entity_varchar’), ‘ce2&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;entity_id&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;main_table&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;customer_id’, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(‘lastname’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; ‘value’))  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;where&lt;/span&gt;(‘ce2&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;attribute_id&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;’&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$ln&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAttributeId&lt;/span&gt;())  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;columns&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;new&lt;/span&gt; Zend_Db_Expr(“CONCAT(&lt;span style=&#34;color:#b44&#34;&gt;`ce1`&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;`value`&lt;/span&gt;, ‘ ‘,&lt;span style=&#34;color:#b44&#34;&gt;`ce2`&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;`value`&lt;/span&gt;) &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;AS&lt;/span&gt; fullname”));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print_r(&lt;span style=&#34;color:#b8860b&#34;&gt;$coll&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getData&lt;/span&gt;());&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>Joining tables in Magento when it comes to EAV with Flat table is quite complicated. Consider you want to join sales_flat_order table with customer EAV tables to get Customer’s firstname and lastname, it becomes difficult as customer’s name comes from customer_entity_varchar table.</p>
<p>Below code will join sales order flat table with customer EAV to get customer’s full name in the collection along with all the order details.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$coll</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>order’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCollection</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$fn</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘eav<span style="color:#666">/</span>entity_attribute’)<span style="color:#666">-&gt;</span><span style="color:#b44">loadByCode</span>(‘1’, ‘firstname’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$ln</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘eav<span style="color:#666">/</span>entity_attribute’)<span style="color:#666">-&gt;</span><span style="color:#b44">loadByCode</span>(‘1’, ‘lastname’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$coll</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSelect</span>()  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">join</span>(<span style="color:#a2f;font-weight:bold">array</span>(‘ce1’ <span style="color:#666">=&gt;</span> ‘customer_entity_varchar’), ‘ce1<span style="color:#666">.</span>entity_id<span style="color:#666">=</span>main_table<span style="color:#666">.</span>customer_id’, <span style="color:#a2f;font-weight:bold">array</span>(‘firstname’ <span style="color:#666">=&gt;</span> ‘value’))  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">where</span>(‘ce1<span style="color:#666">.</span>attribute_id<span style="color:#666">=</span>’<span style="color:#666">.</span><span style="color:#b8860b">$fn</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAttributeId</span>())  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">join</span>(<span style="color:#a2f;font-weight:bold">array</span>(‘ce2’ <span style="color:#666">=&gt;</span> ‘customer_entity_varchar’), ‘ce2<span style="color:#666">.</span>entity_id<span style="color:#666">=</span>main_table<span style="color:#666">.</span>customer_id’, <span style="color:#a2f;font-weight:bold">array</span>(‘lastname’ <span style="color:#666">=&gt;</span> ‘value’))  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">where</span>(‘ce2<span style="color:#666">.</span>attribute_id<span style="color:#666">=</span>’<span style="color:#666">.</span><span style="color:#b8860b">$ln</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAttributeId</span>())  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">columns</span>(<span style="color:#a2f;font-weight:bold">new</span> Zend_Db_Expr(“CONCAT(<span style="color:#b44">`ce1`</span><span style="color:#666">.</span><span style="color:#b44">`value`</span>, ‘ ‘,<span style="color:#b44">`ce2`</span><span style="color:#666">.</span><span style="color:#b44">`value`</span>) <span style="color:#a2f;font-weight:bold">AS</span> fullname”));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>print_r(<span style="color:#b8860b">$coll</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>());</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Check if any particular customer is currently logged in</title>
      <link>http://localhost:1313/magento-check-if-any-particular-customer-is-currently-logged-in/</link>
      <pubDate>Thu, 25 Apr 2013 14:08:51 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-check-if-any-particular-customer-is-currently-logged-in/</guid>
      <description>&lt;p&gt;Let’s say you want to check if any particular customer is currently logged in to your site or not. Or let’s check how many customers with their customer IDs and other activities are online on your store.&lt;/p&gt;&#xA;&lt;p&gt;This little script will help you in finding all the currently active OR any particular customer(s) active in your store.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;require&lt;/span&gt; “app&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;php”;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;umask(&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$collection&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘log&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;visitor_online’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;prepare&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCollection&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Get all the customers that are logged in……  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$collection&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getData&lt;/span&gt;() &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$cust&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘Customer ID&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; ‘&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$cust&lt;/span&gt;[‘customer_id’] &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; ‘  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;‘;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘Last URL visited&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; ‘&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$cust&lt;/span&gt;[‘last_url’] &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; ‘  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;‘;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘First visit&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; ‘&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$cust&lt;/span&gt;[‘first_visit_at’] &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; ‘  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;‘;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘Last visit&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt; ‘&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$cust&lt;/span&gt;[‘last_visit_at’] &lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt; ‘  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;‘;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘&lt;span style=&#34;color:#666&#34;&gt;======================&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;‘;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Get any particular customer, if he’s currently logged in or not…..  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$collection&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addFieldToFilter&lt;/span&gt;(‘customer_id’, &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addCustomerData&lt;/span&gt;(); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//5 is customer ID of customer you want to check  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$collection&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;count&lt;/span&gt;()) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘Customer is logged in’;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; ‘Customer is &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;NOT&lt;/span&gt; logged in’;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>Let’s say you want to check if any particular customer is currently logged in to your site or not. Or let’s check how many customers with their customer IDs and other activities are online on your store.</p>
<p>This little script will help you in finding all the currently active OR any particular customer(s) active in your store.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">require</span> “app<span style="color:#666">/</span>Mage<span style="color:#666">.</span>php”;  
</span></span><span style="display:flex;"><span>umask(<span style="color:#666">0</span>);  
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$collection</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘log<span style="color:#666">/</span>visitor_online’)<span style="color:#666">-&gt;</span><span style="color:#b44">prepare</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getCollection</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Get all the customers that are logged in……  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>() <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$cust</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘Customer ID<span style="color:#666">:</span> ‘<span style="color:#666">.</span><span style="color:#b8860b">$cust</span>[‘customer_id’] <span style="color:#666">.</span> ‘  
</span></span><span style="display:flex;"><span>‘;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘Last URL visited<span style="color:#666">:</span> ‘<span style="color:#666">.</span><span style="color:#b8860b">$cust</span>[‘last_url’] <span style="color:#666">.</span> ‘  
</span></span><span style="display:flex;"><span>‘;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘First visit<span style="color:#666">:</span> ‘<span style="color:#666">.</span><span style="color:#b8860b">$cust</span>[‘first_visit_at’] <span style="color:#666">.</span> ‘  
</span></span><span style="display:flex;"><span>‘;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘Last visit<span style="color:#666">:</span> ‘<span style="color:#666">.</span><span style="color:#b8860b">$cust</span>[‘last_visit_at’] <span style="color:#666">.</span> ‘  
</span></span><span style="display:flex;"><span>‘;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘<span style="color:#666">======================</span>  
</span></span><span style="display:flex;"><span>‘;  
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Get any particular customer, if he’s currently logged in or not…..  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">addFieldToFilter</span>(‘customer_id’, <span style="color:#666">5</span>)<span style="color:#666">-&gt;</span><span style="color:#b44">addCustomerData</span>(); <span style="color:#080;font-style:italic">//5 is customer ID of customer you want to check  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">count</span>()) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘Customer is logged in’;  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘Customer is <span style="color:#a2f;font-weight:bold">NOT</span> logged in’;  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento Special price products page</title>
      <link>http://localhost:1313/magento-special-price-products-page/</link>
      <pubDate>Thu, 25 Apr 2013 11:26:42 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-special-price-products-page/</guid>
      <description>&lt;p&gt;Magento special price products page. We will be creating a new CMS page that will display all the Special or Sale products. We can make a product as a Special by filling it’s “Special From” and “Special To” price in “Prices” tab in Manage Products individual screen.&lt;/p&gt;&#xA;&lt;p&gt;So let’s first create CMS Page, by going to CMS &amp;gt; Pages, which we will name it as “Specials”. In the Content tab of that Page, paste the below line of code:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt; {{block type=”catalog/product_special” template=”catalog/product/list.phtml” column_count=”3″ num_products=”0″}}&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;and save the page.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento special price products page. We will be creating a new CMS page that will display all the Special or Sale products. We can make a product as a Special by filling it’s “Special From” and “Special To” price in “Prices” tab in Manage Products individual screen.</p>
<p>So let’s first create CMS Page, by going to CMS &gt; Pages, which we will name it as “Specials”. In the Content tab of that Page, paste the below line of code:<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> {{block type=”catalog/product_special” template=”catalog/product/list.phtml” column_count=”3″ num_products=”0″}}</span></span></span></code></pre></div><br>
and save the page.</p>
<p>– Here we are saying Magento to display Product List template by looking at our new block type file, Catalog/Product/Block/Special.php. So let’s create this file, Special.php in local/Mage/Catalog/Product/Block/ directory. You will have to create this directory path if it’s not already there.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#a2f;font-weight:bold">class</span> <span style="color:#00f">Mage_Catalog_Block_Product_Special</span> <span style="color:#a2f;font-weight:bold">extends</span> Mage_Catalog_Block_Product_List
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#a2f;font-weight:bold">protected</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">_getProductCollection</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#a2f;font-weight:bold">if</span> (is_null(<span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">_productCollection</span>)) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$categoryID</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCategoryId</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$categoryID</span>)  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$category</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">new</span> Mage_Catalog_Model_Category();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$category</span><span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$categoryID</span>); <span style="color:#080;font-style:italic">// this is category id  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$collection</span> <span style="color:#666">=</span> <span style="color:#b8860b">$category</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProductCollection</span>();  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">else</span>  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$collection</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getResourceModel</span>(‘catalog<span style="color:#666">/</span>product_collection’);  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$todayDate</span> <span style="color:#666">=</span> date(‘m<span style="color:#666">/</span>d<span style="color:#666">/</span>y’);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$tomorrow</span> <span style="color:#666">=</span> mktime(<span style="color:#666">0</span>, <span style="color:#666">0</span>, <span style="color:#666">0</span>, date(‘m’), date(‘d’)<span style="color:#666">+</span><span style="color:#666">1</span>, date(‘y’));  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$tomorrowDate</span> <span style="color:#666">=</span> date(‘m<span style="color:#666">/</span>d<span style="color:#666">/</span>y’, <span style="color:#b8860b">$tomorrow</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>layer’)<span style="color:#666">-&gt;</span><span style="color:#b44">prepareProductCollection</span>(<span style="color:#b8860b">$collection</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSort</span>(‘created_at’, ‘desc’);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">addStoreFilter</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘special_from_date’, <span style="color:#a2f;font-weight:bold">array</span>(‘date’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">true</span>, ‘to’ <span style="color:#666">=&gt;</span> <span style="color:#b8860b">$todayDate</span>))  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘special_to_date’, <span style="color:#a2f;font-weight:bold">array</span>(‘or’<span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">array</span>(  
</span></span><span style="display:flex;"><span> <span style="color:#666">0</span> <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">array</span>(‘date’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">true</span>, ‘from’ <span style="color:#666">=&gt;</span> <span style="color:#b8860b">$tomorrowDate</span>),  
</span></span><span style="display:flex;"><span> <span style="color:#666">1</span> <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">array</span>(‘is’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">new</span> Zend_Db_Expr(‘null’)))  
</span></span><span style="display:flex;"><span> ), ‘left’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$numProducts</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getNumProducts</span>() <span style="color:#666">?</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getNumProducts</span>() <span style="color:#666">:</span> <span style="color:#666">0</span>;  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">setPage</span>(<span style="color:#666">1</span>, <span style="color:#b8860b">$numProducts</span>)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_productCollection</span> <span style="color:#666">=</span> <span style="color:#b8860b">$collection</span>;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_productCollection</span>;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}  
</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento 500 internal server error</title>
      <link>http://localhost:1313/magento-500-internal-server-error/</link>
      <pubDate>Sat, 09 Feb 2013 18:15:42 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-500-internal-server-error/</guid>
      <description>&lt;p&gt;[Resolved]: Magento 500 internal server error&lt;br&gt;&#xA;If you are getting “500 Internal Server Error” then the reason might be permissions issue or fatal error.&lt;/p&gt;&#xA;&lt;p&gt;In Magento, you can check the errors occured in files:&lt;br&gt;&#xA;var/log/system.log&lt;br&gt;&#xA;var/log/exception.log&lt;/p&gt;&#xA;&lt;p&gt;You can even allow the error to output to your browser by editing your Magento index.php with:&lt;br&gt;&#xA;error_reporting(E_ALL | E_STRICT);&lt;br&gt;&#xA;ini_set(‘display_errors’, 1);&lt;/p&gt;&#xA;&lt;p&gt;Also, try this to solve the error:&lt;br&gt;&#xA;– Check the owner of your magento project. It should be the server (www-data for apache)&lt;br&gt;&#xA;chown -R www-data:www-data .&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>[Resolved]: Magento 500 internal server error<br>
If you are getting “500 Internal Server Error” then the reason might be permissions issue or fatal error.</p>
<p>In Magento, you can check the errors occured in files:<br>
var/log/system.log<br>
var/log/exception.log</p>
<p>You can even allow the error to output to your browser by editing your Magento index.php with:<br>
error_reporting(E_ALL | E_STRICT);<br>
ini_set(‘display_errors’, 1);</p>
<p>Also, try this to solve the error:<br>
– Check the owner of your magento project. It should be the server (www-data for apache)<br>
chown -R www-data:www-data .</p>
<p>– Change the directory permissions to 755 and file permissions to 644 for your project<br>
find . -type d -exec chmod 0755 {} \;<br>
find . -type f -exec chmod 0644 {} \;<br>
chmod 550 pear<br>
chmod 550 mage<br>
chmod 755 -R var</p>
<p>– Check after upgrade do you have your .htaccess file inside Magento root</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Add additional product/item attributes in order and invoice emails</title>
      <link>http://localhost:1313/magento-add-additional-product/item-attributes-in-order-and-invoice-emails/</link>
      <pubDate>Thu, 24 Jan 2013 16:29:24 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-add-additional-product/item-attributes-in-order-and-invoice-emails/</guid>
      <description>&lt;p&gt;Recently I was working with a German client, who wanted to show additional product attribute options in the order and invoice emails due to stricter law for e-commerce in their country. Magento provides basic information in the default email templates, but each store has their unique requirement to show additional information.&lt;/p&gt;&#xA;&lt;p&gt;I will show you how to add extra product attribute values, along with order item options and custom options in order emails and invoice emails.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Recently I was working with a German client, who wanted to show additional product attribute options in the order and invoice emails due to stricter law for e-commerce in their country. Magento provides basic information in the default email templates, but each store has their unique requirement to show additional information.</p>
<p>I will show you how to add extra product attribute values, along with order item options and custom options in order emails and invoice emails.</p>
<p>Here is the code that should work for order and invoice emails to get additional PRODUCT ATTRIBUTES displayed:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$productId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$_item</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProduct</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>(); <span style="color:#080;font-style:italic">//for order emails  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//$productId = $_item-&gt;getProductId(); //for invoice emails  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$product</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$productId</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$attributes</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAttributes</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Get a list of all PRODUCT ATTRIBUTES you want to show in this array…  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$dispAttribs</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>(‘hardrive’, ‘memory’, ‘processor’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$attributes</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$attribute</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$attributeCode</span> <span style="color:#666">=</span> <span style="color:#b8860b">$attribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAttributeCode</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#666">!</span>in_array(<span style="color:#b8860b">$attributeCode</span>, <span style="color:#b8860b">$dispAttribs</span>)) <span style="color:#a2f;font-weight:bold">continue</span>;  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$label</span> <span style="color:#666">=</span> <span style="color:#b8860b">$attribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">getFrontend</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getLabel</span>(<span style="color:#b8860b">$product</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$value</span> <span style="color:#666">=</span> <span style="color:#b8860b">$attribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">getFrontend</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getValue</span>(<span style="color:#b8860b">$product</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “  
</span></span><span style="display:flex;"><span><span style="color:#666">**</span>” <span style="color:#666">.</span> <span style="color:#b8860b">$label</span> <span style="color:#666">.</span> “<span style="color:#666">:**</span> ” <span style="color:#666">.</span> <span style="color:#b8860b">$value</span>;  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div></p>
<p>For displaying CUSTOM OPTIONS and/or ITEM OPTIONS from the item, use this:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getItemOptions</span>() <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$opt</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(isset(<span style="color:#b8860b">$opt</span>[‘option_id’])) { <span style="color:#080;font-style:italic">//for CUSTOM OPTIONS  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#a2f;font-weight:bold">echo</span> “<span style="color:#666">**</span>” <span style="color:#666">.</span> <span style="color:#b8860b">$opt</span>[‘label’] <span style="color:#666">.</span> “<span style="color:#666">:**</span> “<span style="color:#666">.</span> <span style="color:#b8860b">$opt</span>[‘option_value’] <span style="color:#666">.</span> “  
</span></span><span style="display:flex;"><span>“;  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">else</span> { <span style="color:#080;font-style:italic">//for ITEM OPTIONS  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#a2f;font-weight:bold">echo</span> “<span style="color:#666">**</span>” <span style="color:#666">.</span> <span style="color:#b8860b">$opt</span>[‘label’] <span style="color:#666">.</span> “<span style="color:#666">:**</span> “<span style="color:#666">.</span> <span style="color:#b8860b">$opt</span>[‘value’] <span style="color:#666">.</span> “  
</span></span><span style="display:flex;"><span>“;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div></p>
<p>For adding code to ORDER emails, the file where the code should go is:<br>
app/design/frontend/base/default/template/email/order/items/order/default.phtml</p>
<p>For adding code to INVOICE emails, the file where the code should go is:<br>
app/design/frontend/base/default/template/email/order/items/invoice/default.phtml</p>
<p>Instead of base/default, you can put it in your custom theme location which is obvious.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento Certification Preparation / Interview Questions Answers</title>
      <link>http://localhost:1313/magento-certification-preparation-/-interview-questions-answers/</link>
      <pubDate>Fri, 04 Jan 2013 11:28:05 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-certification-preparation-/-interview-questions-answers/</guid>
      <description>&lt;p&gt;Hi guys, here is the stuff I collected and created from myriad number of websites/blogs/forums/ magento source codebase during my Magento certification preparation. I have put all the things I found and studied during my preparation in one place, so that other developers who are preparing for the exam can benefit from it.&lt;/p&gt;&#xA;&lt;p&gt;Credits to all who have contributed these things over the web from where I copied for study purpose. Few credits to me as well as I also have contributed many things in it 🙂 This may contain errors and wrong information and I don’t guarantee it to be completely correct. But this should be a good resource if you want a heads up! Please be aware that you need to go through the study guide and fundamental videos yourself in order to pass this exam.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Hi guys, here is the stuff I collected and created from myriad number of websites/blogs/forums/ magento source codebase during my Magento certification preparation. I have put all the things I found and studied during my preparation in one place, so that other developers who are preparing for the exam can benefit from it.</p>
<p>Credits to all who have contributed these things over the web from where I copied for study purpose. Few credits to me as well as I also have contributed many things in it 🙂 This may contain errors and wrong information and I don’t guarantee it to be completely correct. But this should be a good resource if you want a heads up! Please be aware that you need to go through the study guide and fundamental videos yourself in order to pass this exam.</p>
<p><em>If you are here to prepare for Interview, then I would recommend you to also go through these links:</em><br>
<a href="http://ka.lpe.sh/2012/07/19/magento-interview-questions-and-answers/" title="Magento Interview questions and answers">Magento Interview questions and answers</a><br>
<a href="http://ka.lpe.sh/2012/01/29/magento-advanced-interview-questions/" title="Magento Advanced Interview questions">Magento Advanced Interview questions/</a></p>
<p>The below stuff alone will definitely not going to help you much in passing the exam. Not to mention, these resource can also be used for Magento interview preparation.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span>Magento supports and loads translations in the following order:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> – Module Translation CSV in /app/locale  
</span></span><span style="display:flex;"><span> – Theme Translation CSV in /app/design/
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>&lt;<span style="color:#008000;font-weight:bold">area</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">area</span>&gt;/&lt;<span style="color:#008000;font-weight:bold">package</span>&gt;/&lt;<span style="color:#008000;font-weight:bold">theme</span>&gt;/locale (theme folder translate)  
</span></span><span style="display:flex;"><span> – DB Translation Database (table core_translate) ——-  
</span></span><span style="display:flex;"><span>How many options exist to add a custom translation for any given string?
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> As mentioned above, there are three options in Magento to add a custom translation to a text string: module translation, theme translation and inline translation.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 1. Module translation
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Module translations are stored in app/locale/languagecode_COUNTRYCODE/ folder in form of csv files, named as Namespace_Modulename.csv All string in extensions that are inside __() method can be translated this way
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 2. Theme translation
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Strings can be translated inside your theme, for that you just need to set locale via Magento admin area, then create translate.csv in app/design/frontend/&lt;<span style="color:#008000;font-weight:bold">package</span>&gt;/&lt;<span style="color:#008000;font-weight:bold">theme</span>&gt;/locale/ languagecode_COUNTRYCODE and put your translated strings inside this CSV  
</span></span><span style="display:flex;"><span> “My Cart”,”My Basket”  
</span></span><span style="display:flex;"><span> “My Account”,”Account”&lt;/<span style="color:#008000;font-weight:bold">theme</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">package</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 3. Inline translation
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> To enable inline translation you need to log into Admin panel and go to System -&gt; Configuration -&gt; Developer.  
</span></span><span style="display:flex;"><span> You need to select Store view from scope select and enable inline translation for this desired store view there.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Magento uses the Front Controller pattern for the following purposes:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Receiving and processing browser data, transferring it to other system elements;  
</span></span><span style="display:flex;"><span> Defining controller and proper action to perform using routes;  
</span></span><span style="display:flex;"><span> Displaying browser-requested data using blocks, templates and model data.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>(Front Controller) Routes processing order
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> – admin
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> – standard
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> – cms
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> – default  
</span></span><span style="display:flex;"><span>——-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Mage::getModel() =&gt; getModelInstance() =&gt; getModelClassName() =&gt; new ClassNameInitializes…
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage :: getModel($modelClass, $arguments){  
</span></span><span style="display:flex;"><span> Mage_Core_Model_Config :: getModelInstance($modelClass, $arguments){  
</span></span><span style="display:flex;"><span> $className = $this-&gt;getModelClassName($modelClass){  
</span></span><span style="display:flex;"><span> return $this-&gt;getGroupedClassName(‘model’, $modelClass)  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> …  
</span></span><span style="display:flex;"><span> $obj = new $className($arguments);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——-  
</span></span><span style="display:flex;"><span>Front Controller events… Mage_Core_Controller_Varien_Front
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>controller_front_init_before  
</span></span><span style="display:flex;"><span>controller_front_init_routers  
</span></span><span style="display:flex;"><span>controller_front_send_response_before  
</span></span><span style="display:flex;"><span>controller_front_send_response_after
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——-  
</span></span><span style="display:flex;"><span>Mage_Core_Controller_Varien_Action fires events…
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>controller_action_layout_load_before  
</span></span><span style="display:flex;"><span>controller_action_layout_generate_xml_before  
</span></span><span style="display:flex;"><span>controller_action_layout_generate_blocks_before  
</span></span><span style="display:flex;"><span>controller_action_layout_generate_blocks_after  
</span></span><span style="display:flex;"><span>controller_action_layout_render_before  
</span></span><span style="display:flex;"><span>controller_action_layout_render_before_{getFullActionName}  
</span></span><span style="display:flex;"><span>controller_action_predispatch  
</span></span><span style="display:flex;"><span>controller_action_predispatch_{getRouteName}  
</span></span><span style="display:flex;"><span>controller_action_predispatch_{getFullActionName}  
</span></span><span style="display:flex;"><span>controller_action_postdispatch  
</span></span><span style="display:flex;"><span>controller_action_postdispatch_{getFullActionName}  
</span></span><span style="display:flex;"><span>controller_action_postdispatch_{getRouteName}  
</span></span><span style="display:flex;"><span>controller_action_noroute  
</span></span><span style="display:flex;"><span>controller_action_nocookies
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>http://blog.belvg.com/magento-front-controller-pattern.html  
</span></span><span style="display:flex;"><span>http://magebase.com/magento-tutorials/digging-deeper-into-magentos-layout-xml-part-2/
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——-  
</span></span><span style="display:flex;"><span>The layout initialization happens as follows:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> 1. Instances of the Layout and Layout Update are created.  
</span></span><span style="display:flex;"><span> 2. Layout handles are added according to the $handles argument if passed.  
</span></span><span style="display:flex;"><span> 3. Store layout handle STORE_[store_code] is added to the Layout Update Instance. For example, if code of current store is en, then layout handle STORE_en is added.  
</span></span><span style="display:flex;"><span> 4. Theme layout handle THEME_[area]_[package]_[layout_theme] is added to the Layout Update Instance. For example, if the page rendered is for the frontend area, the current theme package name is magebase and theme name for layout is modern, then the layout handle THEME_frontend_magebase_modern is added.  
</span></span><span style="display:flex;"><span> 5. Action layout handle is added to the Layout Update Instance. For example, if the page rendered is a category detail page, then Magento is executing catalog module’s category controller’s view action. So it will add an action handle catalog_category_view.  
</span></span><span style="display:flex;"><span> 6. All Layout XML files defined for all active modules are loaded  
</span></span><span style="display:flex;"><span> 7. If a layout file named local.xml exists in the current theme’s layout folder, it is loaded last  
</span></span><span style="display:flex;"><span> 8. Layout updates of all added layout handles from the loaded layout XML are merged  
</span></span><span style="display:flex;"><span> 9. Layout updates of all added layout handles from the database are merged  
</span></span><span style="display:flex;"><span> 10. If the $generateXML argument of loadLayout() method is passed as false, the initialization is finished.  
</span></span><span style="display:flex;"><span> 11. The layout update data is refined by removing all blocks and block references defined with the remove tag. (As discussed in Part 1)  
</span></span><span style="display:flex;"><span> 12. If $generateBlocks argument is passed as false, the initialization is finished.  
</span></span><span style="display:flex;"><span> 13. The instances of block classes are created according to the block definitions in the Layout XML  
</span></span><span style="display:flex;"><span> 14. The methods are called with specified arguments on the blocks where action tags are defined. (As discussed in Part 1)  
</span></span><span style="display:flex;"><span>——-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>A layout should have at least one *output* block. Normally, the root block is the only output block in a layout but there can be multiple output blocks for a single page. In that case, the output of each output block is merged and returned in the response.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>The *non-output* blocks are child blocks of output blocks and are normally rendered with the getChildHtml() method. There are also two other methods: getChildChildHtml() and getBlockHtml() also used to render non-output blocks.  
</span></span><span style="display:flex;"><span>——-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Blocks can be instantiated via layout xml (&lt;<span style="color:#008000;font-weight:bold">block</span> <span style="color:#b44">addblock</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">after</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">and</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">config</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">createblock</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">crontab</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">file</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">finally</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">for</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">getblock</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">in</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">initialization</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">invokes</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">located</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">mage_core_model_layout</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">mage_cron_model_observer-</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">magento</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">methods</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">of</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">section</span><span style="color:#666">=</span><span style="color:#b44">&#34;&#34;</span> <span style="color:#b44">type</span><span style="color:#666">=</span><span style="color:#b44">&#34;”groupName/setup”…),&#34;</span>&gt;dipatch() that does the following:&lt;/<span style="color:#008000;font-weight:bold">block</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Process scheduled cron queue: Magento reads the cron schedule table for jobs that need to be executed this very second and jobs that should have already been executed, i.e. with timestamps in the past, that haven’t expired. The expiry limit is also a parameter, configurable in the admin panel. After all the work, dispatch method calls two generate() and cleanup() methods
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Generate tasks schedule: Mage_Cron_Model_Observer-&gt;generate(), this method searches final configuration file for content of &lt;<span style="color:#008000;font-weight:bold">crontab</span>&gt; nodes ($config = Mage::getConfig()-&gt;getNode(‘crontab/jobs’); ), reading &lt;<span style="color:#008000;font-weight:bold">schedule</span>&gt;&lt;<span style="color:#008000;font-weight:bold">cron_expr</span>&gt; elements to find out when and how often they need to be executed and pulls this data into the cron_schedule table.&lt;/<span style="color:#008000;font-weight:bold">cron_expr</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">schedule</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">crontab</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Cleanup: Mage_Cron_Model_Observer-&gt;cleanup(), this method deletes completed (with ‘success’ status) or missed ($time <span style="">&lt;</span> $now – $scheduleLifetime, where $scheduleLifetime are set in Magento admin area) jobs from cron_schedule DB table. ------- 1. All .xml files are collected into one big simpleXmlElement object 2. First, data is loaded from app/etc/*.xml and then from app/etc/modules/*.xml. Based on the module loaded information, config.xml is loaded from the etc directory of the module. If we load backend to check ACL and build menu elements, adminhtml.xml and system.xml are loaded as well. Configuration data from the database is the last one to load. 3. Any parameters, except the ones stored in app/etc/local.xml, can be overridden in config.xml of a custom module. P.S. Even though Magento provides us with such convenient methods as Mage:: getStoreConfig() and Mage:: getStoreConfigFlag(), we can reach any element of the configuration tree with the help of Mage::getConfig()-&gt;getNode($path, $scope, $scopeCode);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——-  
</span></span><span style="display:flex;"><span>Difference: A Website, a Store and a Store View.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Each websites has its unique customer and order base, base currency and prices.  
</span></span><span style="display:flex;"><span> Stores can be used to define for example different (looking) stores with the same information.  
</span></span><span style="display:flex;"><span> Store Views are mostly used to handle different languages on your website. You will typically have one Store View per language.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-  
</span></span><span style="display:flex;"><span>Setting And Getting Cookies
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> To set cookies:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage::getModel(‘core/cookie’)-&gt;set(‘cookie_name’, ‘cookie_value’, 0); # session cookie  
</span></span><span style="display:flex;"><span> Mage::getModel(‘core/cookie’)-&gt;set(‘cookie_name’, ‘cookie_value’, 60); #lasts 60 seconds
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> To get cookies:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage::getModel(‘core/cookie’)-&gt;get(‘made_productalerts_stock’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Sending Transactional E-Mails
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $email = Mage::getModel(‘core/email_template’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $email-&gt;sendTransactional(  
</span></span><span style="display:flex;"><span> ‘some_email_template’, // template  
</span></span><span style="display:flex;"><span> array(‘name’ =&gt; ‘Your Company’, ’email’ =&gt; ‘contact@yourcompany.com’), // sender details  
</span></span><span style="display:flex;"><span> ‘joe@joebloggs.com’, // recipient email  
</span></span><span style="display:flex;"><span> ‘Joe Bloggs’, // recipient name  
</span></span><span style="display:flex;"><span> array(‘customerName’ =&gt; ‘Joe Bloggs’), // merge vars  
</span></span><span style="display:flex;"><span> Mage::app()-&gt;getStore()-&gt;getStoreId() // store id  
</span></span><span style="display:flex;"><span> );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-  
</span></span><span style="display:flex;"><span>Resizing A Product Image
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $helper = Mage::helper(‘catalog/image’);  
</span></span><span style="display:flex;"><span> $helper-&gt;init($product, ‘image’);  
</span></span><span style="display:flex;"><span> $helper-&gt;resize(216, 161);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-  
</span></span><span style="display:flex;"><span>Adding A Layout Handle From A Controller
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> If you really need to add a handle to a controller, you need to replace the call to $this-&gt;loadLayout() with:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $update = $this-&gt;getLayout()-&gt;getUpdate();  
</span></span><span style="display:flex;"><span> $update-&gt;addHandle(‘default’);  
</span></span><span style="display:flex;"><span> $this-&gt;addActionLayoutHandles();  
</span></span><span style="display:flex;"><span> $update-&gt;addHandle(‘your_handle’);  
</span></span><span style="display:flex;"><span> $this-&gt;loadLayoutUpdates();  
</span></span><span style="display:flex;"><span> $this-&gt;generateLayoutXml();  
</span></span><span style="display:flex;"><span> $this-&gt;generateLayoutBlocks();  
</span></span><span style="display:flex;"><span> $this-&gt;_isLayoutLoaded = true;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Config URL Rewrite Definition
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> xpath: global/rewrite/module/from<span style="color:#999;font-weight:bold">&amp;amp;</span>to  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">config</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">rewrite</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">namespace_module</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">from</span>&gt;<span style="color:#080">&lt;![CDATA[#^/some/regex/([a-z]*/?$#]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">from</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">to</span>&gt;<span style="color:#080">&lt;![CDATA[/frontname/whatever/whatever/blah/$1]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">to</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">namespace_module</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">rewrite</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">config</span>&gt;  
</span></span><span style="display:flex;"><span>———-  
</span></span><span style="display:flex;"><span>Config Model Rewrite Definition
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> xpath: global/models/catalog/rewrite/product  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">config</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">models</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">catalog</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">rewrite</span>&gt; &lt;<span style="color:#008000;font-weight:bold">product</span>&gt;Namespace_Module_Catalog_Product&lt;/<span style="color:#008000;font-weight:bold">product</span>&gt; &lt;/<span style="color:#008000;font-weight:bold">rewrite</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">catalog</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">models</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">config</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-  
</span></span><span style="display:flex;"><span>Overriding A Controller
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> xpath: frontend/routers/checkout/args/modules/  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">config</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">frontend</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">routers</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">checkout</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">args</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">modules</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">your_module</span> <span style="color:#b44">before</span><span style="color:#666">=</span><span style="color:#b44">&#34;Mage_Checkout&#34;</span>&gt;Your_Module_Checkout&lt;/<span style="color:#008000;font-weight:bold">your_module</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">modules</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">args</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">checkout</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">routers</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">frontend</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">config</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-  
</span></span><span style="display:flex;"><span>Config Transactional Email Template Definition
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">config</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">template</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">email</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">your_module_email_something_template</span> <span style="color:#b44">module</span><span style="color:#666">=</span><span style="color:#b44">&#34;namespace_module&#34;</span> <span style="color:#b44">translate</span><span style="color:#666">=</span><span style="color:#b44">&#34;label&#34;</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">label</span>&gt;Something&lt;/<span style="color:#008000;font-weight:bold">label</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">file</span>&gt;namespace/module/something.html&lt;/<span style="color:#008000;font-weight:bold">file</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">type</span>&gt;html&lt;/<span style="color:#008000;font-weight:bold">type</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">your_module_email_something_template</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">email</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">template</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">config</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-  
</span></span><span style="display:flex;"><span>Block Caching
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> To cache a block individually, add this method to the blocks class:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> protected function _construct()  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> $this-&gt;addData(array(  
</span></span><span style="display:flex;"><span> ‘cache_lifetime’ =&gt; 3600,  
</span></span><span style="display:flex;"><span> ‘cache_tags’ =&gt; array(Mage_Cms_Model_Block::CACHE_TAG),  
</span></span><span style="display:flex;"><span> ‘cache_key’ =&gt; ‘CACHE_KEY’,  
</span></span><span style="display:flex;"><span> ));  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———–  
</span></span><span style="display:flex;"><span>Config Two-Level Memcached <span style="color:#999;font-weight:bold">&amp;amp;</span> DB Definition
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">config</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">cache</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">backend</span>&gt;memcached&lt;/<span style="color:#008000;font-weight:bold">backend</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">slow_backend</span>&gt;database&lt;/<span style="color:#008000;font-weight:bold">slow_backend</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">id_prefix</span>&gt;cache_&lt;/<span style="color:#008000;font-weight:bold">id_prefix</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">memcached</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">servers</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">server1</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">host</span>&gt;<span style="color:#080">&lt;![CDATA[localhost]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">host</span>&gt; &lt;<span style="color:#008000;font-weight:bold">port</span>&gt;<span style="color:#080">&lt;![CDATA[11211]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">port</span>&gt; &lt;<span style="color:#008000;font-weight:bold">persistent</span>&gt;<span style="color:#080">&lt;![CDATA[0]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">persistent</span>&gt; &lt;<span style="color:#008000;font-weight:bold">weight</span>&gt;<span style="color:#080">&lt;![CDATA[1]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">weight</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">timeout</span>&gt;<span style="color:#080">&lt;![CDATA[60]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">timeout</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">retry_interval</span>&gt;<span style="color:#080">&lt;![CDATA[10]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">retry_interval</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">server1</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">servers</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">compression</span>&gt;<span style="color:#080">&lt;![CDATA[0]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">compression</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">cache_dir</span>&gt;<span style="color:#080">&lt;![CDATA[]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">cache_dir</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">hashed_directory_level</span>&gt;<span style="color:#080">&lt;![CDATA[]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">hashed_directory_level</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">hashed_directory_umask</span>&gt;<span style="color:#080">&lt;![CDATA[]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">hashed_directory_umask</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">file_name_prefix</span>&gt;<span style="color:#080">&lt;![CDATA[]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">file_name_prefix</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">memcached</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">cache</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">full_page_cache</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">backend</span>&gt;memcached&lt;/<span style="color:#008000;font-weight:bold">backend</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">slow_backend</span>&gt;database&lt;/<span style="color:#008000;font-weight:bold">slow_backend</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">id_prefix</span>&gt;fullpagecache_&lt;/<span style="color:#008000;font-weight:bold">id_prefix</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">memcached</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">servers</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">server1</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">host</span>&gt;<span style="color:#080">&lt;![CDATA[localhost]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">host</span>&gt; &lt;<span style="color:#008000;font-weight:bold">port</span>&gt;<span style="color:#080">&lt;![CDATA[11211]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">port</span>&gt; &lt;<span style="color:#008000;font-weight:bold">persistent</span>&gt;<span style="color:#080">&lt;![CDATA[0]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">persistent</span>&gt; &lt;<span style="color:#008000;font-weight:bold">weight</span>&gt;<span style="color:#080">&lt;![CDATA[1]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">weight</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">timeout</span>&gt;<span style="color:#080">&lt;![CDATA[60]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">timeout</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">retry_interval</span>&gt;<span style="color:#080">&lt;![CDATA[10]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">retry_interval</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">server1</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">servers</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">compression</span>&gt;<span style="color:#080">&lt;![CDATA[0]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">compression</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">cache_dir</span>&gt;<span style="color:#080">&lt;![CDATA[]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">cache_dir</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">hashed_directory_level</span>&gt;<span style="color:#080">&lt;![CDATA[]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">hashed_directory_level</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">hashed_directory_umask</span>&gt;<span style="color:#080">&lt;![CDATA[]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">hashed_directory_umask</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">file_name_prefix</span>&gt;<span style="color:#080">&lt;![CDATA[]]&gt;</span>&lt;/<span style="color:#008000;font-weight:bold">file_name_prefix</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">memcached</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">full_page_cache</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">config</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———–  
</span></span><span style="display:flex;"><span>Add comment to form input in admin
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $afterElementHtml = ‘
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>&lt;<span style="color:#008000;font-weight:bold">small</span>&gt;‘ . ‘ this is the hint! ‘ . ‘&lt;/<span style="color:#008000;font-weight:bold">small</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>‘;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $linkFieldset-&gt;addField(‘field_name’, ‘text’, array(  
</span></span><span style="display:flex;"><span> ‘after_element_html’ =&gt; $afterElementHtml,  
</span></span><span style="display:flex;"><span> ));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———–  
</span></span><span style="display:flex;"><span>Category Product Collection
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> This snippet provides a collection of products within a category
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $cat = Mage::getModel(‘catalog/category’)-&gt;load(1);  
</span></span><span style="display:flex;"><span> $coll = Mage::getResourceModel(‘catalog/product_collection’);  
</span></span><span style="display:flex;"><span> $coll-&gt;addCategoryFilter($cat);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-  
</span></span><span style="display:flex;"><span>Adding BreadCrumbs
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Via code (usually in a controller):
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $crumbs = Mage::app()-&gt;getLayout-&gt;getBlock(‘breadcrumbs’);  
</span></span><span style="display:flex;"><span> $crumbs-&gt;addCrumb(‘home’, array(  
</span></span><span style="display:flex;"><span> ‘label’ =&gt; ‘Home’,  
</span></span><span style="display:flex;"><span> ‘title’ =&gt; ‘Go to Home Page’,  
</span></span><span style="display:flex;"><span> ‘link’ =&gt; Mage::getUrl(”)  
</span></span><span style="display:flex;"><span> ));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Via Layout XML:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">reference</span> <span style="color:#b44">name</span><span style="color:#666">=</span><span style="color:#b44">&#34;breadcrumbs&#34;</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">action</span> <span style="color:#b44">method</span><span style="color:#666">=</span><span style="color:#b44">&#34;addCrumb&#34;</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">crumbname</span>&gt;Home&lt;/<span style="color:#008000;font-weight:bold">crumbname</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">crumbinfo</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">label</span>&gt;Home&lt;/<span style="color:#008000;font-weight:bold">label</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">title</span>&gt;Go to Home Page&lt;/<span style="color:#008000;font-weight:bold">title</span>&gt; &lt;<span style="color:#008000;font-weight:bold">link</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">link</span>&gt;/ &lt;/<span style="color:#008000;font-weight:bold">crumbinfo</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">action</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">reference</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Adding new Total Collector Model….
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> extends… Mage_Sales_Model_Quote_Address_Total_Abstract  
</span></span><span style="display:flex;"><span> config… config/global/sales/quote/totals/custom…
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">config</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">sales</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">quote</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">totals</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">custom_total</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">class</span>&gt;mynamespace_mymodule/total&lt;/<span style="color:#008000;font-weight:bold">class</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">before</span>&gt;grand_total&lt;/<span style="color:#008000;font-weight:bold">before</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">after</span>&gt;subtotal,tax_subtotal&lt;/<span style="color:#008000;font-weight:bold">after</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">custom_total</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">totals</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">quote</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">sales</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">config</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> priority of total collector models can be changed by before and after tags..
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> The method *collect* is used to calculate total for the shopping cart, and the method *fetch* is used to fetch data to display in frontend
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>custom product type..
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> xpath: global/catalog/product/type/custom_product_type/model<span style="color:#999;font-weight:bold">&amp;amp;</span>price_model<span style="color:#999;font-weight:bold">&amp;amp;</span>allow_product_types<span style="color:#999;font-weight:bold">&amp;amp;</span>price_indexer  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">catalog</span>&gt; &lt;<span style="color:#008000;font-weight:bold">product</span>&gt; &lt;<span style="color:#008000;font-weight:bold">type</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">configurable</span> <span style="color:#b44">module</span><span style="color:#666">=</span><span style="color:#b44">&#34;catalog&#34;</span> <span style="color:#b44">translate</span><span style="color:#666">=</span><span style="color:#b44">&#34;label&#34;</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">label</span>&gt;Configurable Product&lt;/<span style="color:#008000;font-weight:bold">label</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">model</span>&gt;catalog/product_type_configurable&lt;/<span style="color:#008000;font-weight:bold">model</span>&gt; &lt;<span style="color:#008000;font-weight:bold">price_model</span>&gt;catalog/product_type_configurable_price&lt;/<span style="color:#008000;font-weight:bold">price_model</span>&gt; &lt;<span style="color:#008000;font-weight:bold">composite</span>&gt;1&lt;/<span style="color:#008000;font-weight:bold">composite</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">allow_product_types</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">simple</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">simple</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">virtual</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">virtual</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">allow_product_types</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">index_priority</span>&gt;30&lt;/<span style="color:#008000;font-weight:bold">index_priority</span>&gt; &lt;<span style="color:#008000;font-weight:bold">price_indexer</span>&gt;catalog/product_indexer_price_configurable&lt;/<span style="color:#008000;font-weight:bold">price_indexer</span>&gt; &lt;/<span style="color:#008000;font-weight:bold">configurable</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">type</span>&gt; &lt;/<span style="color:#008000;font-weight:bold">product</span>&gt; &lt;/<span style="color:#008000;font-weight:bold">catalog</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>custom indexer..
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> xpath: global/index/indexer/custom_indexer/model<span style="color:#999;font-weight:bold">&amp;amp;</span>depends  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">config</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">index</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">indexer</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">test_indexer</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">model</span>&gt;test/indexer&lt;/<span style="color:#008000;font-weight:bold">model</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">depends</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">catalog_url</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">catalog_url</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">depends</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">test_indexer</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">indexer</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">index</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">global</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;/<span style="color:#008000;font-weight:bold">config</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> class Blah.. extends Mage_Index_Model_Indexer_Abstract  
</span></span><span style="display:flex;"><span> getName: get custom indexer name  
</span></span><span style="display:flex;"><span> getDescription: get custom indexer description  
</span></span><span style="display:flex;"><span> _registerEvent: custom registered event  
</span></span><span style="display:flex;"><span> _processEvent: used when processing the index event  
</span></span><span style="display:flex;"><span> reindexAll: reindex all items of your entity
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage::getModel(‘index/indexer’)-&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————–  
</span></span><span style="display:flex;"><span>Getting A Database Adapter (Read or Write)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> To read:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage::getSingleton(‘core/resource’)-&gt;getConnection(‘core_read’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> To write:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage::getSingleton(‘core/resource’)-&gt;getConnection(‘core_write’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-  
</span></span><span style="display:flex;"><span>Add Product attribute
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $installer = Mage::getResourceModel(‘catalog/setup’, ‘catalog_setup’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> if (!$installer-&gt;getAttributeId(Mage_Catalog_Model_Product::ENTITY, ‘attribute_name’)) {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $installer-&gt;addAttribute(Mage_Catalog_Model_Product::ENTITY, ‘attribute_name’, array( // TABLE.COLUMN: DESCRIPTION:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘label’ =&gt; ‘Label’, // eav_attribute.frontend_label — admin input label
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘group’ =&gt; ‘General’, // (not a column) tab in product edit screen
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘sort_order’ =&gt; 0, // eav_entity_attribute.sort_order sort order in group
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘backend’ =&gt; ‘module/class_name’, // eav_attribute.backend_model — backend class (module/class_name format)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘type’ =&gt; ‘varchar’, // eav_attribute.backend_type — backend storage type (varchar, text etc)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘frontend’ =&gt; ‘module/class_name’, // eav_attribute.frontend_model — admin class (module/class_name format)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘note’ =&gt; null, // eav_attribute.note — admin input note (shows below input)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘default’ =&gt; null, // eav_attribute.default_value — admin input default value
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘wysiwyg_enabled’ =&gt; false, // catalog_eav_attribute.is_wysiwyg_enabled — (products only) admin input wysiwyg enabled
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘input’ =&gt; ‘input_name’, // eav_attribute.frontend_input — admin input type (select, text, textarea etc)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘input_renderer’ =&gt; ‘module/class_name’, // catalog_eav_attribute.frontend_input_renderer — (products only) admin input renderer  
</span></span><span style="display:flex;"><span> (otherwise input is used to resolve renderer)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘source’ =&gt; null, // eav_attribute.source_model — admin input source model (for selects) (module/class_name format)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘required’ =&gt; true, // eav_attribute.is_required — required in admin
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘user_defined’ =&gt; false, // eav_attribute.is_user_defined — editable in admin attributes section, false for not
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘unique’ =&gt; false, // eav_attribute.is_unique — unique value required
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘global’ =&gt; Mage_Catalog_Model_Resource_Eav_Attribute::SCOPE_GLOBAL, // catalog_eav_attribute.is_global —  
</span></span><span style="display:flex;"><span> (products only) scope
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘visible’ =&gt; true, // catalog_eav_attribute.is_visible — (products only) visible on admin, setting to false stops import  
</span></span><span style="display:flex;"><span> of this attribute
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘visible_on_front’ =&gt; false, // catalog_eav_attribute.is_visible_on_front — (products only) visible on frontend (store)  
</span></span><span style="display:flex;"><span> attribute table
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘used_in_product_listing’ =&gt; false, // catalog_eav_attribute.used_in_product_listing — (products only) made available in  
</span></span><span style="display:flex;"><span> product listing
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘searchable’ =&gt; false, // catalog_eav_attribute.is_searchable — (products only) searchable via basic search
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘visible_in_advanced_search’ =&gt; false, // catalog_eav_attribute.is_visible_in_advanced_search (products only) searchable via  
</span></span><span style="display:flex;"><span> advanced search
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘filterable’ =&gt; false, // catalog_eav_attribute.is_filterable — (products only) use in layered nav
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘filterable_in_search’ =&gt; false, // catalog_eav_attribute.is_filterable_in_search — (products only) use in search results  
</span></span><span style="display:flex;"><span> layered nav
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘comparable’ =&gt; false, // catalog_eav_attribute.is_comparable — (products only) comparable on frontend
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘is_html_allowed_on_front’ =&gt; true, // catalog_eav_attribute.is_visible_on_front — (products only) seems obvious, but also see  
</span></span><span style="display:flex;"><span> visible
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘apply_to’ =&gt; ‘simple,configurable’, // catalog_eav_attribute.apply_to — (products only) which product types to apply to
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘is_configurable’ =&gt; false, // catalog_eav_attribute.is_configurable — (products only) used for configurable products  
</span></span><span style="display:flex;"><span> or not
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘used_for_sort_by’ =&gt; false, // catalog_eav_attribute.used_for_sort_by — (products only) available in the ‘sort by’ menu
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘position’ =&gt; 0, // catalog_eav_attribute.position — (products only) position in layered naviagtion
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘used_for_promo_rules’ =&gt; false, // catalog_eav_attribute.is_used_for_promo_rules — (products only) available for use in  
</span></span><span style="display:flex;"><span> promo rules
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ));  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>—————  
</span></span><span style="display:flex;"><span>mage_sales_model_quote  
</span></span><span style="display:flex;"><span>* Supported events:  
</span></span><span style="display:flex;"><span> * sales_quote_load_after  
</span></span><span style="display:flex;"><span> * sales_quote_save_before  
</span></span><span style="display:flex;"><span> * sales_quote_save_after  
</span></span><span style="display:flex;"><span> * sales_quote_delete_before  
</span></span><span style="display:flex;"><span> * sales_quote_delete_after
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————  
</span></span><span style="display:flex;"><span>The “-&gt;getTypeInstance(true)” allows you to retrieve an object that describes the type of the product, where type is the internal magento type. So, you can use this method to determine if a products is a simple product, a bundled product, a configurable product, etc.  
</span></span><span style="display:flex;"><span>————
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Magento translate trace…
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage::helper(‘core’)-&gt;__()  
</span></span><span style="display:flex;"><span> Mage::app()-&gt;getTranslator()  
</span></span><span style="display:flex;"><span> Mage_Core_Model_Translate::translate()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————————————————  
</span></span><span style="display:flex;"><span>Show custom total…
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> sales_order_view – frontend order view page  
</span></span><span style="display:flex;"><span> sales_order_invoice  
</span></span><span style="display:flex;"><span> sales_order_creditmemo
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> sales_order_print – print page
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> sales_email_order_items – email template  
</span></span><span style="display:flex;"><span> sales_email_order_invoice_items  
</span></span><span style="display:flex;"><span> sales_email_order_creditmemo_items
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> adminhtml_sales_order_view – backend order view page  
</span></span><span style="display:flex;"><span> adminhtml_sales_order_invoice_new – backend new invoice view page  
</span></span><span style="display:flex;"><span> adminhtml_sales_order_invoice_view – backend invoice view page  
</span></span><span style="display:flex;"><span> adminhtml_sales_order_creditmemo_new – backend new creditmemo view page  
</span></span><span style="display:flex;"><span> adminhtml_sales_order_creditmemo_view – backend creditmemo view page
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Different from catalog cart rules, shopping cart rules define the promotion for customer only when customer checks out product. They can be specified by either coupon code or others.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————–  
</span></span><span style="display:flex;"><span>http://magento-quickies.tumblr.com/post/14272607486/configurable-product-research  
</span></span><span style="display:flex;"><span>————–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>*catalog_product_super_link* table only contains data related to configurable products.  
</span></span><span style="display:flex;"><span>*catalog_product_relation* contains the relation information for bundled and grouped products, in addition to the configurable relations.  
</span></span><span style="display:flex;"><span>*eav_entity_store* contains increment id information of orders, invoices, creditmemos, shipments, etc..  
</span></span><span style="display:flex;"><span>————–  
</span></span><span style="display:flex;"><span>*tier prices* works with website, customer group, price and quantity (price_qty).  
</span></span><span style="display:flex;"><span>————–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>admin menu, render navigation items by class Mage_Adminhtml_Block_Page_Menu
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>_isAllowed() checks navigation permission acl,
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>User: the entity that has an authority to use the system. The user that we mention in Magento is the backend user.  
</span></span><span style="display:flex;"><span>Role: the role of the user when logging in to the system. In Magento, a user has only a role.  
</span></span><span style="display:flex;"><span>Rule: the rule set of user and role. It defines user’s permission or role’s permission to access the resource.  
</span></span><span style="display:flex;"><span>Assert: the condition to active an item in ACL. It is used for a special control when checking permission by ACL.  
</span></span><span style="display:flex;"><span>—————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>– Accessing Magento API via SOAP – basic steps
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Create appropriate role (Magento Admin)  
</span></span><span style="display:flex;"><span>Create web services user (Magento Admin)  
</span></span><span style="display:flex;"><span>Assign created role to the user (Magento Admin)  
</span></span><span style="display:flex;"><span>Log-in to web service and retrieve Session Id (Soap Client)  
</span></span><span style="display:flex;"><span>Call appropriate method (Soap Client)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>—————–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Different ways to instantiate block:  
</span></span><span style="display:flex;"><span> – $block = new Packagename_Modulename_Block_Foo;  
</span></span><span style="display:flex;"><span> – $class = Mage::getConfig()-&gt;getBlockClassName(‘groupname/foo’);  
</span></span><span style="display:flex;"><span> $block = new $class;  
</span></span><span style="display:flex;"><span> – $layout = Mage::getSingleton(‘core/layout’);  
</span></span><span style="display:flex;"><span> $block = $layout-&gt;createBlock(‘groupname/foo’);  
</span></span><span style="display:flex;"><span> OR $block = $this-&gt;getLayout()-&gt;createBlock(‘groupname/foo’);  
</span></span><span style="display:flex;"><span> – &lt;<span style="color:#008000;font-weight:bold">block</span> <span style="color:#b44">name</span><span style="color:#666">=</span><span style="color:#b44">&#34;baz&#34;</span> <span style="color:#b44">type</span><span style="color:#666">=</span><span style="color:#b44">&#34;groupname/foo&#34;</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">block</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>– Call block outside Magento
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> require_once ‘app/Mage.php’;  
</span></span><span style="display:flex;"><span> Mage::init();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $layout = Mage::app()-&gt;getLayout();  
</span></span><span style="display:flex;"><span> $layout-&gt;getUpdate()  
</span></span><span style="display:flex;"><span> -&gt;addHandle(‘default’)  
</span></span><span style="display:flex;"><span> -&gt;addHandle(‘some_other_handle’)  
</span></span><span style="display:flex;"><span> -&gt;load();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> /*  
</span></span><span style="display:flex;"><span> * Generate blocks, but XML from previously loaded layout handles must be  
</span></span><span style="display:flex;"><span> * loaded first.  
</span></span><span style="display:flex;"><span> */  
</span></span><span style="display:flex;"><span> $layout-&gt;generateXml()  
</span></span><span style="display:flex;"><span> -&gt;generateBlocks();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $cart = $layout-&gt;getBlock(‘cart_sidebar’)-&gt;toHtml();  
</span></span><span style="display:flex;"><span> echo $cart;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>To create new attribute in customer frontend, these three tables will be affected:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> – eav_attribute  
</span></span><span style="display:flex;"><span> – customer_eav_attribute : id of eav_attribute here..  
</span></span><span style="display:flex;"><span> – customer_form_attribute : 3 entries here too, for adminhtml_customer, customer_account_create and customer_account_edit
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——————–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>simple models have a resource that inherits from Mage_Core_Model_Mysql4_Abstract  
</span></span><span style="display:flex;"><span>EAV models inherits from Mage_Eav_Model_Entity_Abstract
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Mage_Eav_Model_Entity_Abstract, there is no _init method  
</span></span><span style="display:flex;"><span>Mage_Eav_Model_Entity_Abstract :: _construct is not an abstract method
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>—————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>EAV setup: Mage_Eav_Model_Entity_Setup
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>//to add in eav_entity_type table…  
</span></span><span style="display:flex;"><span>$installer-&gt;addEntityType(‘complexworld_eavblogpost’, array(  
</span></span><span style="display:flex;"><span> //entity_mode is the URI you’d pass into a Mage::getModel() call  
</span></span><span style="display:flex;"><span> ‘entity_model’ =&gt; ‘complexworld/eavblogpost’,
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> //table refers to the resource URI complexworld/eavblogpost  
</span></span><span style="display:flex;"><span> //&lt;<span style="color:#008000;font-weight:bold">complexworld_resource</span>&gt;…&lt;<span style="color:#008000;font-weight:bold">eavblogpost</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">eavblogpost</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">complexworld_resource</span>&gt;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> ‘table’ =&gt;’complexworld/eavblogpost’,  
</span></span><span style="display:flex;"><span>));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>//to create eav tables for int, varchar, text, datetime, decimal…  
</span></span><span style="display:flex;"><span>$installer-&gt;createEntityTables(  
</span></span><span style="display:flex;"><span> $this-&gt;getTable(‘complexworld/eavblogpost’)  
</span></span><span style="display:flex;"><span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>if you have an order with three items and you refund one item the order don´t change the state, only when you refund all item of the order this change to closed state  
</span></span><span style="display:flex;"><span>————–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>to render a block, Mage_Core_Block_Template::renderView() is called  
</span></span><span style="display:flex;"><span>to render a block HTML, Mage_Core_Block_Template::_toHtml() is called
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>—————  
</span></span><span style="display:flex;"><span>In addAttribute(), if attribute is system, it will add to all existing attribute sets  
</span></span><span style="display:flex;"><span>—————
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>in Mage_Adminhtml_Block_Widget_Grid_Container  
</span></span><span style="display:flex;"><span>$_blockGroup is your module’s name.  
</span></span><span style="display:flex;"><span>$_controller is the path to your grid block.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Direct SQL queries:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $resource = Mage::getSingleton(‘core/resource’);  
</span></span><span style="display:flex;"><span> $readConnection = $resource-&gt;getConnection(‘core_read’);  
</span></span><span style="display:flex;"><span> $writeConnection = $resource-&gt;getConnection(‘core_write’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $tableName = $resource-&gt;getTableName(‘catalog_product_entity’);  
</span></span><span style="display:flex;"><span> $tableName = $resource-&gt;getTableName(‘catalog/product’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $readConnection-&gt;fetchAll(……
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> fetchAll() – Fetches all SQL result rows as a sequential array.  
</span></span><span style="display:flex;"><span> fetchCol() – Fetches the first column of all SQL result rows as an array.  
</span></span><span style="display:flex;"><span> fetchOne() – Fetches the first column of the first row of the SQL result.  
</span></span><span style="display:flex;"><span> fetchRow() – Fetches the first row of the SQL result.  
</span></span><span style="display:flex;"><span> fetchAssoc() – Fetches all SQL result rows as an associative array.  
</span></span><span style="display:flex;"><span> fetchPairs() – Fetches all SQL result rows as an array of key-value pairs.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Varien_Db_Adapter_Pdo_Mysql::prepareSqlCondition($fieldname, $condition)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> If $condition integer or string – exact value will be filtered (‘eq’ condition)  
</span></span><span style="display:flex;"><span> *  
</span></span><span style="display:flex;"><span> * If $condition is array – one of the following structures is expected:  
</span></span><span style="display:flex;"><span> * – array(“from” =&gt; $fromValue, “to” =&gt; $toValue)  
</span></span><span style="display:flex;"><span> * – array(“eq” =&gt; $equalValue)  
</span></span><span style="display:flex;"><span> * – array(“neq” =&gt; $notEqualValue)  
</span></span><span style="display:flex;"><span> * – array(“like” =&gt; $likeValue)  
</span></span><span style="display:flex;"><span> * – array(“in” =&gt; array($inValues))  
</span></span><span style="display:flex;"><span> * – array(“nin” =&gt; array($notInValues))  
</span></span><span style="display:flex;"><span> * – array(“notnull” =&gt; $valueIsNotNull)  
</span></span><span style="display:flex;"><span> * – array(“null” =&gt; $valueIsNull)  
</span></span><span style="display:flex;"><span> * – array(“moreq” =&gt; $moreOrEqualValue)  
</span></span><span style="display:flex;"><span> * – array(“gt” =&gt; $greaterValue)  
</span></span><span style="display:flex;"><span> * – array(“lt” =&gt; $lessValue)  
</span></span><span style="display:flex;"><span> * – array(“gteq” =&gt; $greaterOrEqualValue)  
</span></span><span style="display:flex;"><span> * – array(“lteq” =&gt; $lessOrEqualValue)  
</span></span><span style="display:flex;"><span> * – array(“finset” =&gt; $valueInSet)  
</span></span><span style="display:flex;"><span> * – array(“regexp” =&gt; $regularExpression)  
</span></span><span style="display:flex;"><span> * – array(“seq” =&gt; $stringEqual)  
</span></span><span style="display:flex;"><span> * – array(“sneq” =&gt; $stringNotEqual)  
</span></span><span style="display:flex;"><span> *  
</span></span><span style="display:flex;"><span> * If non matched – sequential array is expected and OR conditions  
</span></span><span style="display:flex;"><span> * will be built using above mentioned structure
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>reindex via code….
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> $indexer = Mage::getSingleton(‘index/indexer’);  
</span></span><span style="display:flex;"><span> $process = $indexer-&gt;getProcessByCode(‘catalog_product_price’);  
</span></span><span style="display:flex;"><span> $process-&gt;reindexEverything();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> The following are indexer codes which you can use instead of the catalog_product_price index above:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> catalog_product_attribute Product Attributes  
</span></span><span style="display:flex;"><span> catalog_product_price Product Prices  
</span></span><span style="display:flex;"><span> catalog_url Catalog URL Rewrites  
</span></span><span style="display:flex;"><span> catalog_product_flat Product Flat Data  
</span></span><span style="display:flex;"><span> catalog_category_flat Category Flat Data  
</span></span><span style="display:flex;"><span> catalog_category_product Category Products  
</span></span><span style="display:flex;"><span> catalogsearch_fulltext Catalog Search Index  
</span></span><span style="display:flex;"><span> cataloginventory_stock Stock Status  
</span></span><span style="display:flex;"><span> tag_summary Tag Aggregation Data
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————————
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Mage::getSingleton(‘core/session’)-&gt;addError(‘An Error’);  
</span></span><span style="display:flex;"><span>Mage::getSingleton(‘core/session’)-&gt;addWarning(‘A Warning’);  
</span></span><span style="display:flex;"><span>Mage::getSingleton(‘core/session’)-&gt;addNotice (‘A Notice’);  
</span></span><span style="display:flex;"><span>Mage::getSingleton(‘core/session’)-&gt;addSuccess(‘A Success’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>—————
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>display “out of stock” uses these indexes:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Product Attributes (catalog_product_attribute)  
</span></span><span style="display:flex;"><span> Product Prices (catalog_product_price)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>—————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Altering Config Data During Setup:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Setting a value in the default scope:  
</span></span><span style="display:flex;"><span> $installer-&gt;setConfigData(‘some/path’, ‘value’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Setting a value in a specific store:  
</span></span><span style="display:flex;"><span> $installer-&gt;setConfigData(‘some/path’, ‘value’, ‘stores’, 1);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Deleting a value from all scopes:  
</span></span><span style="display:flex;"><span> $installer-&gt;deleteConfigData(‘some/path’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Deleting a value from a certain scope (unfortunately you cannot choose which scope ID though:  
</span></span><span style="display:flex;"><span> $installer-&gt;deleteConfigData(‘some/path’, ‘stores’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Clearing cache:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Clean everything (use either):  
</span></span><span style="display:flex;"><span> Mage::app()-&gt;getCacheInstance()-&gt;flush();  
</span></span><span style="display:flex;"><span> Mage::app()-&gt;getCache()-&gt;clean();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Clean specific types:  
</span></span><span style="display:flex;"><span> Mage::app()-&gt;getCacheInstance()-&gt;cleanType(‘config’);  
</span></span><span style="display:flex;"><span> instead of config, we can use layout, block_html, translate, collections, eav, config_api
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Get all declared cache types:  
</span></span><span style="display:flex;"><span> Mage::app()-&gt;getCacheInstance()-&gt;getTypes();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>——————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>source model in backend Adminhtml module, *requires to return* toOptionArray()  
</span></span><span style="display:flex;"><span>source model in EAV while adding attributes *requires to return* getAllOptions()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>The core/template block is the foundation of the template system, allowing us the ability to load .phtml files from our themes.  
</span></span><span style="display:flex;"><span>The page/html_pager block provides generic methods for paginating collections, such as isLastPage().  
</span></span><span style="display:flex;"><span>cron/observer::dispatch handles the cron schedule’s creation, cleanup and execution of the jobs defined in the various config.xml files
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>—————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>required fields when creating a new category in backend:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>name, is_active, include_in_menu, available_sort_by, default_sort_by
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>required fields when creating a new product in backend:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>name, sku, weight, status, visibility, tax class, price, short_desc, description, qty  
</span></span><span style="display:flex;"><span>—————–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>The shipping rate is upon Weight vs. Destination, Price vs. Destination, or # of Items vs. Destination (site admin can configurate for that)
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>—————–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Mage_Shipping_Model_Carrier_Abstract:: collectRates()  
</span></span><span style="display:flex;"><span>Mage_Shipping_Model_Carrier_Interface:: isTrackingAvailable(), getAllowedMethods()
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>while adding new attributes in $setup-&gt;addAttribute(‘order’, …
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>| catalog_category |  
</span></span><span style="display:flex;"><span>| catalog_product |  
</span></span><span style="display:flex;"><span>| creditmemo |  
</span></span><span style="display:flex;"><span>| creditmemo_comment |  
</span></span><span style="display:flex;"><span>| creditmemo_item |  
</span></span><span style="display:flex;"><span>| customer |  
</span></span><span style="display:flex;"><span>| customer_address |  
</span></span><span style="display:flex;"><span>| customer_payment |  
</span></span><span style="display:flex;"><span>| invoice |  
</span></span><span style="display:flex;"><span>| invoice_comment |  
</span></span><span style="display:flex;"><span>| invoice_item |  
</span></span><span style="display:flex;"><span>| invoice_shipment |  
</span></span><span style="display:flex;"><span>| order |  
</span></span><span style="display:flex;"><span>| order_address |  
</span></span><span style="display:flex;"><span>| order_item |  
</span></span><span style="display:flex;"><span>| order_payment |  
</span></span><span style="display:flex;"><span>| order_status |  
</span></span><span style="display:flex;"><span>| order_status_history |  
</span></span><span style="display:flex;"><span>| quote |  
</span></span><span style="display:flex;"><span>| quote_address |  
</span></span><span style="display:flex;"><span>| quote_address_item |  
</span></span><span style="display:flex;"><span>| quote_address_rate |  
</span></span><span style="display:flex;"><span>| quote_item |  
</span></span><span style="display:flex;"><span>| quote_payment |  
</span></span><span style="display:flex;"><span>| shipment |  
</span></span><span style="display:flex;"><span>| shipment_comment |  
</span></span><span style="display:flex;"><span>| shipment_item |  
</span></span><span style="display:flex;"><span>| shipment_track |
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———————————-
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Adding JS, Skin JS and CSS files…
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">action</span> <span style="color:#b44">method</span><span style="color:#666">=</span><span style="color:#b44">&#34;addItem&#34;</span>&gt;&lt;<span style="color:#008000;font-weight:bold">type</span>&gt;skin_js&lt;/<span style="color:#008000;font-weight:bold">type</span>&gt;&lt;<span style="color:#008000;font-weight:bold">name</span>&gt;js/ie6.js&lt;/<span style="color:#008000;font-weight:bold">name</span>&gt;&lt;<span style="color:#008000;font-weight:bold">params</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">params</span>&gt;&lt;<span style="color:#008000;font-weight:bold">if</span>&gt;lt IE 7&lt;/<span style="color:#008000;font-weight:bold">if</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">action</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">action</span> <span style="color:#b44">method</span><span style="color:#666">=</span><span style="color:#b44">&#34;addItem&#34;</span>&gt;&lt;<span style="color:#008000;font-weight:bold">type</span>&gt;js&lt;/<span style="color:#008000;font-weight:bold">type</span>&gt;&lt;<span style="color:#008000;font-weight:bold">name</span>&gt;lib/ds-sleight.js&lt;/<span style="color:#008000;font-weight:bold">name</span>&gt;&lt;<span style="color:#008000;font-weight:bold">params</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">params</span>&gt;&lt;<span style="color:#008000;font-weight:bold">if</span>&gt;lt IE 7&lt;/<span style="color:#008000;font-weight:bold">if</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">action</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">action</span> <span style="color:#b44">method</span><span style="color:#666">=</span><span style="color:#b44">&#34;addItem&#34;</span>&gt;&lt;<span style="color:#008000;font-weight:bold">type</span>&gt;skin_css&lt;/<span style="color:#008000;font-weight:bold">type</span>&gt;&lt;<span style="color:#008000;font-weight:bold">name</span>&gt;css/styles-ie.css&lt;/<span style="color:#008000;font-weight:bold">name</span>&gt;&lt;<span style="color:#008000;font-weight:bold">params</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">params</span>&gt;&lt;<span style="color:#008000;font-weight:bold">if</span>&gt;lt IE 8&lt;/<span style="color:#008000;font-weight:bold">if</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">action</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">action</span> <span style="color:#b44">method</span><span style="color:#666">=</span><span style="color:#b44">&#34;addJs&#34;</span>&gt;&lt;<span style="color:#008000;font-weight:bold">script</span>&gt;mage<span style="color:#666">/</span>cookies.js&lt;/<span style="color:#008000;font-weight:bold">script</span>&gt;&lt;/<span style="color:#008000;font-weight:bold">action</span>&gt;  
</span></span><span style="display:flex;"><span> &lt;<span style="color:#008000;font-weight:bold">action</span> <span style="color:#b44">method</span><span style="color:#666">=</span><span style="color:#b44">&#34;addCss&#34;</span>&gt;&lt;<span style="color:#008000;font-weight:bold">style</span><span style="color:#b44">sheet</span>&gt;<span style="">css/print.css&lt;/stylesheet&gt;&lt;params&gt;media=”print”&lt;/params&gt;&lt;/action&gt;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>———–
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>CMS Directives…..
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> can be used in CMS, static blocks or emails
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> {{block id=’block_id’}}  
</span></span><span style="display:flex;"><span> {{block type=’module/package_classname’ template=’path/to/template.phtml’}}  
</span></span><span style="display:flex;"><span> {{config path=’section/group/field’}}  
</span></span><span style="display:flex;"><span> {{htmlescape var=” allowed_tags=”}}  
</span></span><span style="display:flex;"><span> {{htmlescape var=’[Hello](javascript:alert(1);)‘}}  
</span></span><span style="display:flex;"><span> //this outputs [Hello](javascript:alert(1);) and doesn’t interpreted by browsers  
</span></span><span style="display:flex;"><span> {{layout handle=”}}  
</span></span><span style="display:flex;"><span> {{media url=”}}  
</span></span><span style="display:flex;"><span> {{skin url=”}}  
</span></span><span style="display:flex;"><span> {{store url=”}}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> {{block type=’namespace_custom/test’ my_param1=’value 1′ my_param2=’value 2′}}</span></span></code></pre></div>
<p>BEST LUCK! :)</p>
<p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento Certified Developer Exam</title>
      <link>http://localhost:1313/magento-certified-developer-exam/</link>
      <pubDate>Thu, 27 Dec 2012 07:32:11 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-certified-developer-exam/</guid>
      <description>&lt;p&gt;Yesterday I gave my Magento Certified Developer exam and passed with a decent score. After sharing my score and success in the exam, most of my friends asked me how to prepare for this exam. So, here I share with you guys what I studied/prepared for this exam.&lt;/p&gt;&#xA;&lt;p&gt;For passing or getting good score in this exam, you must have very decent experience in Magento. Good amount of projects with both frontend and backend hands-on is highly recommended before taking this test.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Yesterday I gave my Magento Certified Developer exam and passed with a decent score. After sharing my score and success in the exam, most of my friends asked me how to prepare for this exam. So, here I share with you guys what I studied/prepared for this exam.</p>
<p>For passing or getting good score in this exam, you must have very decent experience in Magento. Good amount of projects with both frontend and backend hands-on is highly recommended before taking this test.</p>
<p>I prepared for 2 months, along with my work. Thanks to my wife who allowed me to study for the exam without disturbing or complaining 🙂 In the last 15 days before my test, I thank my Boss who allowed me to also prepare for the exam in the work hours.</p>
<p>First of all, I went through the videos available Free (On-Demand, 40 Hours, Fundamentals of Magento) on Magento website. You can even purchase more videos if you are interested.<br>
<a href="http://www.magentocommerce.com/training/on-demand">http://www.magentocommerce.com/training/on-demand</a></p>
<p>Then, most of the time I spent on Study Guide PDF. It’s very important because for each question it asks you, you have to dig the Magento source code to find the answer. That also helps you in improving your understanding of Magento architecture.<br>
<a href="http://www.magentocommerce.com/certification/">http://www.magentocommerce.com/certification/</a> (under Resources Tab)</p>
<p>Once you think that you are now prepared with all the items listed in the Study Guide PDF, you can cross-check it with the Magento Self-Assessment Checklist PDF.<br>
<a href="https://www.magentocommerce.com/services/certification">https://www.magentocommerce.com/services/certification</a></p>
<p>Go through all the articles by Alan Storm in the Knowledge Base section of Magentocommerce website. (Actually, that is the first step I took when starting my Magento career)<br>
Magestore.com has an dedicated blog category for Certification, go through all the topics:<br>
<a href="http://blog.magestore.com/category/magento-tutorials/magento-certificate-material/">http://blog.magestore.com/category/magento-tutorials/magento-certificate-material/</a></p>
<p>(If you still have time, I would recommend you to go through the stack overflow answers, related to Magento, given by Alan Storm, Vinai Kopp, …)<br>
<a href="http://stackoverflow.com/users/485589/vinai">http://stackoverflow.com/users/485589/vinai</a><br>
<a href="http://stackoverflow.com/users/4668/alan-storm">http://stackoverflow.com/users/4668/alan-storm</a><br>
<a href="http://stackoverflow.com/users/465971/ivan-chepurnyi">http://stackoverflow.com/users/465971/ivan-chepurnyi</a><br>
<a href="http://stackoverflow.com/tags/magento/topusers">Stack Overflow top Magento answerers</a><br>
You can find many more Magento gurus on StackOverflow.</p>
<p>Considering you have completed all the above mentioned preparation guides, there is no way you can fail in Magento Certified Developer exam!</p>
<p>Best luck.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Buy: Pinterest Auto Pin images right from your website!</title>
      <link>http://localhost:1313/buy-pinterest-auto-pin-images-right-from-your-website/</link>
      <pubDate>Fri, 02 Nov 2012 12:00:53 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/buy-pinterest-auto-pin-images-right-from-your-website/</guid>
      <description>&lt;p&gt;Pinterest has yet not released their API which can help developers to integrate to the system and autopin images directly from their website/blog. Yet, I have created an Pinterest API in PHP which will post your image to Pinterest with message, link and price.&lt;/p&gt;&#xA;&lt;p&gt;Just after entering correct email and password of your pinterest account, and providing Image URL, Message and link URL, you will be shown the list of boards you have, so that you can select any one and pin the image on it right from your website! Sounds interesting!? Here is the image that will help you understand how it works:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Pinterest has yet not released their API which can help developers to integrate to the system and autopin images directly from their website/blog. Yet, I have created an Pinterest API in PHP which will post your image to Pinterest with message, link and price.</p>
<p>Just after entering correct email and password of your pinterest account, and providing Image URL, Message and link URL, you will be shown the list of boards you have, so that you can select any one and pin the image on it right from your website! Sounds interesting!? Here is the image that will help you understand how it works:</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Nothing complicated, very easy to use, one click to pin your image directly to pinterest, click below button to buy it now! <a href="http://ka.lpe.sh/contact-me">Contact me</a> for any questions!<br>
Price: <!-- raw HTML omitted -->$49<!-- raw HTML omitted --> $39 <!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<p><img src="https://www.paypalobjects.com/en_GB/i/scr/pixel.gif" alt=""></p>
<!-- raw HTML omitted -->
]]></content:encoded>
    </item>
    <item>
      <title>Magento Get most popular products in a category</title>
      <link>http://localhost:1313/magento-get-most-popular-products-in-a-category/</link>
      <pubDate>Thu, 18 Oct 2012 12:34:02 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-most-popular-products-in-a-category/</guid>
      <description>&lt;p&gt;Magento get most popular products in any specified category using below code, you can show them in the sidebar of product detail page to let your visitors know the popularity of the products for that category.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$category&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘catalog&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;category’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$categoryId&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$products&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getResourceModel&lt;/span&gt;(‘reports&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;product_collection’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addOrderedQty&lt;/span&gt;() &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//total number of quantities ordered  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToSelect&lt;/span&gt;(‘&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;’) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//get all attributes  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setOrder&lt;/span&gt;(‘ordered_qty’, ‘desc’) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//most ordered quantity products first  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addCategoryFilter&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$category&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>Magento get most popular products in any specified category using below code, you can show them in the sidebar of product detail page to let your visitors know the popularity of the products for that category.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$category</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>category’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$categoryId</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$products</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getResourceModel</span>(‘reports<span style="color:#666">/</span>product_collection’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addOrderedQty</span>() <span style="color:#080;font-style:italic">//total number of quantities ordered  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘<span style="color:#666">*</span>’) <span style="color:#080;font-style:italic">//get all attributes  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#666">-&gt;</span><span style="color:#b44">setOrder</span>(‘ordered_qty’, ‘desc’) <span style="color:#080;font-style:italic">//most ordered quantity products first  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#666">-&gt;</span><span style="color:#b44">addCategoryFilter</span>(<span style="color:#b8860b">$category</span>);</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get route name, module name, controller and action name from URL</title>
      <link>http://localhost:1313/magento-get-route-name-module-name-controller-and-action-name-from-url/</link>
      <pubDate>Wed, 22 Aug 2012 15:03:52 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-route-name-module-name-controller-and-action-name-from-url/</guid>
      <description>&lt;p&gt;Getting route name, module name, controller name and action name is very easy in Magento. You can get these values anywhere, in controller itself and also in template files.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getRequest&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getControllerName&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getRequest&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getActionName&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getRequest&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getRouteName&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;app&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getRequest&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModuleName&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>Getting route name, module name, controller name and action name is very easy in Magento. You can get these values anywhere, in controller itself and also in template files.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getControllerName</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getActionName</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getRouteName</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getModuleName</span>();</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Migrate magento to new server / domain / database / host</title>
      <link>http://localhost:1313/migrate-magento-to-new-server-/-domain-/-database-/-host/</link>
      <pubDate>Sat, 21 Jul 2012 19:24:19 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/migrate-magento-to-new-server-/-domain-/-database-/-host/</guid>
      <description>&lt;p&gt;Move or migrate magento to new server, domain, database, host, anything by following the steps below.&lt;/p&gt;&#xA;&lt;p&gt;To configure your Magento with a new domain, you will need to do following steps:&lt;/p&gt;&#xA;&lt;p&gt;– Copy whole Magento project from current server and paste it to the new server.&lt;br&gt;&#xA;You can do server-to-server transfer. First, tar.gz your magento project&lt;br&gt;&#xA;&lt;code&gt;tar -cvf magento.tar.gz magento&lt;/code&gt;&lt;br&gt;&#xA;Then copy it to your new server from old server&lt;br&gt;&#xA;&lt;code&gt;scp magento.tar.gz root@your.ip.address.here:/var/www/.&lt;/code&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Move or migrate magento to new server, domain, database, host, anything by following the steps below.</p>
<p>To configure your Magento with a new domain, you will need to do following steps:</p>
<p>– Copy whole Magento project from current server and paste it to the new server.<br>
You can do server-to-server transfer. First, tar.gz your magento project<br>
<code>tar -cvf magento.tar.gz magento</code><br>
Then copy it to your new server from old server<br>
<code>scp magento.tar.gz root@your.ip.address.here:/var/www/.</code></p>
<p>– Backup the database (Admin -&gt; System -&gt; Tools -&gt; Backup)<br>
You can also take backup through phpMyAdmin, or by mysql.<br>
<code>mysqldump -u user -p database &gt; /path/to/keep/db.sql</code></p>
<p>– Logout from your old server. Login to new server.<br>
Extract the file magento.tar.gz that you sent from old server<br>
<code>tar -zxvf magento.tar.gz</code></p>
<p>– Delete all directory or files that are there in cache folder<br>
<code>rm -rf var/cache/*</code></p>
<p>– Edit local.xml that is in magento/app/etc/local.xml and change mysql username, password, database as per new server credentials</p>
<p>– Import the backed up database. Before that create empty database to dump tables in it.<br>
<code>mysql -u root -p 'password';&lt;br&gt;&lt;/br&gt;create database dbname;&lt;br&gt;&lt;/br&gt;exit;&lt;br&gt;&lt;/br&gt;mysql -u root -p -d dbname &lt; /path/to/your/db.sql</code></p>
<p>- Edit the database to change it to your new domain name. Search in core_config_data table for old domain.<br>
<code>select * from core_config_data where path like '%secure/base_url';</code><br>
and update it with your new domain<br>
<code>update core_config_data set value='http://mysite.com/' where path like '%secure/base_url';</code></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento Interview questions and answers</title>
      <link>http://localhost:1313/magento-interview-questions-and-answers/</link>
      <pubDate>Thu, 19 Jul 2012 11:25:13 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-interview-questions-and-answers/</guid>
      <description>&lt;p&gt;Magento Interview questions and answers for freshers as well as experienced developers.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;1. Explain Magento’s MVC architecture&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;First of all, what is MVC?&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;MVC stands for &lt;strong&gt;Model-View-Controller&lt;/strong&gt;. Any application that separates it’s data access, business logic and user interface is called MVC. There can be two types of MVC: &lt;strong&gt;convention-based and configuration-based&lt;/strong&gt;. Example, cakePHP is convention-based, i.e. you just need to follow the instructions of the core system to get your module ready in just few lines. Magento is configuration-based, i.e. you need to specify each and every thing to your module’s config file in order to get it work. Magento has controllers (for request/response routing), Block (for rendering content), Model (for business logic), Resource/Mysql4 (for database operations), etc (for module-specific configuration files), Helper (for common functions), sql (for setup scripts), layout (for connecting block with templates for each controller action) and template/.PHTML file (for Presentation i.e. View).&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento Interview questions and answers for freshers as well as experienced developers.</p>
<p><strong>1. Explain Magento’s MVC architecture</strong></p>
<p><em>First of all, what is MVC?</em></p>
<p>MVC stands for <strong>Model-View-Controller</strong>. Any application that separates it’s data access, business logic and user interface is called MVC. There can be two types of MVC: <strong>convention-based and configuration-based</strong>. Example, cakePHP is convention-based, i.e. you just need to follow the instructions of the core system to get your module ready in just few lines. Magento is configuration-based, i.e. you need to specify each and every thing to your module’s config file in order to get it work. Magento has controllers (for request/response routing), Block (for rendering content), Model (for business logic), Resource/Mysql4 (for database operations), etc (for module-specific configuration files), Helper (for common functions), sql (for setup scripts), layout (for connecting block with templates for each controller action) and template/.PHTML file (for Presentation i.e. View).</p>
<p><em>How Magento’s MVC works:</em></p>
<p>1. When you enter the URL (something like <a href="http://loca.lho.st/frontname/controller/method/param1/value1/param2/value2)">http://loca.lho.st/frontname/controller/method/param1/value1/param2/value2)</a>, this URL is intercepted by one PHP file called index.php which instantiates Magento application<br>
2. Magento application instantiates Front Controller object<br>
3. Further, front controller instantiates Router objects (specified in module’s config.xml, global tag)<br>
4. Now, Router is responsible to “match” the frontname which is in our URL<br>
5. If “match” is found, it sees controller name and method name in the URL, which is finally called.<br>
6. Now depending on what is written in action name (method name), it is executed. If any models are called in it, the controller method will instantiate that model and call the method in it which is requested.<br>
7. Then the controller action (method) instantiate the Layout object, which calls Block specified for this action (method) name (Each controller action name have block and template file associated with it, which can be found at app/design/frontend or adminhtml/namespace/module/layout/module.xml file, name of layout file (module.xml) can be found in config.xml of that module, in layout updates tag).<br>
8. Template file (.phtml) now calls the corresponding block for any method request. So, if you write $this-&gt;methodName in .phtml file, it will check “methodName” in the block file which is associated in module.xml file.<br>
9. Block contains PHP logic. It references Models for any data from DB.<br>
10. If either Block, Template file or Controller need to get/set some data from/to database, they can call Model directly like Mage::getModel(‘modulename/modelname’).<br>
For diagramatic view: <a href="http://alanstorm.com/2009/img/magento-book/magento-mvc.png">click here</a> (courtsey: Alan Storm)</p>
<p><strong>2. How Magento ORM works?</strong></p>
<p>ORM stands for <strong>Object Relational Mapping</strong>. It’s a programming technique used to convert different types of data to Objects and vice versa.</p>
<p>In Magento, ORM is shown as Model (based on Zend Framework’s Zend_Db_Adapter), which further breaks down to two types of Models.</p>
<p>– First is the “simple” i.e. <strong>Regular</strong> Models which is nothing but flat table or our regular table structure.<br>
– Second Model is <strong>EAV</strong> (Entity Attribute Value), which is quite complicated and expensive to query.</p>
<p>All Magento Models interacting with database are inherited from Mage_Core_Model_Abstract class, which is further inherited from Varien_Object.</p>
<p>Difference between two Models is, Simple Model is inherited from <em>Mage_Core_Model_Resource_Db_Abstract</em> class,<br>
while EAV is inherited from <em>Mage_Eav_Model_Entity_Abstract</em>.</p>
<p>For those who don’t know what EAV is, please read my 3rd answer below.</p>
<p>So, to end up this question,<br>
when you want to get some data in Magento, you call it like this:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘module<span style="color:#666">/</span>model’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#666">1</span>);</span></span></code></pre></div><br>
where 1 is the primary key id for some Regular/Simple table, while in EAV so many tables are joined to fetch just single row of data.</p>
<p><strong>3. What is EAV in Magento?</strong></p>
<p>EAV, stands for <strong>Entity Attribute Value</strong>, is a technique which allows you to add unlimited columns to your table virtually. Means, the fields which is represented in “column” way in a regular table, is represented in a “row” (records) way in EAV. In EAV, you have one table which holds all the “attribute” (table field names) data, and other tables which hold the “entity” (id or primary id) and value (value for that id) against each attribute.</p>
<p>In Magento, there is one table to hold attribute values called <em>eav_attribute</em> and 5-6 tables which holds entity and data in fully normalized form,</p>
<p>– eav_entity, eav_entity_int (for holding Integer values),<br>
– eav_entity_varchar (for holding Varchar values),<br>
– eav_entity_datetime (for holding Datetime values),<br>
– eav_entity_decimal (for holding Decimal/float values),<br>
– eav_entity_text (for holding text (mysql Text type) values).</p>
<p>EAV is expensive and should only be used when you are not sure about number of fields in a table which can vary in future. To just get one single record, Magento joins 4-5 tables to get data in EAV. But this doesn’t mean that EAV only has drawbacks. The main <strong>advantage of EAV</strong> is when you may want to add table field in future, when there are thousands or millions of records already present in your table. In regular table, if you add table field with these amount of data, it will screw up your table, as for each empty row also some bytes will be allocated as per data type you select. While in EAV, adding the table column will not affect the previously saved records (also the extra space will not get allocated!) and all the new records will seamlessly have data in these columns without any problem.</p>
<p><strong>4. Difference between Mage::getSingleton() and Mage::getModel()</strong></p>
<p>The difference between Mage:getSingleton() and Mage::getModel() is that the former one does not create an object if the object for same class is already created, while the later creates new objects every time for the class when it’s called.</p>
<p>Mage::getSingleton() uses the “<strong>singleton design pattern</strong>” of PHP. If the object is not created, it will create it.</p>
<p>Mage::getSingleton() is mostly used when you want to create an object once, modify it and later fetch from it. Popular example is session, you first create a session object, and then add/remove values from session across different pages, so that it retains your values (e.g. cart values, logged in customer details, etc.) and doesn’t create new session object losing your last changes.</p>
<p>Mage::getModel() is used when you want to have the fresh data from the database. Example is when you want to show records from database.</p>
<p><strong>8. How will you call a CMS page in your module’s PHTML file?</strong></p>
<p>$this-&gt;getLayout()-&gt;createBlock(‘cms/block’)-&gt;setBlockId(‘blockidentifier’)-&gt;toHtml();</p>
<p><strong>9. What is codePool in Magento?</strong></p>
<p>codePool is a tag which you have to specify when registering new module in app/etc/modules/Company_Module.xml<br>
There are 3 codePools in Magento: core, community and local, which are resided at app/code/ directory.<br>
Core codePool is used by Magento core team, Community is generally used by 3rd party extensions and Local codePool should be used for in-hour module development and overriding of core and community modules for custom requirement.<br>
So in short, codePool helps Magento to locate module inside app/code/ for processing.</p>
<p><strong>15. When will you need to clear cache to see the changes in Magento?</strong></p>
<p>When you have added/modified XML, JS, CSS file(s).</p>
<p><strong>17. How will you enable product’s custom attribute visibility in frontend?</strong></p>
<p>In the <em>Manage Attributes</em> section of the custom attribute, select <em>Visible on Product View Page on Front-end</em> and <em>Used in Product Listing</em> to <em>Yes</em>.</p>
<p><strong>19. Difference between EAV and flat model</strong></p>
<p>EAV is entity attribute value database model, where data is fully in normalized form. Each column data value is stored in their respective data type table. Example, for a product, product ID is stored in catalog_product_entity_int table, product name in catalog_product_entity_varchar, product price in catalog_product_entity_decimal, product created date in catalog_product_entity_datetime and product description in catalog_product_entity_text table. EAV is complex as it joins 5-6 tables even if you want to get just one product’s details. Columns are called attributes in EAV.</p>
<p>Flat model uses just one table, so it’s not normalized and uses more database space. It clears the EAV overhead, but not good for dynamic requirements where you may have to add more columns in database table in future. It’s good when comes to performance, as it will only require one query to load whole product instead of joining 5-6 tables to get just one product’s details. Columns are called fields in flat model.</p>
<p><strong>20. Is it mandatory to give Namespace while creating custom module in Magento?</strong></p>
<p>No</p>
<p><strong>21. How will you override Block/Model/controllers in Magento?</strong></p>
<p><a href="http://ka.lpe.sh/2011/06/08/overriderewrite-magento-core-blocks-and-controllers/" title="Magento override block controller model helper">http://ka.lpe.sh/2011/06/08/overriderewrite-magento-core-blocks-and-controllers/</a></p>
<p><strong>23. How will you add/remove content from core’s system.xml file?</strong></p>
<p>You can do that by overriding system.xml configuration. Examples:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;config&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;sections&gt;</span> <span style="color:#008000;font-weight:bold">&lt;catalog&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;groups&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;frontend&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;label&gt;</span>Overriding Catalog Frontend in system config<span style="color:#008000;font-weight:bold">&lt;/label&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/frontend&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/groups&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/catalog&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/sections&gt;&lt;/config&gt;</span></span></span></code></pre></div><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;config&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;sections&gt;</span> <span style="color:#008000;font-weight:bold">&lt;payment&gt;</span> <span style="color:#008000;font-weight:bold">&lt;groups&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;cashondelivery&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;fields&gt;</span>  
</span></span><span style="display:flex;"><span>   
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/fields&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/cashondelivery&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/groups&gt;</span> <span style="color:#008000;font-weight:bold">&lt;/payment&gt;</span> <span style="color:#008000;font-weight:bold">&lt;/sections&gt;&lt;/config&gt;</span></span></span></code></pre></div></p>
<p><strong>24. Can you have more than one Grid in a module?</strong></p>
<p>Yes</p>
<p><strong>25. How will you join flat table and EAV table in Magento?</strong></p>
<p><a href="http://ka.lpe.sh/2013/04/28/magento-join-eav-collection-with-flat-table/" title="Magento Join EAV collection with flat table">http://ka.lpe.sh/2013/04/28/magento-join-eav-collection-with-flat-table/</a></p>
<p><strong>26. How will you enable maintenance mode of your Magento website?</strong></p>
<p><a href="http://ka.lpe.sh/2011/12/31/magento-show-maintenance-mode-page-website-under-construction/" title="Magento show maintenance mode">http://ka.lpe.sh/2011/12/31/magento-show-maintenance-mode-page-website-under-construction/</a></p>
<p><strong>27. What are “magic methods” in Magento?</strong></p>
<p>Magento uses __call(), __get(), __set(), __uns(), __has(), __isset(), __toString(), __construct(), etc. magic methods. You can find more details inside class Varien_Object<br>
For more information about magic methods: <a href="http://php.net/manual/en/language.oop5.magic.php" title="PHP magic methods">http://php.net/manual/en/language.oop5.magic.php</a></p>
<p><strong>28. How many database tables will Magento create when you make a new EAV module?</strong></p>
<p>Magento creates 6 tables when you create new EAV module. Tables: module, module_datetime, module_decimal, module_int, module_text and module_varchar. one is the main entity table, and rest 5 tables which holds attribute’s data in different data types. So that integer values will go to module_int table, price values to module_decimal, etc.</p>
<p><strong>33. Where will you write your module’s business logic in Magento?</strong></p>
<p>inside Model</p>
<p><strong>34. Explain different types of sessions in Magento (e.g. customer/session, checkout/session, core/session) and the reason why you store data in different session types?</strong></p>
<p>Customer sessions stores data related to customer, checkout session stores data related to quote and order. They are actuall under one session in an array. So firstname in customer/session will be $_SESSION[‘customer’][‘firstname’] and cart items count in checkout/session will be $_SESSION[‘checkout’][‘items_count’]. The reason Magento uses session types separately is because once the order gets placed, the checkout session data information should get flushed which can be easily done by just unsetting $_SESSION[‘checkout’] session variable. So that the session is not cleared, just session data containing checkout information is cleared and rest all the session types are still intact.</p>
<p><strong>35. What are the commonly used block types? What is the special in core/text_list block type.</strong></p>
<p>Commonly used block types: core/template, page/html, page/html_head, page/html_header, page/template_links, core/text_list, page/html_wrapper, page/html_breadcrumbs, page/html_footer, core/messages, page/switch.<br>
Some blocks like content, left, right etc. are of type core/text_list. When these blocks are rendered, all their child blocks are rendered automatically without the need to call getChildHtml() method.</p>
<p><strong>36. What are the different design patterns used in Magento?</strong></p>
<p><a href="http://ka.lpe.sh/2013/02/25/magento-design-patterns/" title="Magento design patterns">http://ka.lpe.sh/2013/02/25/magento-design-patterns/</a></p>
<p><strong>37. What can you do to optimize Magento performance?</strong></p>
<p><a href="http://ka.lpe.sh/category/performance/" title="Magento Performance">http://ka.lpe.sh/category/performance/</a></p>
<p><strong>38. Where is the relation between configurable product and it’s simple product stored in database?</strong></p>
<p>In the 2 tables:<br>
catalog_product_relation<br>
catalog_product_superlink_table</p>
<p><strong>39. How will you log current collection’s SQL query?</strong></p>
<p>$collection-&gt;printLogQuery(true); OR $collection-&gt;getSelect()-&gt;__toString();</p>
<p><strong>40. How to get first item or last item from the collection?</strong></p>
<p>$collection-&gt;getFirstItem() and $collection-&gt;getLastItem();</p>
<p>For more Magento interview questions for freshers and experienced developers, check this:<br>
<a href="http://ka.lpe.sh/2012/01/29/magento-advanced-interview-questions/" title="Magento Interview Questions for Experienced and Freshers">Magento Interview Questions for Experienced and Freshers</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento add radio / checkbox button to admin grid</title>
      <link>http://localhost:1313/magento-add-radio-/-checkbox-button-to-admin-grid/</link>
      <pubDate>Thu, 12 Jul 2012 16:27:34 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-add-radio-/-checkbox-button-to-admin-grid/</guid>
      <description>&lt;p&gt;Add custom column in admin Grid which will show radio/checkbox button. I know this is weird, but some people need this as a requirement. Here I will show you how you can have radio button or checkbox button that you can have directly in your grids.&lt;/p&gt;&#xA;&lt;p&gt;For radio button,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addColumn&lt;/span&gt;(‘some_id’, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘header_css_class’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; ‘a&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;center’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘header’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;helper&lt;/span&gt;(‘adminhtml’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;__&lt;/span&gt;(‘Some Header’),  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘type’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; ‘radio’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘html_name’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; ‘items[]’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘align’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; ‘center’,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ‘value’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(‘1’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; ));&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Add custom column in admin Grid which will show radio/checkbox button. I know this is weird, but some people need this as a requirement. Here I will show you how you can have radio button or checkbox button that you can have directly in your grids.</p>
<p>For radio button,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">addColumn</span>(‘some_id’, <span style="color:#a2f;font-weight:bold">array</span>(  
</span></span><span style="display:flex;"><span> ‘header_css_class’ <span style="color:#666">=&gt;</span> ‘a<span style="color:#666">-</span>center’,  
</span></span><span style="display:flex;"><span> ‘header’ <span style="color:#666">=&gt;</span> Mage<span style="color:#666">::</span><span style="color:#b44">helper</span>(‘adminhtml’)<span style="color:#666">-&gt;</span><span style="color:#b44">__</span>(‘Some Header’),  
</span></span><span style="display:flex;"><span> ‘type’ <span style="color:#666">=&gt;</span> ‘radio’,  
</span></span><span style="display:flex;"><span> ‘html_name’ <span style="color:#666">=&gt;</span> ‘items[]’,  
</span></span><span style="display:flex;"><span> ‘align’ <span style="color:#666">=&gt;</span> ‘center’,  
</span></span><span style="display:flex;"><span> ‘value’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">array</span>(‘1’)  
</span></span><span style="display:flex;"><span> ));</span></span></code></pre></div></p>
<p>For checkbox button,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">addColumn</span>(‘some_id’, <span style="color:#a2f;font-weight:bold">array</span>(  
</span></span><span style="display:flex;"><span> ‘header_css_class’ <span style="color:#666">=&gt;</span> ‘a<span style="color:#666">-</span>center’,  
</span></span><span style="display:flex;"><span> ‘header’ <span style="color:#666">=&gt;</span> Mage<span style="color:#666">::</span><span style="color:#b44">helper</span>(‘adminhtml’)<span style="color:#666">-&gt;</span><span style="color:#b44">__</span>(‘Some Header’),  
</span></span><span style="display:flex;"><span> ‘type’ <span style="color:#666">=&gt;</span> ‘radio’,  
</span></span><span style="display:flex;"><span> ‘field_name’ <span style="color:#666">=&gt;</span> ‘items[]’,  
</span></span><span style="display:flex;"><span> ‘align’ <span style="color:#666">=&gt;</span> ‘center’,  
</span></span><span style="display:flex;"><span> ‘values’ <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">array</span>(‘1′,’2’)  
</span></span><span style="display:flex;"><span> ));</span></span></code></pre></div></p>
<p>Further, in Form.php you can add this below code to have by default behavior and onclick behaviour:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$fieldset</span><span style="color:#666">-&gt;</span><span style="color:#b44">addField</span>(‘some_id’, ‘checkbox’, <span style="color:#a2f;font-weight:bold">array</span>(  
</span></span><span style="display:flex;"><span> ‘checked’ <span style="color:#666">=&gt;</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSomeId</span>()<span style="color:#666">==</span><span style="color:#666">1</span> <span style="color:#666">?</span> ‘true’ <span style="color:#666">:</span> ‘false’,  
</span></span><span style="display:flex;"><span> ‘onclick’ <span style="color:#666">=&gt;</span> ‘this<span style="color:#666">.</span>value <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">this</span><span style="color:#666">.</span>checked <span style="color:#666">?</span> <span style="color:#666">1</span> <span style="color:#666">:</span> <span style="color:#666">0</span>;’  
</span></span><span style="display:flex;"><span>)); 
</span></span></code></pre></div></p>
<p>Hope this helps some frustrated mind!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Difference between order states and statuses</title>
      <link>http://localhost:1313/magento-difference-between-order-states-and-statuses/</link>
      <pubDate>Sat, 21 Apr 2012 16:47:38 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-difference-between-order-states-and-statuses/</guid>
      <description>&lt;p&gt;If you are building website in Magento, you may have noticed that there are two columns in &lt;em&gt;sales_flat_order&lt;/em&gt; table which are confusing. These are &lt;strong&gt;state&lt;/strong&gt; and &lt;strong&gt;status&lt;/strong&gt;. You might think what is the difference between these two, both having same meaning.&lt;/p&gt;&#xA;&lt;p&gt;Well, this is not the case. They both are different. State is used by magento to tell if the order is new, processing, complete, holded, closed, canceled, etc.; while Statuses are the one that YOU would be defining at the backend in System -&amp;gt; Order Statuses. Magento displays order STATUSES and not STATES in the backend order detail page to let you know which status is assigned as per your mapping. Remember, multiple statuses can be mapped with one state, while vice versa is not possible.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If you are building website in Magento, you may have noticed that there are two columns in <em>sales_flat_order</em> table which are confusing. These are <strong>state</strong> and <strong>status</strong>. You might think what is the difference between these two, both having same meaning.</p>
<p>Well, this is not the case. They both are different. State is used by magento to tell if the order is new, processing, complete, holded, closed, canceled, etc.; while Statuses are the one that YOU would be defining at the backend in System -&gt; Order Statuses. Magento displays order STATUSES and not STATES in the backend order detail page to let you know which status is assigned as per your mapping. Remember, multiple statuses can be mapped with one state, while vice versa is not possible.</p>
<p>Consider an example, your customer places an order as Cash on Delivery, you will need something like COD_Pending as the order status so that you know it is not yet paid. Magento will have state <em>new</em> for this, which makes you unpredictable of what kind of transaction is this, COD or Prepaid. The STATUS can be anything, as you define, for your understanding; while STATE is something which Magento needs to understand, internally.</p>
<p>In short, Magento uses order state internally for processing order, whereas order status are used by store owners to understand the exact order flow where one state can be assigned to multiple statuses.</p>
<p>To understand this in detail, have a look at <a href="http://www.magentocommerce.com/wiki/2_-_magento_concepts_and_architecture/order_management">this</a><br>
Hope it helps!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Difference between source_model, frontend_model, backend_model</title>
      <link>http://localhost:1313/magento-difference-between-source_model-frontend_model-backend_model/</link>
      <pubDate>Sun, 15 Apr 2012 07:15:06 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-difference-between-source_model-frontend_model-backend_model/</guid>
      <description>&lt;p&gt;When dealing with Magento Admin’s system configuration, you may have encountered with these models. If you don’t know, these models are used when you add custom fields through your system.xml file at Magento’s backend configuration (Admin -&amp;gt; System -&amp;gt; Configuration).&lt;/p&gt;&#xA;&lt;p&gt;Okay, so the difference between these 3 models are:&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;source_model&lt;/strong&gt;:&lt;br&gt;&#xA;It specifies a Model class, where you will be returned with options that can populate in the current field.&lt;/p&gt;&#xA;&lt;p&gt;Example,&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt;source_model&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;adminhtml&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;system_config_source_yesno&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;/&lt;/span&gt;source_model&lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;this will populate select dropdown with values Yes/No&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>When dealing with Magento Admin’s system configuration, you may have encountered with these models. If you don’t know, these models are used when you add custom fields through your system.xml file at Magento’s backend configuration (Admin -&gt; System -&gt; Configuration).</p>
<p>Okay, so the difference between these 3 models are:</p>
<p><strong>source_model</strong>:<br>
It specifies a Model class, where you will be returned with options that can populate in the current field.</p>
<p>Example,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;</span>source_model<span style="color:#666">&gt;</span>adminhtml<span style="color:#666">/</span>system_config_source_yesno<span style="color:#666">&lt;/</span>source_model<span style="color:#666">&gt;</span></span></span></code></pre></div><br>
this will populate select dropdown with values Yes/No</p>
<p><strong>frontend_model</strong>:<br>
It specifies a Block class to add custom render to use as a frontend field type instead of/along with default frontend_type field value (text, textarea, select, etc.).</p>
<p>Example,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;frontend_type&gt;</span>button<span style="color:#008000;font-weight:bold">&lt;/frontend_type&gt;</span>  
</span></span><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;frontend_model&gt;</span>MyCustomModule/button<span style="color:#008000;font-weight:bold">&lt;/frontend_model&gt;</span></span></span></code></pre></div><br>
this will keep frontend type as button, but the customized one taken from Block class Button.php of MyCustomModule module</p>
<p>Code at Button.php can be anything like this:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#a2f;font-weight:bold">class</span> <span style="color:#00f">MyNamespace_MyCustomModule_Block_Button</span> <span style="color:#a2f;font-weight:bold">extends</span> Mage_Adminhtml_Block_System_Config_Form_Field
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a2f;font-weight:bold">protected</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">_getElementHtml</span>(Varien_Data_Form_Element_Abstract <span style="color:#b8860b">$element</span>)
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">setElement</span>(<span style="color:#b8860b">$element</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$url</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getUrl</span>(‘catalog<span style="color:#666">/</span>product’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$html</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getLayout</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">createBlock</span>(‘adminhtml<span style="color:#666">/</span>widget_button’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setType</span>(‘button’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setClass</span>(‘scalable’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setLabel</span>(‘Run Now <span style="color:#666">!</span>’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setOnClick</span>(“setLocation(‘<span style="color:#b8860b">$url’</span>)”)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">toHtml</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$html</span>;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span><span style="color:#080">?&gt;</span><span style="">
</span></span></span></code></pre></div></p>
<p><strong>backend_model</strong>:<br>
Generally, when you save any form at System Configuration, the data is stored in the table core_config_data. But if your requirement is to do something prior/after the save is performed, you can do it by having _beforeSave() &amp; _afterSave() methods defined in this custom/defined class.</p>
<p>Example,<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;backend_model&gt;</span>adminhtml/system_config_backend_shipping_tablerate<span style="color:#008000;font-weight:bold">&lt;/backend_model&gt;</span></span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento add admin user in MySQL</title>
      <link>http://localhost:1313/magento-add-admin-user-in-mysql/</link>
      <pubDate>Sun, 12 Feb 2012 11:26:35 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-add-admin-user-in-mysql/</guid>
      <description>&lt;p&gt;In Magento, if you want to create a new user directly in Mysql, it’s not that easy to insert one record in admin_user table.&lt;br&gt;&#xA;You need to also update the privileges and inserting new admin’s roles.&lt;br&gt;&#xA;So here is a Mysql script which will create a new admin user with all privileges.&lt;/p&gt;&#xA;&lt;p&gt;Replace FIRSTNAME, LASTNAME, EMAIL, USERNAME, PASSWORD with your desired values.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-http&#34; data-lang=&#34;http&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;insert into admin_user  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;select  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(select max(user_id) + 1 from admin_user) user_id,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘FIRSTNAME’ first_name,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘LASTNAME’ last_name,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘TEST@EMAIL.COM’ email,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘USERNAME’ username,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;MD5(‘PASSWORD’) password,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;now() created,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;NULL modified,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;NULL logdate,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0 lognum,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0 reload_acl_flag,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;1 is_active,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(select max(extra) from admin_user where extra is not null) extra,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;NULL,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;NULL;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;insert into admin_role  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;select  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(select max(role_id) + 1 from admin_role) role_id,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(select role_id from admin_role where role_name = ‘Administrators’) parent_id,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;2 tree_level,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;0 sort_order,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘U’ role_type,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(select user_id from admin_user where username = ‘USERNAME’) user_id,  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;‘USERNAME’ role_name  &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In Magento, if you want to create a new user directly in Mysql, it’s not that easy to insert one record in admin_user table.<br>
You need to also update the privileges and inserting new admin’s roles.<br>
So here is a Mysql script which will create a new admin user with all privileges.</p>
<p>Replace FIRSTNAME, LASTNAME, EMAIL, USERNAME, PASSWORD with your desired values.<br>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">   
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">insert into admin_user  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">select  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">(select max(user_id) + 1 from admin_user) user_id,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">‘FIRSTNAME’ first_name,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">‘LASTNAME’ last_name,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">‘TEST@EMAIL.COM’ email,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">‘USERNAME’ username,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">MD5(‘PASSWORD’) password,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">now() created,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">NULL modified,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">NULL logdate,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">0 lognum,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">0 reload_acl_flag,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">1 is_active,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">(select max(extra) from admin_user where extra is not null) extra,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">NULL,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">NULL;
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">insert into admin_role  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">select  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">(select max(role_id) + 1 from admin_role) role_id,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">(select role_id from admin_role where role_name = ‘Administrators’) parent_id,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">2 tree_level,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">0 sort_order,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">‘U’ role_type,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">(select user_id from admin_user where username = ‘USERNAME’) user_id,  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">‘USERNAME’ role_name  </span></span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Show &amp;#8220;track your order&amp;#8221; in frontend &amp;#8211; My Orders</title>
      <link>http://localhost:1313/magento-show-%238220track-your-order%238221-in-frontend-%238211-my-orders/</link>
      <pubDate>Sun, 12 Feb 2012 06:50:06 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-show-%238220track-your-order%238221-in-frontend-%238211-my-orders/</guid>
      <description>&lt;p&gt;It is always required for the customer to track their order. The shipping carriers can be anything: Aramex, Bluedart, DHL, First Flight, Federal Express, etc.. Navigate to My Account and place a button in My Orders section there “Track Order”. Paste the code below to link it to tracking popup that you can also see in backend Shipments area.&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>It is always required for the customer to track their order. The shipping carriers can be anything: Aramex, Bluedart, DHL, First Flight, Federal Express, etc.. Navigate to My Account and place a button in My Orders section there “Track Order”. Paste the code below to link it to tracking popup that you can also see in backend Shipments area.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p><a href=""></a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get all/latest tracking number of any shipment</title>
      <link>http://localhost:1313/magento-get-all/latest-tracking-number-of-any-shipment/</link>
      <pubDate>Sun, 12 Feb 2012 06:36:42 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-all/latest-tracking-number-of-any-shipment/</guid>
      <description>&lt;p&gt;In magento, if you have more than one tracking number assigned for any particular shipment, we need to show the latest track number with details to the customer.&lt;/p&gt;&#xA;&lt;p&gt;Here I will show you how to get all tracking numbers as well as only the latest tracking number for any shipment.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Get all tracking numbers for shipment&lt;/strong&gt;&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$trackings&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getResourceModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order_shipment_track_collection’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToSelect&lt;/span&gt;(‘&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToFilter&lt;/span&gt;(‘parent_id’,&lt;span style=&#34;color:#b8860b&#34;&gt;$shipment&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getId&lt;/span&gt;());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$allTrackingIds&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$trackings&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAllIds&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Mage::log($allTrackingIds);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Get only the latest tracking number for shipment&lt;/strong&gt;&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$trackings&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getResourceModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order_shipment_track_collection’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToSelect&lt;/span&gt;(‘&lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToFilter&lt;/span&gt;(‘parent_id’,&lt;span style=&#34;color:#b8860b&#34;&gt;$shipment&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getId&lt;/span&gt;());  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$trackings&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSelect&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;order&lt;/span&gt;(‘entity_id desc’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;limit&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$trackData&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$trackings&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getData&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$trackID&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$trackData&lt;/span&gt;[&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;][‘entity_id’];  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Mage::log($trackID);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In magento, if you have more than one tracking number assigned for any particular shipment, we need to show the latest track number with details to the customer.</p>
<p>Here I will show you how to get all tracking numbers as well as only the latest tracking number for any shipment.</p>
<p><strong>Get all tracking numbers for shipment</strong><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$trackings</span><span style="color:#666">=</span>Mage<span style="color:#666">::</span><span style="color:#b44">getResourceModel</span>(‘sales<span style="color:#666">/</span>order_shipment_track_collection’)<span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘<span style="color:#666">*</span>’)<span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘parent_id’,<span style="color:#b8860b">$shipment</span><span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>());  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$allTrackingIds</span> <span style="color:#666">=</span> <span style="color:#b8860b">$trackings</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAllIds</span>();  
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Mage::log($allTrackingIds);  
</span></span></span></code></pre></div></p>
<p><strong>Get only the latest tracking number for shipment</strong><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$trackings</span><span style="color:#666">=</span>Mage<span style="color:#666">::</span><span style="color:#b44">getResourceModel</span>(‘sales<span style="color:#666">/</span>order_shipment_track_collection’)<span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToSelect</span>(‘<span style="color:#666">*</span>’)<span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘parent_id’,<span style="color:#b8860b">$shipment</span><span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>());  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$trackings</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSelect</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">order</span>(‘entity_id desc’)<span style="color:#666">-&gt;</span><span style="color:#b44">limit</span>(<span style="color:#666">1</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$trackData</span> <span style="color:#666">=</span> <span style="color:#b8860b">$trackings</span><span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$trackID</span> <span style="color:#666">=</span> <span style="color:#b8860b">$trackData</span>[<span style="color:#666">0</span>][‘entity_id’];  
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Mage::log($trackID);  
</span></span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento/PHP: Convert your XML Object to Array</title>
      <link>http://localhost:1313/magento/php-convert-your-xml-object-to-array/</link>
      <pubDate>Sun, 12 Feb 2012 06:24:25 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento/php-convert-your-xml-object-to-array/</guid>
      <description>&lt;p&gt;While developing shipment tracking using SimpleXML in magento, I came accross the requirement where I have to get all the XML tags as keys and all the data inside XML tags as values in array. Means I wanted to convert XML to an Array where I can display all the information in some decorative format.&lt;/p&gt;&#xA;&lt;p&gt;So here is how I converted XML to Array without any kind of hardcoding.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;PHP class method to convert xml to array&lt;/strong&gt;&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;convertXmlObjToArr&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$obj&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp;&lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$children&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$obj&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;children&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$executed&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;false&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$children&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$node&lt;/span&gt;){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;]&lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;null&lt;/span&gt;){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;][&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#666&#34;&gt;!==&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;null&lt;/span&gt;){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$i&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; count(&lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;]);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;convertXmlObjToArr&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$node&lt;/span&gt;, &lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;][&lt;span style=&#34;color:#b8860b&#34;&gt;$i&lt;/span&gt;]);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt;{  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$tmp&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;];  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;][&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$tmp&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$i&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; count(&lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;]);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;convertXmlObjToArr&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$node&lt;/span&gt;, &lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;][&lt;span style=&#34;color:#b8860b&#34;&gt;$i&lt;/span&gt;]);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt;{  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;convertXmlObjToArr&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$node&lt;/span&gt;, &lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$elementName&lt;/span&gt;]);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$executed&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;true&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$executed&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp;&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp;&lt;span style=&#34;color:#b8860b&#34;&gt;$children&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getName&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;==&lt;/span&gt;””){  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$arr&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; (String)&lt;span style=&#34;color:#b8860b&#34;&gt;$obj&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;Hope this helps!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>While developing shipment tracking using SimpleXML in magento, I came accross the requirement where I have to get all the XML tags as keys and all the data inside XML tags as values in array. Means I wanted to convert XML to an Array where I can display all the information in some decorative format.</p>
<p>So here is how I converted XML to Array without any kind of hardcoding.</p>
<p><strong>PHP class method to convert xml to array</strong><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">convertXmlObjToArr</span>(<span style="color:#b8860b">$obj</span>, <span style="color:#666">&amp;</span>amp;<span style="color:#b8860b">$arr</span>){  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$children</span> <span style="color:#666">=</span> <span style="color:#b8860b">$obj</span><span style="color:#666">-&gt;</span><span style="color:#b44">children</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$executed</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">false</span>;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$children</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$elementName</span> <span style="color:#666">=&gt;</span> <span style="color:#b8860b">$node</span>){  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>]<span style="color:#666">!=</span><span style="color:#a2f;font-weight:bold">null</span>){  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>][<span style="color:#666">0</span>]<span style="color:#666">!==</span><span style="color:#a2f;font-weight:bold">null</span>){  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$i</span> <span style="color:#666">=</span> count(<span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>]);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">convertXmlObjToArr</span>(<span style="color:#b8860b">$node</span>, <span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>][<span style="color:#b8860b">$i</span>]);  
</span></span><span style="display:flex;"><span> }<span style="color:#a2f;font-weight:bold">else</span>{  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$tmp</span> <span style="color:#666">=</span> <span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>];  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>] <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>][<span style="color:#666">0</span>] <span style="color:#666">=</span> <span style="color:#b8860b">$tmp</span>;  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$i</span> <span style="color:#666">=</span> count(<span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>]);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">convertXmlObjToArr</span>(<span style="color:#b8860b">$node</span>, <span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>][<span style="color:#b8860b">$i</span>]);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }<span style="color:#a2f;font-weight:bold">else</span>{  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>] <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">array</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">convertXmlObjToArr</span>(<span style="color:#b8860b">$node</span>, <span style="color:#b8860b">$arr</span>[<span style="color:#b8860b">$elementName</span>]);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$executed</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">true</span>;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#666">!</span><span style="color:#b8860b">$executed</span><span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp;<span style="color:#b8860b">$children</span><span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>()<span style="color:#666">==</span>””){  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$arr</span> <span style="color:#666">=</span> (String)<span style="color:#b8860b">$obj</span>;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span>;  
</span></span><span style="display:flex;"><span> }</span></span></code></pre></div><br>
Hope this helps!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento Interview Questions</title>
      <link>http://localhost:1313/magento-interview-questions/</link>
      <pubDate>Sun, 29 Jan 2012 06:29:58 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-interview-questions/</guid>
      <description>&lt;p&gt;Here is a list of Magento advanced interview questions that I can think off now.&lt;br&gt;&#xA;EDIT: There are also Expert interview questions that I added lately.&lt;/p&gt;&#xA;&lt;p&gt;1. Explain Magento’s MVC architecture&lt;br&gt;&#xA;2. How Magento’s ORM work?&lt;br&gt;&#xA;3. What is EAV in Magento?&lt;br&gt;&#xA;4. Difference between Mage::getSingleton() and Mage::getModel()&lt;br&gt;&#xA;5. What are the steps to change the theme of Magento&lt;br&gt;&#xA;6. If you want to add/modify core functionality, how will you do it?&lt;br&gt;&#xA;7. How will you create a new module in Magento?&lt;br&gt;&#xA;8. How will you call a CMS page in your module’s PHTML file?&lt;br&gt;&#xA;9. What is codePool in Magento?&lt;br&gt;&#xA;10. Explain handles in Magento’s layout&lt;br&gt;&#xA;11. What is &lt;!-- raw HTML omitted --&gt; in Magento’s config XML?&lt;br&gt;&#xA;12. Explain Magento’s URL structure&lt;br&gt;&#xA;13. How will you optimize Magento featured website?&lt;br&gt;&#xA;14. Explain in detail cache management in Magento&lt;br&gt;&#xA;15. When will you need to clear cache to see the changes in Magento?&lt;br&gt;&#xA;16. Explain the flow of placing an order technically&lt;br&gt;&#xA;17. How will you enable product’s custom attribute visibility in frontend?&lt;br&gt;&#xA;18. How will you upgrade your custom module?&lt;br&gt;&#xA;19. Difference between EAV and flat table&lt;br&gt;&#xA;20. Is it mandatory to give Namespace while creating custom module in Magento?&lt;br&gt;&#xA;21. How will you override Block/Model/controllers in Magento?&lt;br&gt;&#xA;22. What is difference between override and rewrite?&lt;br&gt;&#xA;23. How will you add/remove content from core’s system.xml file?&lt;br&gt;&#xA;24. Can you have more than one Grid in a module?&lt;br&gt;&#xA;25. How will you join flat table and EAV table in Magento?&lt;br&gt;&#xA;26. How will you enable maintenance mode of your Magento website?&lt;br&gt;&#xA;27. What are “magic methods” in Magento?&lt;br&gt;&#xA;28. How many database tables will Magento create when you make a new EAV module?&lt;br&gt;&#xA;29. Explain Magento’s Collections&lt;br&gt;&#xA;30. Explain events and observers in Magento&lt;br&gt;&#xA;31. Difference between block’s “name” and “as” attributes in layout XML&lt;br&gt;&#xA;32. When to use session and when to use registry to store variables?&lt;br&gt;&#xA;33. Where will you write your module’s business logic in Magento?&lt;br&gt;&#xA;34. Explain different types of sessions in Magento (e.g. customer/session, checkout/session, core/session) and the reason why you store data in different session types.&lt;br&gt;&#xA;35. What are the commonly used block types? What is the special in &lt;em&gt;core/text_list&lt;/em&gt; block type.&lt;br&gt;&#xA;36. What are the different design patterns used in Magento?&lt;br&gt;&#xA;37. What can you do to optimize Magento performance?&lt;br&gt;&#xA;38. Where is the relation between configurable product and it’s simple product stored in database?&lt;br&gt;&#xA;39. How will you log current collection’s SQL query?&lt;br&gt;&#xA;40. How to get first item or last item from the collection?&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Here is a list of Magento advanced interview questions that I can think off now.<br>
EDIT: There are also Expert interview questions that I added lately.</p>
<p>1. Explain Magento’s MVC architecture<br>
2. How Magento’s ORM work?<br>
3. What is EAV in Magento?<br>
4. Difference between Mage::getSingleton() and Mage::getModel()<br>
5. What are the steps to change the theme of Magento<br>
6. If you want to add/modify core functionality, how will you do it?<br>
7. How will you create a new module in Magento?<br>
8. How will you call a CMS page in your module’s PHTML file?<br>
9. What is codePool in Magento?<br>
10. Explain handles in Magento’s layout<br>
11. What is <!-- raw HTML omitted --> in Magento’s config XML?<br>
12. Explain Magento’s URL structure<br>
13. How will you optimize Magento featured website?<br>
14. Explain in detail cache management in Magento<br>
15. When will you need to clear cache to see the changes in Magento?<br>
16. Explain the flow of placing an order technically<br>
17. How will you enable product’s custom attribute visibility in frontend?<br>
18. How will you upgrade your custom module?<br>
19. Difference between EAV and flat table<br>
20. Is it mandatory to give Namespace while creating custom module in Magento?<br>
21. How will you override Block/Model/controllers in Magento?<br>
22. What is difference between override and rewrite?<br>
23. How will you add/remove content from core’s system.xml file?<br>
24. Can you have more than one Grid in a module?<br>
25. How will you join flat table and EAV table in Magento?<br>
26. How will you enable maintenance mode of your Magento website?<br>
27. What are “magic methods” in Magento?<br>
28. How many database tables will Magento create when you make a new EAV module?<br>
29. Explain Magento’s Collections<br>
30. Explain events and observers in Magento<br>
31. Difference between block’s “name” and “as” attributes in layout XML<br>
32. When to use session and when to use registry to store variables?<br>
33. Where will you write your module’s business logic in Magento?<br>
34. Explain different types of sessions in Magento (e.g. customer/session, checkout/session, core/session) and the reason why you store data in different session types.<br>
35. What are the commonly used block types? What is the special in <em>core/text_list</em> block type.<br>
36. What are the different design patterns used in Magento?<br>
37. What can you do to optimize Magento performance?<br>
38. Where is the relation between configurable product and it’s simple product stored in database?<br>
39. How will you log current collection’s SQL query?<br>
40. How to get first item or last item from the collection?<!-- raw HTML omitted --></p>
<p>If you are looking for answers to these questions, check it out here:<br>
<a href="http://ka.lpe.sh/2012/07/19/magento-interview-questions-and-answers/" title="Magento Interview questions and answers for experienced and freshers">Magento Interview questions and answers for experienced and freshers</a></p>
<p>Best luck!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Linking multiple shipments with their invoices</title>
      <link>http://localhost:1313/magento-linking-multiple-shipments-with-their-invoices/</link>
      <pubDate>Tue, 17 Jan 2012 17:17:39 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-linking-multiple-shipments-with-their-invoices/</guid>
      <description>&lt;p&gt;In Magento, it’s a feature to create multiple invoices and shipments. But you can’t find the link between invoice with their respective shipment if you have more than one invoice and shipment. It’s because if you have forced invoice and shipment enabled (Invoice and Ship button combined in Manage Orders view page), it saves both invoice and shipment object together and hence can’t give the invoice id to shipment and hence fails in building the link between them.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In Magento, it’s a feature to create multiple invoices and shipments. But you can’t find the link between invoice with their respective shipment if you have more than one invoice and shipment. It’s because if you have forced invoice and shipment enabled (Invoice and Ship button combined in Manage Orders view page), it saves both invoice and shipment object together and hence can’t give the invoice id to shipment and hence fails in building the link between them.</p>
<p>So what we need to do here is:<br>
1. Add a column to sales_flat_shipment which will store invoice increment id (say invoice_id)<br>
2. Before invoice and shipment are saved, get the invoice’s latest increment id and increment it by 1 (to get next invoice increment id)<br>
3. Give that invoice increment id to shipment object, so it will get saved along with other shipment columns</p>
<p>Here we go technically,</p>
<p>Firstly, add a column to sales_flat_shipment table.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#b8860b">$installer</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$installer</span><span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">startSetup</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$installer</span><span style="color:#666">-&gt;</span><span style="color:#b44">run</span>(”  
</span></span><span style="display:flex;"><span>ALTER TABLE sales_flat_shipment ADD COLUMN invoice_id VARCHAR(<span style="color:#666">50</span>) AFTER increment_id  
</span></span><span style="display:flex;"><span>“);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$installer</span><span style="color:#666">-&gt;</span><span style="color:#b44">endSetup</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#080">?&gt;</span><span style="">
</span></span></span></code></pre></div></p>
<p>Then, override InvoiceController.php of sales/order: Mage/Adminhtml/controllers/Sales/Order/InvoiceController.php<br>
Paste this code to newly overridden file:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#a2f;font-weight:bold">require_once</span>(<span style="color:#b44">&#39;Mage/Adminhtml/controllers/Sales/Order/InvoiceController.php&#39;</span>);
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">class</span> <span style="color:#00f">Namespace_Module_Sales_Order_InvoiceController</span> <span style="color:#a2f;font-weight:bold">extends</span> Mage_Adminhtml_Sales_Order_InvoiceController
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#b44;font-style:italic">/**
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic">     * @author - Kalpesh Mehta
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic">     * @desc - Rewritten this method for linking shipment and invoice
</span></span></span><span style="display:flex;"><span><span style="color:#b44;font-style:italic">     */</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">saveAction</span>()
</span></span><span style="display:flex;"><span>    {
</span></span><span style="display:flex;"><span>        <span style="color:#b8860b">$data</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getPost</span>(‘invoice’);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$orderId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getParam</span>(‘order_id’);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$data</span>[‘comment_text’])) {  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘adminhtml<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">setCommentText</span>(<span style="color:#b8860b">$data</span>[‘comment_text’]);  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">try</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invoice</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_initInvoice</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$invoice</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$data</span>[‘capture_case’])) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">setRequestedCaptureCase</span>(<span style="color:#b8860b">$data</span>[‘capture_case’]);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$data</span>[‘comment_text’])) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">addComment</span>(<span style="color:#b8860b">$data</span>[‘comment_text’], isset(<span style="color:#b8860b">$data</span>[‘comment_customer_notify’]), isset(<span style="color:#b8860b">$data</span>[‘is_visible_on_front’]));  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">register</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$data</span>[‘send_email’])) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">setEmailSent</span>(<span style="color:#a2f;font-weight:bold">true</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">getOrder</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">setCustomerNoteNotify</span>(<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$data</span>[‘send_email’]));  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">getOrder</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">setIsInProcess</span>(<span style="color:#a2f;font-weight:bold">true</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$transactionSave</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘core<span style="color:#666">/</span>resource_transaction’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addObject</span>(<span style="color:#b8860b">$invoice</span>)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">addObject</span>(<span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">getOrder</span>());  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$shipment</span> <span style="color:#666">=</span> <span style="color:#a2f;font-weight:bold">false</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$data</span>[‘do_shipment’]) <span style="color:#666">||</span> (int) <span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">getOrder</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getForcedDoShipmentWithInvoice</span>()) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$shipment</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_prepareShipment</span>(<span style="color:#b8860b">$invoice</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$shipment</span>) {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//Get last invoice increment ID  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$invoiceLast</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>order_invoice’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCollection</span>()  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setOrder</span>(‘increment_id’,’DESC’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setPageSize</span>(<span style="color:#666">1</span>)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setCurPage</span>(<span style="color:#666">1</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invLastIncrId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$invoiceLast</span><span style="color:#666">-&gt;</span><span style="color:#b44">getFirstItem</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getIncrementId</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invNewIncrId</span> <span style="color:#666">=</span> (int)<span style="color:#b8860b">$invLastIncrId</span> <span style="color:#666">+</span> <span style="color:#666">1</span>; <span style="color:#080;font-style:italic">//incrementing by 1  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$shipment</span><span style="color:#666">-&gt;</span><span style="color:#b44">setInvoiceId</span>(<span style="color:#b8860b">$invNewIncrId</span>); <span style="color:#080;font-style:italic">//setting data for our sales_flat_shipment table column invoice_id
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$shipment</span><span style="color:#666">-&gt;</span><span style="color:#b44">setEmailSent</span>(<span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">getEmailSent</span>());  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$transactionSave</span><span style="color:#666">-&gt;</span><span style="color:#b44">addObject</span>(<span style="color:#b8860b">$shipment</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$transactionSave</span><span style="color:#666">-&gt;</span><span style="color:#b44">save</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$data</span>[‘do_shipment’]) <span style="color:#666">||</span> (int) <span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">getOrder</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getForcedDoShipmentWithInvoice</span>()) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_getSession</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">addSuccess</span>(<span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">__</span>(‘The invoice <span style="color:#a2f;font-weight:bold">and</span> shipment have been created<span style="color:#666">.</span>’));  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_getSession</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">addSuccess</span>(<span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">__</span>(‘The invoice has been created<span style="color:#666">.</span>’));  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">// send invoice/shipment emails  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$comment</span> <span style="color:#666">=</span> ”;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (isset(<span style="color:#b8860b">$data</span>[‘comment_customer_notify’])) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$comment</span> <span style="color:#666">=</span> <span style="color:#b8860b">$data</span>[‘comment_text’];  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">try</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">sendEmail</span>(<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$data</span>[‘send_email’]), <span style="color:#b8860b">$comment</span>);  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">catch</span> (Exception <span style="color:#b8860b">$e</span>) {  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">logException</span>(<span style="color:#b8860b">$e</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_getSession</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">addError</span>(<span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">__</span>(‘Unable to send the invoice email<span style="color:#666">.</span>’));  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$shipment</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">try</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$shipment</span><span style="color:#666">-&gt;</span><span style="color:#b44">sendEmail</span>(<span style="color:#666">!</span><span style="color:#a2f;font-weight:bold">empty</span>(<span style="color:#b8860b">$data</span>[‘send_email’]));  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">catch</span> (Exception <span style="color:#b8860b">$e</span>) {  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">logException</span>(<span style="color:#b8860b">$e</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_getSession</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">addError</span>(<span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">__</span>(‘Unable to send the shipment email<span style="color:#666">.</span>’));  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘adminhtml<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCommentText</span>(<span style="color:#a2f;font-weight:bold">true</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_redirect</span>(‘<span style="color:#666">*/</span>sales_order<span style="color:#666">/</span>view’, <span style="color:#a2f;font-weight:bold">array</span>(‘order_id’ <span style="color:#666">=&gt;</span> <span style="color:#b8860b">$orderId</span>));  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_redirect</span>(‘<span style="color:#666">*/*/</span><span style="color:#a2f;font-weight:bold">new</span>’, <span style="color:#a2f;font-weight:bold">array</span>(‘order_id’ <span style="color:#666">=&gt;</span> <span style="color:#b8860b">$orderId</span>));  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span>;  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">catch</span> (Mage_Core_Exception <span style="color:#b8860b">$e</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_getSession</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">addError</span>(<span style="color:#b8860b">$e</span><span style="color:#666">-&gt;</span><span style="color:#b44">getMessage</span>());  
</span></span><span style="display:flex;"><span> } <span style="color:#a2f;font-weight:bold">catch</span> (Exception <span style="color:#b8860b">$e</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_getSession</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">addError</span>(<span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">__</span>(‘Unable to save the invoice<span style="color:#666">.</span>’));  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">logException</span>(<span style="color:#b8860b">$e</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_redirect</span>(‘<span style="color:#666">*/*/</span><span style="color:#a2f;font-weight:bold">new</span>’, <span style="color:#a2f;font-weight:bold">array</span>(‘order_id’ <span style="color:#666">=&gt;</span> <span style="color:#b8860b">$orderId</span>));  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Adding column to sales_flat_order_item, sales_flat_invoice_item and sales_flat_shipment_item</title>
      <link>http://localhost:1313/magento-adding-column-to-sales_flat_order_item-sales_flat_invoice_item-and-sales_flat_shipment_item/</link>
      <pubDate>Tue, 17 Jan 2012 17:01:13 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-adding-column-to-sales_flat_order_item-sales_flat_invoice_item-and-sales_flat_shipment_item/</guid>
      <description>&lt;p&gt;Suppose you want to add column to some table before it gets save in Magento. Example, Magento doesn’t save regular price of product when an order is placed, it only saves the selling price. So if your product have some special price in it, then Magento only saves it’s special price when an order is placed, so there is no track of regular price of that product in order item table. Same it goes to invoice item and shipment item. When creating invoice and shipment, Magento doesn’t have any track on the regular price of invoiced item’s and shipment item’s regular price.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Suppose you want to add column to some table before it gets save in Magento. Example, Magento doesn’t save regular price of product when an order is placed, it only saves the selling price. So if your product have some special price in it, then Magento only saves it’s special price when an order is placed, so there is no track of regular price of that product in order item table. Same it goes to invoice item and shipment item. When creating invoice and shipment, Magento doesn’t have any track on the regular price of invoiced item’s and shipment item’s regular price.</p>
<p>So here I show you how you will add a column “product_mrp” in each of 3 tables and update the information without firing any query!</p>
<p>First of all, make an installer script in your module that will alter these three tables and add column “product_mrp” or any of your choice.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>php <span style="color:#b8860b">$installer</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$installer</span><span style="color:#666">-&gt;</span>
</span></span><span style="display:flex;"><span><span style="color:#b44">startSetup</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$installer</span><span style="color:#666">-&gt;</span><span style="color:#b44">run</span>(”  
</span></span><span style="display:flex;"><span> ALTER TABLE sales_flat_order_item ADD COLUMN product_mrp DECIMAL(<span style="color:#666">12</span>,<span style="color:#666">4</span>) <span style="color:#a2f;font-weight:bold">NULL</span>;  
</span></span><span style="display:flex;"><span> ALTER TABLE sales_flat_invoice_item ADD COLUMN product_mrp DECIMAL(<span style="color:#666">12</span>,<span style="color:#666">4</span>) <span style="color:#a2f;font-weight:bold">NULL</span>;  
</span></span><span style="display:flex;"><span> ALTER TABLE sales_flat_shipment_item ADD COLUMN product_mrp DECIMAL(<span style="color:#666">12</span>,<span style="color:#666">4</span>) <span style="color:#a2f;font-weight:bold">NULL</span>;  
</span></span><span style="display:flex;"><span>“);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$installer</span><span style="color:#666">-&gt;</span><span style="color:#b44">endSetup</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#080">?&gt;</span><span style="">
</span></span></span></code></pre></div>
<p>After this is executed, you will find your columns added at the end of your tables.<br>
Now we will catch the event before order is placed, before invoice is created and before shipment is saved.</p>
<p><strong>config.xml</strong><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;sales_order_place_before&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;adding_product_mrp_order&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;type&gt;</span>singleton<span style="color:#008000;font-weight:bold">&lt;/type&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;class&gt;</span>Namespace_Module_Model_Observer<span style="color:#008000;font-weight:bold">&lt;/class&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;method&gt;</span>saveProductMrpInOrder<span style="color:#008000;font-weight:bold">&lt;/method&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/adding_product_mrp_order&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/sales_order_place_before&gt;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;sales_order_invoice_save_before&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;adding_product_mrp_invoice&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;type&gt;</span>singleton<span style="color:#008000;font-weight:bold">&lt;/type&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;class&gt;</span>Namespace_Module_Model_Observer<span style="color:#008000;font-weight:bold">&lt;/class&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;method&gt;</span>saveProductMrpInInvoice<span style="color:#008000;font-weight:bold">&lt;/method&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/adding_product_mrp_invoice&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/sales_order_invoice_save_before&gt;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;sales_order_shipment_save_before&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;adding_product_mrp_shipment&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;type&gt;</span>singleton<span style="color:#008000;font-weight:bold">&lt;/type&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;class&gt;</span>Namespace_Module_Model_Observer<span style="color:#008000;font-weight:bold">&lt;/class&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;method&gt;</span>saveProductMrpInShipment<span style="color:#008000;font-weight:bold">&lt;/method&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/adding_product_mrp_shipment&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/sales_order_shipment_save_before&gt;</span></span></span></code></pre></div></p>
<p>Now comes the Observer part that will add our column data before data is actually saved in table.</p>
<p><strong>Observer.php</strong><br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">saveProductMrpInOrder</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$order</span> <span style="color:#666">=</span> <span style="color:#b8860b">$observer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getEvent</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getOrder</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$order</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAllItems</span>() <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$item</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$price</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$item</span><span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>())<span style="color:#666">-&gt;</span><span style="color:#b44">getPrice</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$item</span><span style="color:#666">-&gt;</span><span style="color:#b44">setProductMrp</span>(<span style="color:#b8860b">$price</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$this</span>;  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">saveProductMrpInInvoice</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$invoice</span> <span style="color:#666">=</span> <span style="color:#b8860b">$observer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getEvent</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getInvoice</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$invoice</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAllItems</span>() <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$item</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$price</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$item</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProductId</span>())<span style="color:#666">-&gt;</span><span style="color:#b44">getPrice</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$item</span><span style="color:#666">-&gt;</span><span style="color:#b44">setProductMrp</span>(<span style="color:#b8860b">$price</span>);  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span> <span style="color:#b8860b">$this</span>;  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">saveProductMrpInShipment</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>)  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$shipment</span> <span style="color:#666">=</span> <span style="color:#b8860b">$observer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getEvent</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getShipment</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">foreach</span>(<span style="color:#b8860b">$shipment</span><span style="color:#666">-&gt;</span><span style="color:#b44">getAllItems</span>() <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$item</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$product</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘catalog<span style="color:#666">/</span>product’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$item</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProductId</span>());  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$price</span> <span style="color:#666">=</span> <span style="color:#b8860b">$product</span><span style="color:#666">-&gt;</span><span style="color:#b44">getPrice</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$item</span><span style="color:#666">-&gt;</span><span style="color:#b44">product_mrp</span> <span style="color:#666">=</span> <span style="color:#b8860b">$price</span>;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }</span></span></code></pre></div></p>
<p>Now clear the cache, and place order and create it’s invoice and shipment. You will find the regular price of each of your products in all these three useful tables and hence you can track the original price information even if your product’s price has been changed afterwards.</p>
<p>Happy coding!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Save shipment information of order programatically</title>
      <link>http://localhost:1313/magento-save-shipment-information-of-order-programatically/</link>
      <pubDate>Sun, 08 Jan 2012 15:23:03 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-save-shipment-information-of-order-programatically/</guid>
      <description>&lt;p&gt;After creating invoice and shipment, it is necessary to add tracking information to shipment. Here is how to write a observer which will invoke as shipment save method is called and save tracking information programatically.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;config.xml&lt;/strong&gt; – under global -&amp;gt; events node&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;sales_order_shipment_save_before&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;observers&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;namespace_modulename_ship_before&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;type&amp;gt;&lt;/span&gt;singleton&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/type&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;class&amp;gt;&lt;/span&gt;Namespace_Modulename_Model_Observer&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/class&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;method&amp;gt;&lt;/span&gt;salesOrderShipmentSaveBefore&lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/method&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/namespace_modulename_ship_before&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/observers&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#008000;font-weight:bold&#34;&gt;&amp;lt;/sales_order_shipment_save_before&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Observer.php&lt;/strong&gt; -&amp;gt; under Model directory of module&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;salesOrderShipmentSaveBefore&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$observer&lt;/span&gt;)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$shipment&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$observer&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getEvent&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getShipment&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$track&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order_shipment_track’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setNumber&lt;/span&gt;(‘824343454454’) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//tracking number / awb number  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setCarrierCode&lt;/span&gt;(‘aramex’) &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//carrier code  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setTitle&lt;/span&gt;(‘Aramex’); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//carrier title  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$shipment&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addTrack&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$track&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>After creating invoice and shipment, it is necessary to add tracking information to shipment. Here is how to write a observer which will invoke as shipment save method is called and save tracking information programatically.</p>
<p><strong>config.xml</strong> – under global -&gt; events node<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-xml" data-lang="xml"><span style="display:flex;"><span><span style="color:#008000;font-weight:bold">&lt;sales_order_shipment_save_before&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;namespace_modulename_ship_before&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;type&gt;</span>singleton<span style="color:#008000;font-weight:bold">&lt;/type&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;class&gt;</span>Namespace_Modulename_Model_Observer<span style="color:#008000;font-weight:bold">&lt;/class&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;method&gt;</span>salesOrderShipmentSaveBefore<span style="color:#008000;font-weight:bold">&lt;/method&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/namespace_modulename_ship_before&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/observers&gt;</span>  
</span></span><span style="display:flex;"><span> <span style="color:#008000;font-weight:bold">&lt;/sales_order_shipment_save_before&gt;</span></span></span></code></pre></div></p>
<p><strong>Observer.php</strong> -&gt; under Model directory of module<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">salesOrderShipmentSaveBefore</span>(<span style="color:#b8860b">$observer</span>)  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$shipment</span> <span style="color:#666">=</span> <span style="color:#b8860b">$observer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getEvent</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getShipment</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$track</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>order_shipment_track’)  
</span></span><span style="display:flex;"><span> <span style="color:#666">-&gt;</span><span style="color:#b44">setNumber</span>(‘824343454454’) <span style="color:#080;font-style:italic">//tracking number / awb number  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#666">-&gt;</span><span style="color:#b44">setCarrierCode</span>(‘aramex’) <span style="color:#080;font-style:italic">//carrier code  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#666">-&gt;</span><span style="color:#b44">setTitle</span>(‘Aramex’); <span style="color:#080;font-style:italic">//carrier title  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$shipment</span><span style="color:#666">-&gt;</span><span style="color:#b44">addTrack</span>(<span style="color:#b8860b">$track</span>);  
</span></span><span style="display:flex;"><span> }</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Mysql records with NULL values are not fetched in query</title>
      <link>http://localhost:1313/magento-mysql-records-with-null-values-are-not-fetched-in-query/</link>
      <pubDate>Sun, 08 Jan 2012 09:23:13 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-mysql-records-with-null-values-are-not-fetched-in-query/</guid>
      <description>&lt;p&gt;After banging my head on my desk trying to get the records with NULL values with Magento ORM, it was found that writing&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$collection&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToFilter&lt;/span&gt;(‘somefield’, ‘null’)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$collection&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToFilter&lt;/span&gt;(‘somefield’, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(‘is’ &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; ‘null’))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;will check for any blank values like this: &lt;em&gt;WHERE somefield = ”&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;So if you want to fetch records that have NULL values in Magento style, you need to write as following:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$collection&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addAttributeToFilter&lt;/span&gt;(‘somefield’, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(‘null’&lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt;’null’)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;will check like &lt;em&gt;WHERE somefield = null&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Hope this saves someone’s time!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>After banging my head on my desk trying to get the records with NULL values with Magento ORM, it was found that writing<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘somefield’, ‘null’)  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘somefield’, <span style="color:#a2f;font-weight:bold">array</span>(‘is’ <span style="color:#666">=&gt;</span> ‘null’))</span></span></code></pre></div><br>
will check for any blank values like this: <em>WHERE somefield = ”</em></p>
<p>So if you want to fetch records that have NULL values in Magento style, you need to write as following:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$collection</span><span style="color:#666">-&gt;</span><span style="color:#b44">addAttributeToFilter</span>(‘somefield’, <span style="color:#a2f;font-weight:bold">array</span>(‘null’<span style="color:#666">=&gt;</span>’null’)</span></span></code></pre></div><br>
will check like <em>WHERE somefield = null</em></p>
<p>Hope this saves someone’s time!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Show maintenance mode page (website under construction)</title>
      <link>http://localhost:1313/magento-show-maintenance-mode-page-website-under-construction/</link>
      <pubDate>Sat, 31 Dec 2011 17:49:50 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-show-maintenance-mode-page-website-under-construction/</guid>
      <description>&lt;p&gt;If you want your Magento website to show in maintenance mode, you will have to do two things.&lt;/p&gt;&#xA;&lt;p&gt;1. Create a file name &lt;strong&gt;maintenance.flag&lt;/strong&gt; in your magento root directory. Contents under this file doesn’t matter, you can keep it empty.&lt;br&gt;&#xA;2. Change the maintenance file (located in &lt;strong&gt;magento root -&amp;gt; errors -&amp;gt; default&lt;/strong&gt; directory) to show proper message when user visits your website.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If you want your Magento website to show in maintenance mode, you will have to do two things.</p>
<p>1. Create a file name <strong>maintenance.flag</strong> in your magento root directory. Contents under this file doesn’t matter, you can keep it empty.<br>
2. Change the maintenance file (located in <strong>magento root -&gt; errors -&gt; default</strong> directory) to show proper message when user visits your website.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Register guest user to website if email provided</title>
      <link>http://localhost:1313/magento-register-guest-user-to-website-if-email-provided/</link>
      <pubDate>Sat, 31 Dec 2011 13:03:10 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-register-guest-user-to-website-if-email-provided/</guid>
      <description>&lt;p&gt;If your Magento website have feature where guest user can place an order without registering themself in your site, you can add them as a customer in your database. It helps in grouping the orders w.r.t email address in backend sales order. The only condition is that he should provide his email address while placing an order, which is quite obvious.&lt;/p&gt;&#xA;&lt;p&gt;So here is a snippet of code you can insert where you are asking user to enter his email address. Just check if the user is already not registered in your site.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If your Magento website have feature where guest user can place an order without registering themself in your site, you can add them as a customer in your database. It helps in grouping the orders w.r.t email address in backend sales order. The only condition is that he should provide his email address while placing an order, which is quite obvious.</p>
<p>So here is a snippet of code you can insert where you are asking user to enter his email address. Just check if the user is already not registered in your site.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$e</span> <span style="color:#666">=</span> <span style="color:#b8860b">$email</span>; <span style="color:#080;font-style:italic">//provided by guest user
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$store</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getStore</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$websiteId</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getWebsite</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$customerObj</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘customer<span style="color:#666">/</span>customer’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$customerObj</span><span style="color:#666">-&gt;</span><span style="color:#b44">website_id</span> <span style="color:#666">=</span> <span style="color:#b8860b">$websiteId</span>;  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$customerObj</span><span style="color:#666">-&gt;</span><span style="color:#b44">setStore</span>(<span style="color:#b8860b">$store</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$prefix</span> <span style="color:#666">=</span> “mag”;  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$pwd</span> <span style="color:#666">=</span> uniqid(<span style="color:#b8860b">$prefix</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$session</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘checkout<span style="color:#666">/</span>session’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$fname</span> <span style="color:#666">=</span> <span style="color:#b8860b">$session</span><span style="color:#666">-&gt;</span><span style="color:#b44">getFirstname</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$lname</span> <span style="color:#666">=</span> <span style="color:#b8860b">$session</span><span style="color:#666">-&gt;</span><span style="color:#b44">getLastname</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="">$</span>customerObj<span style="color:#666">-&gt;</span><span style="color:#b44">setEmail</span>(<span style="color:#b8860b">$e</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$customerObj</span><span style="color:#666">-&gt;</span><span style="color:#b44">setFirstname</span>(‘Guest’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$customerObj</span><span style="color:#666">-&gt;</span><span style="color:#b44">setLastname</span>(‘Guest’);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$customerObj</span><span style="color:#666">-&gt;</span><span style="color:#b44">setPassword</span>(<span style="color:#b8860b">$pwd</span>);  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$customerObj</span><span style="color:#666">-&gt;</span><span style="color:#b44">save</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$customerObj</span><span style="color:#666">-&gt;</span><span style="color:#b44">sendNewAccountEmail</span>(‘confirmed’); <span style="color:#080;font-style:italic">//auto confirmed  
</span></span></span></code></pre></div>
<p>UPDATE: It depends where you want to keep this functionality on your site. I have put it in saveShippingMethodAction() function of Mage/Checkout/controllers/OnepageController.php file after extending. Don’t forget, this code should only be run if customer is guest.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Getting back shopping cart items after order fails</title>
      <link>http://localhost:1313/magento-getting-back-shopping-cart-items-after-order-fails/</link>
      <pubDate>Sat, 31 Dec 2011 12:09:56 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-getting-back-shopping-cart-items-after-order-fails/</guid>
      <description>&lt;p&gt;It’s very awkward if users place an order in your website and by chance the order fails, from end user side or some technical glitch, shopping cart becomes empty. User have to again add items in cart and go through the process which becomes tedious and may be changing their mind to shop.&lt;/p&gt;&#xA;&lt;p&gt;So here’s a code that does the trick and preserves shopping cart content even if order gets failed.&lt;br&gt;&#xA;Open your file where you’re handling your order failure action in frontend. (generally &lt;strong&gt;Mage/Checkout/controllers/OnepageController.php&lt;/strong&gt;)&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;failureAction&lt;/span&gt;()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$lastQuoteId&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getOnepage&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCheckout&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getLastQuoteId&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$lastOrderId&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getOnepage&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCheckout&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getLastOrderId&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$lastQuoteId&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp;&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp; &lt;span style=&#34;color:#b8860b&#34;&gt;$lastOrderId&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$orderModel&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$lastOrderId&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$orderModel&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;canCancel&lt;/span&gt;()) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$quote&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘sales&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;quote’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$lastQuoteId&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$quote&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setIsActive&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;true&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;save&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$orderModel&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;cancel&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$orderModel&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setStatus&lt;/span&gt;(‘canceled’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$orderModel&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;save&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSingleton&lt;/span&gt;(‘core&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;session’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setFailureMsg&lt;/span&gt;(‘order_failed’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSingleton&lt;/span&gt;(‘checkout&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;session’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setFirstTimeChk&lt;/span&gt;(‘0’);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;_redirect&lt;/span&gt;(‘kcheckout&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;index&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;payment’, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(“_forced_secure” &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;true&lt;/span&gt;));  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$lastQuoteId&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$lastOrderId&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;_redirect&lt;/span&gt;(‘checkout&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;cart’, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(“_forced_secure” &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;true&lt;/span&gt;));  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt;;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;loadLayout&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;renderLayout&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>It’s very awkward if users place an order in your website and by chance the order fails, from end user side or some technical glitch, shopping cart becomes empty. User have to again add items in cart and go through the process which becomes tedious and may be changing their mind to shop.</p>
<p>So here’s a code that does the trick and preserves shopping cart content even if order gets failed.<br>
Open your file where you’re handling your order failure action in frontend. (generally <strong>Mage/Checkout/controllers/OnepageController.php</strong>)<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">failureAction</span>()  
</span></span><span style="display:flex;"><span>{  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$lastQuoteId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getOnepage</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getCheckout</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getLastQuoteId</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$lastOrderId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getOnepage</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getCheckout</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getLastOrderId</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$lastQuoteId</span> <span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp; <span style="color:#b8860b">$lastOrderId</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$orderModel</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>order’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$lastOrderId</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$orderModel</span><span style="color:#666">-&gt;</span><span style="color:#b44">canCancel</span>()) {
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$quote</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘sales<span style="color:#666">/</span>quote’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$lastQuoteId</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$quote</span><span style="color:#666">-&gt;</span><span style="color:#b44">setIsActive</span>(<span style="color:#a2f;font-weight:bold">true</span>)<span style="color:#666">-&gt;</span><span style="color:#b44">save</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$orderModel</span><span style="color:#666">-&gt;</span><span style="color:#b44">cancel</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$orderModel</span><span style="color:#666">-&gt;</span><span style="color:#b44">setStatus</span>(‘canceled’);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$orderModel</span><span style="color:#666">-&gt;</span><span style="color:#b44">save</span>();
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘core<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">setFailureMsg</span>(‘order_failed’);  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘checkout<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">setFirstTimeChk</span>(‘0’);  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_redirect</span>(‘kcheckout<span style="color:#666">/</span>index<span style="color:#666">/</span>payment’, <span style="color:#a2f;font-weight:bold">array</span>(“_forced_secure” <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">true</span>));  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span>;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span><span style="color:#b8860b">$lastQuoteId</span> <span style="color:#666">||</span> <span style="color:#666">!</span><span style="color:#b8860b">$lastOrderId</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">_redirect</span>(‘checkout<span style="color:#666">/</span>cart’, <span style="color:#a2f;font-weight:bold">array</span>(“_forced_secure” <span style="color:#666">=&gt;</span> <span style="color:#a2f;font-weight:bold">true</span>));  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">return</span>;  
</span></span><span style="display:flex;"><span> }
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">loadLayout</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">renderLayout</span>();  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div></p>
<p>Be noted here that we don’t have here onepage checkout so we’re redirecting user to payment page after restoring the cart. You can redirect user to any page as per your need after the cart is restored and previous order is cancelled.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Getting more than one records from core_config_data table</title>
      <link>http://localhost:1313/magento-getting-more-than-one-records-from-core_config_data-table/</link>
      <pubDate>Sat, 31 Dec 2011 10:56:20 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-getting-more-than-one-records-from-core_config_data-table/</guid>
      <description>&lt;p&gt;To select any particular record from core_config_data table in magento is quite simple.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getStoreConfig&lt;/span&gt;(‘sales_email&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;template’);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;But what if you want all the data pertaining to sales order email or for any other thing stored in magento’s config table? You may need other data like “enabled”, “identity”, “guest_template”, “copy_to” which can accomplish otherwise in 5 requests.&lt;br&gt;&#xA;So here is how you should write the code to get all the data for some particular expression as per your need.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$qrySalesOrder&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘core&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;config_data’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCollection&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;addFieldToFilter&lt;/span&gt;(‘path’,&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;array&lt;/span&gt;(‘like’&lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt;’sales_email&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;order&lt;span style=&#34;color:#666&#34;&gt;/%&lt;/span&gt;’));  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Mage::log($qrySalesOrder);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>To select any particular record from core_config_data table in magento is quite simple.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">getStoreConfig</span>(‘sales_email<span style="color:#666">/</span>order<span style="color:#666">/</span>template’);</span></span></code></pre></div><br>
But what if you want all the data pertaining to sales order email or for any other thing stored in magento’s config table? You may need other data like “enabled”, “identity”, “guest_template”, “copy_to” which can accomplish otherwise in 5 requests.<br>
So here is how you should write the code to get all the data for some particular expression as per your need.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$qrySalesOrder</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘core<span style="color:#666">/</span>config_data’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCollection</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">addFieldToFilter</span>(‘path’,<span style="color:#a2f;font-weight:bold">array</span>(‘like’<span style="color:#666">=&gt;</span>’sales_email<span style="color:#666">/</span>order<span style="color:#666">/%</span>’));  
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//Mage::log($qrySalesOrder);
</span></span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get checkout cart total details | Subtotal /Grandtotal /Discount /Tax</title>
      <link>http://localhost:1313/magento-get-checkout-cart-total-details-subtotal-/grandtotal-/discount-/tax/</link>
      <pubDate>Mon, 10 Oct 2011 14:22:36 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-checkout-cart-total-details-subtotal-/grandtotal-/discount-/tax/</guid>
      <description>&lt;p&gt;In Magento, if you want to get shopping cart totals details anywhere across the site, you can do so by following piece of code:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$totalItemsInCart&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;helper&lt;/span&gt;(‘checkout&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;cart’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getItemsCount&lt;/span&gt;(); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//total items in cart  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$totals&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSingleton&lt;/span&gt;(‘checkout&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;session’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getQuote&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getTotals&lt;/span&gt;(); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Total object  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$subtotal&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; round(&lt;span style=&#34;color:#b8860b&#34;&gt;$totals&lt;/span&gt;[“subtotal”]&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getValue&lt;/span&gt;()); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Subtotal value  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$grandtotal&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; round(&lt;span style=&#34;color:#b8860b&#34;&gt;$totals&lt;/span&gt;[“grand_total”]&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getValue&lt;/span&gt;()); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Grandtotal value  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(isset(&lt;span style=&#34;color:#b8860b&#34;&gt;$totals&lt;/span&gt;[‘discount’]) &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp;&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp; &lt;span style=&#34;color:#b8860b&#34;&gt;$totals&lt;/span&gt;[‘discount’]&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getValue&lt;/span&gt;()) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$discount&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; round(&lt;span style=&#34;color:#b8860b&#34;&gt;$totals&lt;/span&gt;[‘discount’]&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getValue&lt;/span&gt;()); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Discount value if applied  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;} &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$discount&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ”;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(isset(&lt;span style=&#34;color:#b8860b&#34;&gt;$totals&lt;/span&gt;[‘tax’]) &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp;&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;amp; &lt;span style=&#34;color:#b8860b&#34;&gt;$totals&lt;/span&gt;[‘tax’]&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getValue&lt;/span&gt;()) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$tax&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; round(&lt;span style=&#34;color:#b8860b&#34;&gt;$totals&lt;/span&gt;[‘tax’]&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getValue&lt;/span&gt;()); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//Tax value if present  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;} &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt; {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$tax&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; ”;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
      <content:encoded><![CDATA[<p>In Magento, if you want to get shopping cart totals details anywhere across the site, you can do so by following piece of code:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$totalItemsInCart</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">helper</span>(‘checkout<span style="color:#666">/</span>cart’)<span style="color:#666">-&gt;</span><span style="color:#b44">getItemsCount</span>(); <span style="color:#080;font-style:italic">//total items in cart  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$totals</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘checkout<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getQuote</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getTotals</span>(); <span style="color:#080;font-style:italic">//Total object  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$subtotal</span> <span style="color:#666">=</span> round(<span style="color:#b8860b">$totals</span>[“subtotal”]<span style="color:#666">-&gt;</span><span style="color:#b44">getValue</span>()); <span style="color:#080;font-style:italic">//Subtotal value  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$grandtotal</span> <span style="color:#666">=</span> round(<span style="color:#b8860b">$totals</span>[“grand_total”]<span style="color:#666">-&gt;</span><span style="color:#b44">getValue</span>()); <span style="color:#080;font-style:italic">//Grandtotal value  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#a2f;font-weight:bold">if</span>(isset(<span style="color:#b8860b">$totals</span>[‘discount’]) <span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp; <span style="color:#b8860b">$totals</span>[‘discount’]<span style="color:#666">-&gt;</span><span style="color:#b44">getValue</span>()) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$discount</span> <span style="color:#666">=</span> round(<span style="color:#b8860b">$totals</span>[‘discount’]<span style="color:#666">-&gt;</span><span style="color:#b44">getValue</span>()); <span style="color:#080;font-style:italic">//Discount value if applied  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$discount</span> <span style="color:#666">=</span> ”;  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span>(isset(<span style="color:#b8860b">$totals</span>[‘tax’]) <span style="color:#666">&amp;</span>amp;<span style="color:#666">&amp;</span>amp; <span style="color:#b8860b">$totals</span>[‘tax’]<span style="color:#666">-&gt;</span><span style="color:#b44">getValue</span>()) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$tax</span> <span style="color:#666">=</span> round(<span style="color:#b8860b">$totals</span>[‘tax’]<span style="color:#666">-&gt;</span><span style="color:#b44">getValue</span>()); <span style="color:#080;font-style:italic">//Tax value if present  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$tax</span> <span style="color:#666">=</span> ”;  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Show only specific attributes in layered navigation</title>
      <link>http://localhost:1313/magento-show-only-specific-attributes-in-layered-navigation/</link>
      <pubDate>Sun, 10 Jul 2011 06:02:34 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-show-only-specific-attributes-in-layered-navigation/</guid>
      <description>&lt;p&gt;In Magento, if you have lots of attributes (e.g. Type, Size, Price, Color, etc.) defined for categories, all are shown in the layered navigation on the left side. This may be sometimes annoying as they may break the website design. It is possible to disable the desired attributes from displaying on frontend.&lt;/p&gt;&#xA;&lt;p&gt;The solution is, go to:&lt;/p&gt;&#xA;&lt;p&gt;– Magento Backend -&amp;gt; Catalog Tab -&amp;gt; Attributes -&amp;gt; Manage Attributes&lt;br&gt;&#xA;– Click the attributes you do not want to display in layered navigation&lt;br&gt;&#xA;– Select NO where it says “Use in Layered Navigation”&lt;br&gt;&#xA;– Save&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In Magento, if you have lots of attributes (e.g. Type, Size, Price, Color, etc.) defined for categories, all are shown in the layered navigation on the left side. This may be sometimes annoying as they may break the website design. It is possible to disable the desired attributes from displaying on frontend.</p>
<p>The solution is, go to:</p>
<p>– Magento Backend -&gt; Catalog Tab -&gt; Attributes -&gt; Manage Attributes<br>
– Click the attributes you do not want to display in layered navigation<br>
– Select NO where it says “Use in Layered Navigation”<br>
– Save</p>
<p>Now all the attributes with Use in Layered Navation as Yes will only show in frontend Shopping options.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Can&amp;#8217;t login/add items in Chrome and IE</title>
      <link>http://localhost:1313/magento-can%238217t-login/add-items-in-chrome-and-ie/</link>
      <pubDate>Sat, 09 Jul 2011 10:13:08 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-can%238217t-login/add-items-in-chrome-and-ie/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;: In Chrome and IE, user as well as admin are unable to login as well as add items to cart. In Firefox, everything works fine.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;: This is due to the cookie problem, not in browser but in Magento itself. In Magento, by default cookie’s lifetime is set to 3600 (1 hour). But if the end users computer time runs ahead of server’s time, cookies will not get set for magento frontend as well as backend. For example, end user’s computer time is 1 hour forward than server’s time, that means the cookie (holding user’s session id) will expire as soon as user logs in or tries to add an item.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><strong>Problem</strong>: In Chrome and IE, user as well as admin are unable to login as well as add items to cart. In Firefox, everything works fine.</p>
<p><strong>Solution</strong>: This is due to the cookie problem, not in browser but in Magento itself. In Magento, by default cookie’s lifetime is set to 3600 (1 hour). But if the end users computer time runs ahead of server’s time, cookies will not get set for magento frontend as well as backend. For example, end user’s computer time is 1 hour forward than server’s time, that means the cookie (holding user’s session id) will expire as soon as user logs in or tries to add an item.</p>
<p>To solve this, set cookie’s lifetime to 86400 (1 day) instead of 1 hour and everything will work as expected. You can also set cookie lifetime to 0, so that cookie will only expire when the user’s browser is closed.</p>
<p>Go to: Magento backend -&gt; Sytem -&gt; Configuration -&gt; Web -&gt; Session and Cookie Management<br>
Set cookie lifetime to 86400 and save. Everything will work as expected now.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get customer details : customer id, name, email</title>
      <link>http://localhost:1313/magento-get-customer-details-customer-id-name-email/</link>
      <pubDate>Sun, 19 Jun 2011 08:55:13 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-customer-details-customer-id-name-email/</guid>
      <description>&lt;p&gt;Magento get the logged in customer details like customer id, name, email, etc. Check if customer is already logged in or not, if they are logged in then get all the data using customer session object and use it as per the requirement.&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSingleton&lt;/span&gt;(‘customer&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;session’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;isLoggedIn&lt;/span&gt;()) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$customer&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSingleton&lt;/span&gt;(‘customer&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;session’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCustomer&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$customerData&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘customer&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;customer’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;load&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$customer&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getId&lt;/span&gt;())&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getData&lt;/span&gt;();  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$customerData&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Output:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;Array&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [entity_id] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [entity_type_id] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [attribute_set_id] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [website_id] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [email] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; john&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;doe&lt;span style=&#34;color:#666&#34;&gt;@&lt;/span&gt;example&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;com  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [group_id] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [increment_id] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;000000001&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [store_id] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [created_at] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;2007&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;08&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;13&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [updated_at] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;2008&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;08&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;08&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;28&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;24&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [is_active] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [firstname] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; John  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [lastname] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; Doe  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [password_hash] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;204948&lt;/span&gt;a4020ed1d0e4238db2277d5&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;eg  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [prefix] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [middlename] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [suffix] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [taxvat] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [default_billing] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;274&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [default_shipping] &lt;span style=&#34;color:#666&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;274&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Magento get the logged in customer details like customer id, name, email, etc. Check if customer is already logged in or not, if they are logged in then get all the data using customer session object and use it as per the requirement.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> (Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘customer<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">isLoggedIn</span>()) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$customer</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘customer<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCustomer</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$customerData</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘customer<span style="color:#666">/</span>customer’)<span style="color:#666">-&gt;</span><span style="color:#b44">load</span>(<span style="color:#b8860b">$customer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>())<span style="color:#666">-&gt;</span><span style="color:#b44">getData</span>();  
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">log</span>(<span style="color:#b8860b">$customerData</span>);  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>Output:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">Array</span>  
</span></span><span style="display:flex;"><span>(  
</span></span><span style="display:flex;"><span> [entity_id] <span style="color:#666">=&gt;</span> <span style="color:#666">1</span>  
</span></span><span style="display:flex;"><span> [entity_type_id] <span style="color:#666">=&gt;</span> <span style="color:#666">1</span>  
</span></span><span style="display:flex;"><span> [attribute_set_id] <span style="color:#666">=&gt;</span> <span style="color:#666">0</span>  
</span></span><span style="display:flex;"><span> [website_id] <span style="color:#666">=&gt;</span> <span style="color:#666">1</span>  
</span></span><span style="display:flex;"><span> [email] <span style="color:#666">=&gt;</span> john<span style="color:#666">.</span>doe<span style="color:#666">@</span>example<span style="color:#666">.</span>com  
</span></span><span style="display:flex;"><span> [group_id] <span style="color:#666">=&gt;</span> <span style="color:#666">1</span>  
</span></span><span style="display:flex;"><span> [increment_id] <span style="color:#666">=&gt;</span> <span style="color:#666">000000001</span>  
</span></span><span style="display:flex;"><span> [store_id] <span style="color:#666">=&gt;</span> <span style="color:#666">1</span>  
</span></span><span style="display:flex;"><span> [created_at] <span style="color:#666">=&gt;</span> <span style="color:#666">2007</span><span style="color:#666">-</span><span style="color:#666">08</span><span style="color:#666">-</span><span style="color:#666">30</span> <span style="color:#666">23</span><span style="color:#666">:</span><span style="color:#666">23</span><span style="color:#666">:</span><span style="color:#666">13</span>  
</span></span><span style="display:flex;"><span> [updated_at] <span style="color:#666">=&gt;</span> <span style="color:#666">2008</span><span style="color:#666">-</span><span style="color:#666">08</span><span style="color:#666">-</span><span style="color:#666">08</span> <span style="color:#666">12</span><span style="color:#666">:</span><span style="color:#666">28</span><span style="color:#666">:</span><span style="color:#666">24</span>  
</span></span><span style="display:flex;"><span> [is_active] <span style="color:#666">=&gt;</span> <span style="color:#666">1</span>  
</span></span><span style="display:flex;"><span> [firstname] <span style="color:#666">=&gt;</span> John  
</span></span><span style="display:flex;"><span> [lastname] <span style="color:#666">=&gt;</span> Doe  
</span></span><span style="display:flex;"><span> [password_hash] <span style="color:#666">=&gt;</span> <span style="color:#666">204948</span>a4020ed1d0e4238db2277d5<span style="color:#666">:</span>eg  
</span></span><span style="display:flex;"><span> [prefix] <span style="color:#666">=&gt;</span>  
</span></span><span style="display:flex;"><span> [middlename] <span style="color:#666">=&gt;</span>  
</span></span><span style="display:flex;"><span> [suffix] <span style="color:#666">=&gt;</span>  
</span></span><span style="display:flex;"><span> [taxvat] <span style="color:#666">=&gt;</span>  
</span></span><span style="display:flex;"><span> [default_billing] <span style="color:#666">=&gt;</span> <span style="color:#666">274</span>  
</span></span><span style="display:flex;"><span> [default_shipping] <span style="color:#666">=&gt;</span> <span style="color:#666">274</span>  
</span></span><span style="display:flex;"><span>)</span></span></code></pre></div></p>
<p>Getting customer details from the $customerData object:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$customerID</span> <span style="color:#666">=</span> <span style="color:#b8860b">$customerData</span><span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>(); <span style="color:#080;font-style:italic">//entity_id can be used as id  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$name</span> <span style="color:#666">=</span> <span style="color:#b8860b">$customerData</span><span style="color:#666">-&gt;</span><span style="color:#b44">getFirstname</span>() <span style="color:#666">.</span> ‘ ‘ <span style="color:#666">.</span> <span style="color:#b8860b">$customerData</span><span style="color:#666">-&gt;</span><span style="color:#b44">getLastname</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$isActive</span> <span style="color:#666">=</span> <span style="color:#b8860b">$customerData</span><span style="color:#666">-&gt;</span><span style="color:#b44">getIsActive</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$email</span> <span style="color:#666">=</span> <span style="color:#b8860b">$customerData</span><span style="color:#666">-&gt;</span><span style="color:#b44">getEmail</span>();  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$incrId</span> <span style="color:#666">=</span> <span style="color:#b8860b">$customerData</span><span style="color:#666">-&gt;</span><span style="color:#b44">getIncrementId</span>();</span></span></code></pre></div></p>
<p>Similarly, we can get lastname, email, etc. ( [website_id] = getWebsiteId() )</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get and set variables in session</title>
      <link>http://localhost:1313/magento-get-and-set-variables-in-session/</link>
      <pubDate>Sun, 19 Jun 2011 07:56:21 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-and-set-variables-in-session/</guid>
      <description>&lt;p&gt;Suppose you want to set data in the magento session, so that you can retrieve it from other pages. Session has been very useful global variable in PHP and using it we can easily retrieve and add data to it and get it from the entire site.&lt;/p&gt;&#xA;&lt;p&gt;Here is the code that will set / add your custom data into session.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSingleton&lt;/span&gt;(‘core&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;session’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setMyCustomData&lt;/span&gt;(‘blah’);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;here, setMyCustomData can be replaced with the meaningful name as per your need. One thing to be cautious while setting session variables is to make sure it doesn’t conflict with magento’s internal variables, example setData.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Suppose you want to set data in the magento session, so that you can retrieve it from other pages. Session has been very useful global variable in PHP and using it we can easily retrieve and add data to it and get it from the entire site.</p>
<p>Here is the code that will set / add your custom data into session.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘core<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">setMyCustomData</span>(‘blah’);</span></span></code></pre></div></p>
<p>here, setMyCustomData can be replaced with the meaningful name as per your need. One thing to be cautious while setting session variables is to make sure it doesn’t conflict with magento’s internal variables, example setData.</p>
<p>Code to retrieve the session variable<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$session</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘core<span style="color:#666">/</span>session’, <span style="color:#a2f;font-weight:bold">array</span>(‘name’ <span style="color:#666">=&gt;</span> ‘frontend’));  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$session</span><span style="color:#666">-&gt;</span><span style="color:#b44">getMyCustomData</span>();</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Some important functions</title>
      <link>http://localhost:1313/magento-some-important-functions/</link>
      <pubDate>Sun, 19 Jun 2011 07:37:16 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-some-important-functions/</guid>
      <description>&lt;p&gt;Here I will show you some important functions/methods in Magento that will make your development easy.&lt;/p&gt;&#xA;&lt;p&gt;Get the path of your magento page.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getUrl&lt;/span&gt;(‘mypage’);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Get the path of the image in your skin folder.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSkinUrl&lt;/span&gt;(‘images&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;yourimage&lt;span style=&#34;color:#666&#34;&gt;.&lt;/span&gt;gif’);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Get the product link.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getProductData&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getProductUrl&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Get the product name.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;htmlEscape&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getProductData&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getName&lt;/span&gt;());&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Call a static block in .phtml file.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getLayout&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;createBlock&lt;/span&gt;(‘cms&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;block’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setBlockId&lt;/span&gt;(‘YOURBLOCKID’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;toHtml&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Get Image url of current category.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCurrentCategory&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getImageUrl&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Check whether the current category is Top category.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;IsTopCategory&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Get description of current category.&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCurrentCategory&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getDescription&lt;/span&gt;();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Here I will show you some important functions/methods in Magento that will make your development easy.</p>
<p>Get the path of your magento page.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getUrl</span>(‘mypage’);</span></span></code></pre></div></p>
<p>Get the path of the image in your skin folder.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSkinUrl</span>(‘images<span style="color:#666">/</span>yourimage<span style="color:#666">.</span>gif’);</span></span></code></pre></div></p>
<p>Get the product link.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProductData</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getProductUrl</span>();</span></span></code></pre></div></p>
<p>Get the product name.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">htmlEscape</span>(<span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProductData</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>());</span></span></code></pre></div></p>
<p>Call a static block in .phtml file.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getLayout</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">createBlock</span>(‘cms<span style="color:#666">/</span>block’)<span style="color:#666">-&gt;</span><span style="color:#b44">setBlockId</span>(‘YOURBLOCKID’)<span style="color:#666">-&gt;</span><span style="color:#b44">toHtml</span>();</span></span></code></pre></div></p>
<p>Get Image url of current category.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCurrentCategory</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getImageUrl</span>();</span></span></code></pre></div></p>
<p>Check whether the current category is Top category.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">IsTopCategory</span>();</span></span></code></pre></div></p>
<p>Get description of current category.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCurrentCategory</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getDescription</span>();</span></span></code></pre></div></p>
<p>Display products list page (list.phtml).<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getProductListHtml</span>();</span></span></code></pre></div></p>
<p>Display CMS block page.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCmsBlockHtml</span>();</span></span></code></pre></div></p>
<p>Get current store id.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$storeId</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getStore</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getId</span>();</span></span></code></pre></div></p>
<p>Get current store name.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$storeName</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getStore</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>();</span></span></code></pre></div></p>
<p>Get current store code.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$storeCode</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getStore</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getCode</span>();</span></span></code></pre></div></p>
<p>Get website name.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$websiteName</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getWebsite</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>();</span></span></code></pre></div></p>
<p>Get session id.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$sessionId</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘core<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getSessionId</span>();</span></span></code></pre></div></p>
<p>Get customer id.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$customerId</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘customer<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getCustomerId</span>();</span></span></code></pre></div></p>
<p>Get guest id.<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">echo</span> <span style="color:#b8860b">$vistitorId</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘core<span style="color:#666">/</span>session’)<span style="color:#666">-&gt;</span><span style="color:#b44">getVisitorId</span>();</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Checking customer/admin is logged in or not</title>
      <link>http://localhost:1313/magento-checking-customer/admin-is-logged-in-or-not/</link>
      <pubDate>Sun, 19 Jun 2011 07:07:47 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-checking-customer/admin-is-logged-in-or-not/</guid>
      <description>&lt;p&gt;The most important part in magento development is to check whether customer is logged in or not in the system. So that you can show specific features and extra privileges to your customers. There are many things that are restricted to the guests, while members can see the special privilege things.&lt;/p&gt;&#xA;&lt;p&gt;Also if the customer is not logged in, we can show a link like “Log in”; while for logged in customers, we can show link like “Log out”, “My account”, etc. This is already present in Magento, but we may want to add more features to our customers. So here is the code where you can check customer is logged in or not.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>The most important part in magento development is to check whether customer is logged in or not in the system. So that you can show specific features and extra privileges to your customers. There are many things that are restricted to the guests, while members can see the special privilege things.</p>
<p>Also if the customer is not logged in, we can show a link like “Log in”; while for logged in customers, we can show link like “Log out”, “My account”, etc. This is already present in Magento, but we may want to add more features to our customers. So here is the code where you can check customer is logged in or not.</p>
<p>This will check whether the customer is logged in the magento system or not.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$session</span><span style="color:#666">=</span>Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘customer<span style="color:#666">/</span>session’, <span style="color:#a2f;font-weight:bold">array</span>(‘name’<span style="color:#666">=&gt;</span>’frontend’) );
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#b8860b">$session</span><span style="color:#666">-&gt;</span><span style="color:#b44">isLoggedIn</span>()) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “Welcome, “<span style="color:#666">.</span><span style="color:#b8860b">$session</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCustomer</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getName</span>();  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “Not logged in”;  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
<p>This will check whether admin is logged in or not in a magento site.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$adminsession</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getSingleton</span>(‘admin<span style="color:#666">/</span>session’, <span style="color:#a2f;font-weight:bold">array</span>(‘name’<span style="color:#666">=&gt;</span>’adminhtml’));
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">if</span>(<span style="color:#b8860b">$adminsession</span><span style="color:#666">-&gt;</span><span style="color:#b44">isLoggedIn</span>()) {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “Welcome Admin”;  
</span></span><span style="display:flex;"><span>} <span style="color:#a2f;font-weight:bold">else</span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> “Not logged in”;  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>Magento get file paths and URLs</title>
      <link>http://localhost:1313/magento-get-file-paths-and-urls/</link>
      <pubDate>Tue, 14 Jun 2011 11:45:15 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-file-paths-and-urls/</guid>
      <description>&lt;p&gt;Get URL paths of your magento folder structure – Absolute URL Path&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mage::getBaseUrl()&lt;/strong&gt; =&amp;gt; Gets base url path e.g. &lt;a href=&#34;http://my.website.com/&#34;&gt;http://my.website.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mage::getBaseUrl(‘media’&lt;/strong&gt;) =&amp;gt; Gets MEDIA folder path e.g. &lt;a href=&#34;http://my.website.com/media/&#34;&gt;http://my.website.com/media/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mage::getBaseUrl(‘js’)&lt;/strong&gt; =&amp;gt; Gets JS folder path e.g. &lt;a href=&#34;http://my.website.com/js/&#34;&gt;http://my.website.com/js/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mage::getBaseUrl(‘skin’)&lt;/strong&gt; =&amp;gt; Gets SKIN folder path e.g. &lt;a href=&#34;http://my.website.com/skin/&#34;&gt;http://my.website.com/skin/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Get DIRECTORY paths (physical location of your folders on the server) – Relative URL Path&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mage::getBaseDir()&lt;/strong&gt; =&amp;gt; Gives you your Magento installation folder / root folder e.g. /home/kalpesh/workspace/magento&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Mage::getBaseDir(‘app’)&lt;/strong&gt; =&amp;gt; Gives you your Magento’s APP directory file location e.g. /home/kalpesh/workspace/magento/app&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Get URL paths of your magento folder structure – Absolute URL Path</p>
<p><strong>Mage::getBaseUrl()</strong> =&gt; Gets base url path e.g. <a href="http://my.website.com/">http://my.website.com/</a></p>
<p><strong>Mage::getBaseUrl(‘media’</strong>) =&gt; Gets MEDIA folder path e.g. <a href="http://my.website.com/media/">http://my.website.com/media/</a></p>
<p><strong>Mage::getBaseUrl(‘js’)</strong> =&gt; Gets JS folder path e.g. <a href="http://my.website.com/js/">http://my.website.com/js/</a></p>
<p><strong>Mage::getBaseUrl(‘skin’)</strong> =&gt; Gets SKIN folder path e.g. <a href="http://my.website.com/skin/">http://my.website.com/skin/</a></p>
<p>Get DIRECTORY paths (physical location of your folders on the server) – Relative URL Path</p>
<p><strong>Mage::getBaseDir()</strong> =&gt; Gives you your Magento installation folder / root folder e.g. /home/kalpesh/workspace/magento</p>
<p><strong>Mage::getBaseDir(‘app’)</strong> =&gt; Gives you your Magento’s APP directory file location e.g. /home/kalpesh/workspace/magento/app</p>
<p><strong>Mage::getBaseDir(‘design’)</strong> =&gt; Gives you your Magento’s DESIGN directory file location e.g. /home/kalpesh/workspace/magento/design</p>
<p><strong>Mage::getBaseDir(‘media’)</strong> =&gt; Gives MEDIA directory file path</p>
<p><strong>Mage::getBaseDir(‘code’)</strong> =&gt; Gives CODE directory file path</p>
<p><strong>Mage::getBaseDir(‘lib’)</strong> =&gt; Gives LIB directory file path</p>
<p>Get Current URL – whole URL path</p>
<p><strong>Mage::helper(‘core/url’)-&gt;getCurrentUrl()</strong></p>
]]></content:encoded>
    </item>
    <item>
      <title>InkFruit.com &amp;#8211; launched in Magento</title>
      <link>http://localhost:1313/inkfruit.com-%238211-launched-in-magento/</link>
      <pubDate>Fri, 10 Jun 2011 15:33:37 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/inkfruit.com-%238211-launched-in-magento/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://ka.lpe.sh/wp-content/uploads/2011/06/ink1.jpg&#34; alt=&#34;Inkfruit.com&#34;&gt;After so much of hard work and less time to complete, finally we launched our old core PHP website in Magento.&lt;/p&gt;&#xA;&lt;p&gt;At beginning, the task was the tough nut to crack, but then it was more interesting and honestly we loved it.&lt;/p&gt;&#xA;&lt;p&gt;Magento is really far more different and complex than other frameworks, cms and commerce softwares.&lt;br&gt;&#xA;It has got the power to make a giant eCommerce website but beware, it is also too slow and resouce-hungry.&lt;br&gt;&#xA;It has everything you want during development, you just need to know from where and how to get and use it.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><img src="http://ka.lpe.sh/wp-content/uploads/2011/06/ink1.jpg" alt="Inkfruit.com">After so much of hard work and less time to complete, finally we launched our old core PHP website in Magento.</p>
<p>At beginning, the task was the tough nut to crack, but then it was more interesting and honestly we loved it.</p>
<p>Magento is really far more different and complex than other frameworks, cms and commerce softwares.<br>
It has got the power to make a giant eCommerce website but beware, it is also too slow and resouce-hungry.<br>
It has everything you want during development, you just need to know from where and how to get and use it.</p>
<p>There were many things we learned through the process.</p>
<p>It has everything the magento website can have, from core module rewrites to EAV module.</p>
<p>Plenty of customization but no changes in core!</p>
<p>It was really a great experience and things in Magento are far more clear to us now.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Override/Rewrite Magento core blocks and controllers</title>
      <link>http://localhost:1313/override/rewrite-magento-core-blocks-and-controllers/</link>
      <pubDate>Wed, 08 Jun 2011 06:23:16 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/override/rewrite-magento-core-blocks-and-controllers/</guid>
      <description>&lt;p&gt;After spending many hours in rewriting block and controller of Magento core module, I finally came up with a solution.&lt;br&gt;&#xA;Here I am going to rewrite block: &lt;strong&gt;Mage/Adminhtml/Block/Sales/Shipment/Grid.php&lt;/strong&gt;&lt;br&gt;&#xA;and controller: &lt;strong&gt;Mage/Adminhtml/controllers/Sales/ShipmentController.php&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;First you will need to make a xml file for your new module at app/etc/modules directory&lt;br&gt;&#xA;&lt;strong&gt;CompanyName_Adminhtml.xml&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#666&#34;&gt;&amp;lt;?&lt;/span&gt;xml version&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;?&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;&amp;lt;config&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt; &amp;lt;modules&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt; &amp;lt;companyname_adminhtml&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt; &amp;lt;active&amp;gt;true&amp;lt;/active&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt; &amp;lt;codepool&amp;gt;local&amp;lt;/codepool&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt; &amp;lt;/companyname_adminhtml&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt; &amp;lt;/modules&amp;gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;&#34;&gt;&amp;lt;/config&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Then, make folders in your app/code/local directory as follows:&lt;br&gt;&#xA;– CompanyName&lt;br&gt;&#xA;-&amp;gt; Block&lt;br&gt;&#xA;—&amp;gt; Sales&lt;br&gt;&#xA;—-&amp;gt; Shipment&lt;br&gt;&#xA;——&amp;gt; Grid.php&lt;br&gt;&#xA;-&amp;gt; controllers&lt;br&gt;&#xA;—&amp;gt; Sales&lt;br&gt;&#xA;—-&amp;gt; ShipmentController.php&lt;br&gt;&#xA;-&amp;gt; etc&lt;br&gt;&#xA;—&amp;gt; config.xml&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>After spending many hours in rewriting block and controller of Magento core module, I finally came up with a solution.<br>
Here I am going to rewrite block: <strong>Mage/Adminhtml/Block/Sales/Shipment/Grid.php</strong><br>
and controller: <strong>Mage/Adminhtml/controllers/Sales/ShipmentController.php</strong></p>
<p>First you will need to make a xml file for your new module at app/etc/modules directory<br>
<strong>CompanyName_Adminhtml.xml</strong></p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>xml version<span style="color:#666">=</span><span style="color:#b44">&#34;1.0&#34;</span><span style="color:#666">?</span><span style="color:#080">?&gt;</span><span style="">
</span></span></span><span style="display:flex;"><span><span style="">  
</span></span></span><span style="display:flex;"><span><span style="">&lt;config&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;modules&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;companyname_adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;active&gt;true&lt;/active&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;codepool&gt;local&lt;/codepool&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/companyname_adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/modules&gt;  
</span></span></span><span style="display:flex;"><span><span style="">&lt;/config&gt;
</span></span></span></code></pre></div>
<p>Then, make folders in your app/code/local directory as follows:<br>
– CompanyName<br>
-&gt; Block<br>
—&gt; Sales<br>
—-&gt; Shipment<br>
——&gt; Grid.php<br>
-&gt; controllers<br>
—&gt; Sales<br>
—-&gt; ShipmentController.php<br>
-&gt; etc<br>
—&gt; config.xml</p>
<p>In <strong>etc/config.xml</strong>, your code should look like below:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#666">&lt;?</span>xml version<span style="color:#666">=</span><span style="color:#b44">&#34;1.0&#34;</span><span style="color:#666">?</span><span style="color:#080">?&gt;</span><span style="">
</span></span></span><span style="display:flex;"><span><span style="">  
</span></span></span><span style="display:flex;"><span><span style="">&lt;config&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;modules&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;companyname_adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;version&gt;0.1.0&lt;/version&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/companyname_adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/modules&gt;&lt;/config&gt;
</span></span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""> &lt;global&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;blocks&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;rewrite&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;sales_shipment_grid&gt;CompanyName_Adminhtml_Block_Sales_Shipment_Grid&lt;/sales_shipment_grid&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/rewrite&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/blocks&gt;&lt;/global&gt;
</span></span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""> &lt;routers&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;rewrite&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;sales_shipment&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;from&gt;&lt;![CDATA[#^/admin/sales_shipment/$#]]&gt;&lt;/from&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;to&gt;/admin/sales_shipment/&lt;/to&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/sales_shipment&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/rewrite&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/routers&gt;
</span></span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style=""> &lt;admin&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;routers&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;args&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;modules&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;companyname_adminhtml before=&#34;Mage_Adminhtml&#34;&gt;CompanyName_Adminhtml&lt;/companyname_adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/modules&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/args&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/adminhtml&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/routers&gt;  
</span></span></span><span style="display:flex;"><span><span style=""> &lt;/admin&gt;
</span></span></span><span style="display:flex;"><span><span style="">
</span></span></span><span style="display:flex;"><span><span style="">  
</span></span></span></code></pre></div>
<p>In <strong>ShipmentController.php</strong>, you should start like this:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">require_once</span>(“Mage<span style="color:#666">/</span>Adminhtml<span style="color:#666">/</span>controllers<span style="color:#666">/</span>Sales<span style="color:#666">/</span>ShipmentController<span style="color:#666">.</span>php”);  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">class</span> <span style="color:#00f">CompanyName_Adminhtml_Sales_ShipmentController</span> <span style="color:#a2f;font-weight:bold">extends</span> Mage_Adminhtml_Sales_ShipmentController  
</span></span><span style="display:flex;"><span>{  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//controller methods goes here..  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}</span></span></code></pre></div>
<p>require_once is necessary as magento is not going to load controllers as it does for blocks and models</p>
<p>In block <strong>Grid.php</strong>, start the file like below:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">class</span> <span style="color:#00f">CompanyName_Adminhtml_Block_Sales_Shipment_Grid</span> <span style="color:#a2f;font-weight:bold">extends</span> Mage_Adminhtml_Block_Widget_Grid  
</span></span><span style="display:flex;"><span>{  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">// block methods goes here..  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>}</span></span></code></pre></div></p>
<p>That’s it! Now you should get your local Grid.php and ShipmentController.php loading instead of core’s.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Get all the values of a Magento EAV for a particular attribute code</title>
      <link>http://localhost:1313/magento-get-all-the-values-of-a-magento-eav-for-a-particular-attribute-code/</link>
      <pubDate>Mon, 06 Jun 2011 10:12:18 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-get-all-the-values-of-a-magento-eav-for-a-particular-attribute-code/</guid>
      <description>&lt;p&gt;If you have ever wondered how to get all the values of any EAV attribute for products in Magento, then this is the workaround for you:&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$attribute&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getModel&lt;/span&gt;(‘eav&lt;span style=&#34;color:#666&#34;&gt;/&lt;/span&gt;config’)&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAttribute&lt;/span&gt;(‘catalog_product’, ‘color’); &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//here, “color” is the attribute_code  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$allOptions&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$attribute&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getSource&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getAllOptions&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;true&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;foreach&lt;/span&gt; (&lt;span style=&#34;color:#b8860b&#34;&gt;$allOptions&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$instance&lt;/span&gt;) {  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$myArray&lt;/span&gt;[&lt;span style=&#34;color:#b8860b&#34;&gt;$instance&lt;/span&gt;[‘value’]] &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$instance&lt;/span&gt;[‘label’];  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mage&lt;span style=&#34;color:#666&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;log&lt;/span&gt;(&lt;span style=&#34;color:#b8860b&#34;&gt;$myArray&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;You will get list of all colors in an array called “myArray” in value =&amp;gt; label format.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If you have ever wondered how to get all the values of any EAV attribute for products in Magento, then this is the workaround for you:</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#b8860b">$attribute</span> <span style="color:#666">=</span> Mage<span style="color:#666">::</span><span style="color:#b44">getModel</span>(‘eav<span style="color:#666">/</span>config’)<span style="color:#666">-&gt;</span><span style="color:#b44">getAttribute</span>(‘catalog_product’, ‘color’); <span style="color:#080;font-style:italic">//here, “color” is the attribute_code  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span><span style="color:#b8860b">$allOptions</span> <span style="color:#666">=</span> <span style="color:#b8860b">$attribute</span><span style="color:#666">-&gt;</span><span style="color:#b44">getSource</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getAllOptions</span>(<span style="color:#a2f;font-weight:bold">true</span>, <span style="color:#a2f;font-weight:bold">true</span>);  
</span></span><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">foreach</span> (<span style="color:#b8860b">$allOptions</span> <span style="color:#a2f;font-weight:bold">as</span> <span style="color:#b8860b">$instance</span>) {  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$myArray</span>[<span style="color:#b8860b">$instance</span>[‘value’]] <span style="color:#666">=</span> <span style="color:#b8860b">$instance</span>[‘label’];  
</span></span><span style="display:flex;"><span>}  
</span></span><span style="display:flex;"><span>Mage<span style="color:#666">::</span><span style="color:#b44">log</span>(<span style="color:#b8860b">$myArray</span>);</span></span></code></pre></div>
<p>You will get list of all colors in an array called “myArray” in value =&gt; label format.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento 1.5: Cannot login to admin panel after fresh install</title>
      <link>http://localhost:1313/magento-1.5-cannot-login-to-admin-panel-after-fresh-install/</link>
      <pubDate>Sun, 05 Jun 2011 07:11:19 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-1.5-cannot-login-to-admin-panel-after-fresh-install/</guid>
      <description>&lt;p&gt;After installing magento 1.5, I tried to login to the admin panel with correct username and password, but it does not let me in without any error message. This is due to cookie problem in magento and can be fixed as below:&lt;/p&gt;&#xA;&lt;p&gt;Open this file in your favorite editor: &lt;strong&gt;app/code/core/Mage/Core/Model/Session/Abstract/Varien.php&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Comment lines that says like (probably line number 81 to 83)&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCookie&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getDomain&lt;/span&gt;(),  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCookie&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;isSecure&lt;/span&gt;(),  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getCookie&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getHttponly&lt;/span&gt;()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;to&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//$this-&amp;gt;getCookie()-&amp;gt;getDomain(),  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//$this-&amp;gt;getCookie()-&amp;gt;isSecure(),  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//$this-&amp;gt;getCookie()-&amp;gt;getHttponly()  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;Now you could login to your admin panel without any problem.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>After installing magento 1.5, I tried to login to the admin panel with correct username and password, but it does not let me in without any error message. This is due to cookie problem in magento and can be fixed as below:</p>
<p>Open this file in your favorite editor: <strong>app/code/core/Mage/Core/Model/Session/Abstract/Varien.php</strong></p>
<p>Comment lines that says like (probably line number 81 to 83)<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCookie</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getDomain</span>(),  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCookie</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">isSecure</span>(),  
</span></span><span style="display:flex;"><span><span style="color:#b8860b">$this</span><span style="color:#666">-&gt;</span><span style="color:#b44">getCookie</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getHttponly</span>()  
</span></span></code></pre></div><br>
to<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span>  
</span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//$this-&gt;getCookie()-&gt;getDomain(),  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//$this-&gt;getCookie()-&gt;isSecure(),  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic">//$this-&gt;getCookie()-&gt;getHttponly()  
</span></span></span></code></pre></div><br>
Now you could login to your admin panel without any problem.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
