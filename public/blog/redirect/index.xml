<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Redirect on KALPESH MEHTA</title>
    <link>http://localhost:1313/blog/redirect/</link>
    <description>Recent content in Redirect on KALPESH MEHTA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>k@lpe.sh (Kalpesh Mehta)</managingEditor>
    <webMaster>k@lpe.sh (Kalpesh Mehta)</webMaster>
    <copyright>Copyright © 2025 kalpesh mehta</copyright>
    <lastBuildDate>Thu, 04 May 2017 21:34:37 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/redirect/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redirect request with POST data using .htaccess</title>
      <link>http://localhost:1313/redirect-request-with-post-data-using-.htaccess/</link>
      <pubDate>Thu, 04 May 2017 21:34:37 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/redirect-request-with-post-data-using-.htaccess/</guid>
      <description>&lt;p&gt;By default, if you want to redirect request with POST data, browser redirects it via GET with 302 redirect. This also drops all the POST data associated with the request. Browser does this as a precaution to prevent any unintentional re-submitting of POST transaction.&lt;/p&gt;&#xA;&lt;p&gt;But what if you want to redirect anyway POST request with it’s data? In HTTP 1.1, there is a status code for this. Status code 307 indicates that the request should be repeated with the same HTTP method and data. So your POST request will be repeated along with it’s data if you use this status code.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>By default, if you want to redirect request with POST data, browser redirects it via GET with 302 redirect. This also drops all the POST data associated with the request. Browser does this as a precaution to prevent any unintentional re-submitting of POST transaction.</p>
<p>But what if you want to redirect anyway POST request with it’s data? In HTTP 1.1, there is a status code for this. Status code 307 indicates that the request should be repeated with the same HTTP method and data. So your POST request will be repeated along with it’s data if you use this status code.</p>
<p>From <a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</a>,<br>
<em>If the 307 status code is received in response to a request other than GET or HEAD, <strong>the user agent MUST NOT automatically redirect the request</strong> unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</em></p>
<p>I did this in one of the website to redirect HTTP request to HTTPS for a specific page.</p>




<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-http" data-lang="http"><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"> RewriteEngine on  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">RewriteCond %{SERVER_PORT} !443  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">RewriteCond %{REQUEST_URI} string_to_match_in_url  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">RewriteCond %{REQUEST_METHOD} POST  
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">RewriteRule ^(.*)$ https://%{HTTP_HOST}/$1 [L,R=307]</span></span></span></code></pre></div>
<p>For this to work, you need to have mod_rewrite enabled on the server. The first RewriteCond checks if the request is NOT coming as HTTPS, otherwise it will go in endless loop. If yes, the second RewriteCond checks if the URL contains a string we are looking for. Then if that URL is being submitted as POST method. If everything matches, then we redirect the request using HTTPS secure protocol retaining the POST method and the associated data.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento redirect from observer</title>
      <link>http://localhost:1313/magento-redirect-from-observer/</link>
      <pubDate>Sun, 21 Jul 2013 14:11:11 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/magento-redirect-from-observer/</guid>
      <description>&lt;p&gt;Redirection in observer doesn’t work normally as it do in Blocks, templates and controllers. Also there is no standard code to redirect from observer that works in every situation.&lt;/p&gt;&#xA;&lt;p&gt;You will need an argument to achieve redirect when using below code:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;observingMethod&lt;/span&gt;(Varien_Event_Observer &lt;span style=&#34;color:#b8860b&#34;&gt;$observer&lt;/span&gt;)  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#b8860b&#34;&gt;$observer&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;getRequest&lt;/span&gt;()&lt;span style=&#34;color:#666&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;setParam&lt;/span&gt;(‘return_url’,&lt;span style=&#34;color:#b8860b&#34;&gt;$urlToRedirect&lt;/span&gt;);  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br&gt;&#xA;Note that $observer object should have getRequest() method to make above code work. You may need to use $observer-&amp;gt;getEvent()-&amp;gt;getFront()-&amp;gt;getRequest() otherwise, or simply var_dump/Mage::log $observer to get better idea what methods the object have.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Redirection in observer doesn’t work normally as it do in Blocks, templates and controllers. Also there is no standard code to redirect from observer that works in every situation.</p>
<p>You will need an argument to achieve redirect when using below code:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">observingMethod</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>)  
</span></span><span style="display:flex;"><span>{  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$observer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getRequest</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">setParam</span>(‘return_url’,<span style="color:#b8860b">$urlToRedirect</span>);  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div><br>
Note that $observer object should have getRequest() method to make above code work. You may need to use $observer-&gt;getEvent()-&gt;getFront()-&gt;getRequest() otherwise, or simply var_dump/Mage::log $observer to get better idea what methods the object have.</p>
<p>Or you can use below code which is not recommended:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">observingMethod</span>() {  
</span></span><span style="display:flex;"><span> header(‘Location<span style="color:#666">:</span> ‘ <span style="color:#666">.</span> <span style="color:#b8860b">$urlToRedirect</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">exit</span>;  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div><br>
We don’t need any arguments using above method.</p>
<p>Another approach, again not recommended:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">public</span> <span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">observingMethod</span>(Varien_Event_Observer <span style="color:#b8860b">$observer</span>)  
</span></span><span style="display:flex;"><span>{  
</span></span><span style="display:flex;"><span> <span style="color:#b8860b">$response</span> <span style="color:#666">=</span> <span style="color:#b8860b">$observer</span><span style="color:#666">-&gt;</span><span style="color:#b44">getResponse</span>();  
</span></span><span style="display:flex;"><span> <span style="color:#080;font-style:italic">//$response = Mage::app()-&gt;getFrontController()-&gt;getResponse();  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span> <span style="color:#b8860b">$response</span><span style="color:#666">-&gt;</span><span style="color:#b44">setRedirect</span>(<span style="color:#b8860b">$urlToRedirect</span>);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> Mage<span style="color:#666">::</span><span style="color:#b44">app</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">getFrontController</span>()<span style="color:#666">-&gt;</span><span style="color:#b44">sendResponse</span>();  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div></p>
]]></content:encoded>
    </item>
    <item>
      <title>PHP redirect without header()</title>
      <link>http://localhost:1313/php-redirect-without-header/</link>
      <pubDate>Wed, 12 Jun 2013 19:19:54 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/php-redirect-without-header/</guid>
      <description>&lt;p&gt;It’s very frustrating when you want to redirect from one page to another, and you get the error:&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Warning: Cannot modify header information – headers already sent by (output started at /some/filename.php:12) in /some/filename.php on line 99&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;The problem is Headers are already sent, or in simple language the output is already sent to browser when your header() function is called. The best solution is not to pass headers (send html/output to browser) till the point header() function is fired.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>It’s very frustrating when you want to redirect from one page to another, and you get the error:</p>
<p><em>Warning: Cannot modify header information – headers already sent by (output started at /some/filename.php:12) in /some/filename.php on line 99</em></p>
<p>The problem is Headers are already sent, or in simple language the output is already sent to browser when your header() function is called. The best solution is not to pass headers (send html/output to browser) till the point header() function is fired.</p>
<p>Another way is to use output buffering. Without output buffering (the default), your HTML is sent to the browser in pieces as PHP processes through your script. With output buffering, your HTML is stored in a variable and sent to the browser as one piece at the end of your script. For using this method, you have to start your file with <em>ob_start();</em> so that output gets buffered.</p>
<p>But what if you don’t care whether the output is sent or not, you anyway want the redirect to work? This simple function will do the trick for you. It will check if headers are not sent, then it will call the PHP’s header function to redirect. But if the headers are sent, it will use Javascript to redirect to the URL you want.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-php" data-lang="php"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">function</span> <span style="color:#00a000">redirect</span>(<span style="color:#b8860b">$url</span>)  
</span></span><span style="display:flex;"><span>{  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">if</span> (<span style="color:#666">!</span>headers_sent())  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> header(‘Location<span style="color:#666">:</span> ‘<span style="color:#666">.</span><span style="color:#b8860b">$url</span>);  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">exit</span>;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">else</span>  
</span></span><span style="display:flex;"><span> {  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘<span style="color:#666">&lt;</span>script type<span style="color:#666">=</span><span style="color:#b44">&#34;text/javascript&#34;</span><span style="color:#666">&gt;</span><span style="color:#b44">&#39;;
</span></span></span><span style="display:flex;"><span><span style="color:#b44">        echo &#39;</span>window<span style="color:#666">.</span>location<span style="color:#666">.</span>href<span style="color:#666">=</span><span style="color:#b44">&#34;&#39;.</span><span style="color:#b68;font-weight:bold">$url</span><span style="color:#b44">.&#39;&#34;</span>;<span style="color:#b44">&#39;;
</span></span></span><span style="display:flex;"><span><span style="color:#b44">        echo &#39;</span><span style="color:#666">&lt;/</span>script<span style="color:#666">&gt;</span>‘;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘<span style="color:#666">&lt;</span>noscript<span style="color:#666">&gt;</span>‘;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘<span style="color:#666">&lt;</span>meta content<span style="color:#666">=</span><span style="color:#b44">&#34;0;url=&#39;.</span><span style="color:#b68;font-weight:bold">$url</span><span style="color:#b44">.&#39;&#34;</span> http<span style="color:#666">-</span>equiv<span style="color:#666">=</span><span style="color:#b44">&#34;refresh&#34;</span><span style="color:#666">&gt;&lt;/</span>meta<span style="color:#666">&gt;</span>‘;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">echo</span> ‘<span style="color:#666">&lt;/</span>noscript<span style="color:#666">&gt;</span>‘;  
</span></span><span style="display:flex;"><span> <span style="color:#a2f;font-weight:bold">exit</span>;  
</span></span><span style="display:flex;"><span> }  
</span></span><span style="display:flex;"><span>}</span></span></code></pre></div>
]]></content:encoded>
    </item>
    <item>
      <title>jQuery redirect page, with javascript alternative</title>
      <link>http://localhost:1313/jquery-redirect-page-with-javascript-alternative/</link>
      <pubDate>Wed, 29 May 2013 11:31:29 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/jquery-redirect-page-with-javascript-alternative/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://ka.lpe.sh/wp-content/uploads/2013/06/jquery-logo.png&#34; alt=&#34;jQuery javascript framework&#34;&gt;jQuery redirect one page to another using the following code:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;var&lt;/span&gt; your_url &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;&#34;&gt;‘&lt;/span&gt;http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//ka.lpe.sh/’; //change this to your url  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;$(location).attr(&lt;span style=&#34;&#34;&gt;‘&lt;/span&gt;href&lt;span style=&#34;&#34;&gt;’&lt;/span&gt;,&lt;span style=&#34;&#34;&gt;’&lt;/span&gt;your_url&lt;span style=&#34;&#34;&gt;’&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Above code works to redirect page in jQuery, but javascript code is good alternative here.&lt;/p&gt;&#xA;&lt;p&gt;Using javascript to redirect your page using below code, which is better than jQuery, will do the job:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;window&lt;/span&gt;.location.replace(&lt;span style=&#34;&#34;&gt;“&lt;/span&gt;http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//ka.lpe.sh/”);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;Another javascript approach which will mock as if the URL is being clicked to redirect is:&lt;br&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a2f&#34;&gt;window&lt;/span&gt;.location.href &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;&#34;&gt;“&lt;/span&gt;http&lt;span style=&#34;color:#666&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;//ka.lpe.sh/”;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><img src="http://ka.lpe.sh/wp-content/uploads/2013/06/jquery-logo.png" alt="jQuery javascript framework">jQuery redirect one page to another using the following code:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f;font-weight:bold">var</span> your_url <span style="color:#666">=</span> <span style="">‘</span>http<span style="color:#666">:</span><span style="color:#080;font-style:italic">//ka.lpe.sh/’; //change this to your url  
</span></span></span><span style="display:flex;"><span><span style="color:#080;font-style:italic"></span>$(location).attr(<span style="">‘</span>href<span style="">’</span>,<span style="">’</span>your_url<span style="">’</span>);</span></span></code></pre></div></p>
<p>Above code works to redirect page in jQuery, but javascript code is good alternative here.</p>
<p>Using javascript to redirect your page using below code, which is better than jQuery, will do the job:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f">window</span>.location.replace(<span style="">“</span>http<span style="color:#666">:</span><span style="color:#080;font-style:italic">//ka.lpe.sh/”);
</span></span></span></code></pre></div></p>
<p>Another javascript approach which will mock as if the URL is being clicked to redirect is:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f">window</span>.location.href <span style="color:#666">=</span> <span style="">“</span>http<span style="color:#666">:</span><span style="color:#080;font-style:italic">//ka.lpe.sh/”;
</span></span></span></code></pre></div></p>
<p>Even this will do the trick in javascript, which sets your URL in a window object and assigns it to anchor tag’s href attribute automatically:<br>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#a2f">window</span>.location <span style="color:#666">=</span> <span style="">“</span>http<span style="color:#666">:</span><span style="color:#080;font-style:italic">//ka.lpe.sh/”;
</span></span></span></code></pre></div></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
