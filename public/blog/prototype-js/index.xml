<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Prototype Js on KALPESH MEHTA</title>
    <link>http://localhost:1313/blog/prototype-js/</link>
    <description>Recent content in Prototype Js on KALPESH MEHTA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>k@lpe.sh (Kalpesh Mehta)</managingEditor>
    <webMaster>k@lpe.sh (Kalpesh Mehta)</webMaster>
    <copyright>Copyright © 2025 kalpesh mehta</copyright>
    <lastBuildDate>Sat, 01 Jun 2013 20:37:42 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/blog/prototype-js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>jQuery Prototype conflict, resolve it using noconflict</title>
      <link>http://localhost:1313/jquery-prototype-conflict-resolve-it-using-noconflict/</link>
      <pubDate>Sat, 01 Jun 2013 20:37:42 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/jquery-prototype-conflict-resolve-it-using-noconflict/</guid>
      <description>&lt;p&gt;It’s difficult to use different javascript libraries in the same page. Because they tend to create conflicts with each other’s code, and often break javascript. One such case is using jQuery and PrototypeJS libraries in the same webpage. Both prototypejs and jquery use $ as their function or variable name which causes issues, as both the libraries will get triggered with that alias.&lt;/p&gt;&#xA;&lt;p&gt;jQuery provides a method which solves this issue, so that you can use any javascript library with jQuery on the same page. This function is called &lt;a href=&#34;http://api.jquery.com/jQuery.noConflict/&#34;&gt;noConflict()&lt;/a&gt;, and it simply uses different symbol/charater(s) you provide rather than dollar ($).&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>It’s difficult to use different javascript libraries in the same page. Because they tend to create conflicts with each other’s code, and often break javascript. One such case is using jQuery and PrototypeJS libraries in the same webpage. Both prototypejs and jquery use $ as their function or variable name which causes issues, as both the libraries will get triggered with that alias.</p>
<p>jQuery provides a method which solves this issue, so that you can use any javascript library with jQuery on the same page. This function is called <a href="http://api.jquery.com/jQuery.noConflict/">noConflict()</a>, and it simply uses different symbol/charater(s) you provide rather than dollar ($).</p>
<p>Below code will help you to understand this and you can use it to resolve conflicts between different javascript libraries used when using jQuery on the same page.</p>




<div class="highlight"><pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-js" data-lang="js"><span style="display:flex;"><span><span style="color:#666">&lt;</span>script src<span style="color:#666">=</span><span style="color:#b44">&#34;prototype.js&#34;</span> type<span style="color:#666">=</span><span style="color:#b44">&#34;text/javascript&#34;</span><span style="color:#666">&gt;&lt;</span><span style="">/script&gt;  </span>
</span></span><span style="display:flex;"><span><span style="color:#666">&lt;</span>script src<span style="color:#666">=</span><span style="color:#b44">&#34;jquery.js&#34;</span> type<span style="color:#666">=</span><span style="color:#b44">&#34;text/javascript&#34;</span><span style="color:#666">&gt;&lt;</span><span style="">/script&gt;  </span>
</span></span><span style="display:flex;"><span><span style="color:#666">&lt;</span>script type<span style="color:#666">=</span><span style="color:#b44">&#34;text/javascript&#34;</span><span style="color:#666">&gt;</span>
</span></span><span style="display:flex;"><span>    <span style="color:#a2f;font-weight:bold">var</span> $j <span style="color:#666">=</span> jQuery.noConflict();
</span></span><span style="display:flex;"><span><span style="color:#666">&lt;</span><span style="">/script&gt;</span></span></span></code></pre></div>
<p>After using the above code, you can use jQuery as $j and PrototypeJS as $.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
