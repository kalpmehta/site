<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Kalpesh Mehta&#39;s Blog</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on Kalpesh Mehta&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <managingEditor>k@lpe.sh (Kalpesh Mehta)</managingEditor>
    <webMaster>k@lpe.sh (Kalpesh Mehta)</webMaster>
    <copyright>Copyright © 2025, Kalpesh Mehta.</copyright>
    <lastBuildDate>Wed, 20 Feb 2013 15:07:57 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Magento: Product Import error &amp;#8211; shows HTML code while importing</title>
      <link>http://localhost:1313/post/2013-02-20-magento-product-import-error-shows-html-code-while-importing/</link>
      <pubDate>Wed, 20 Feb 2013 15:07:57 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/post/2013-02-20-magento-product-import-error-shows-html-code-while-importing/</guid>
      <description>&lt;p&gt;While importing products (somewhere around 1200 rows) by Magento’s in-built “System &amp;gt; Import/Export &amp;gt; Dataflow – Profiles” I got an error where the Dashboard’s HTML was printed in the output.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://ka.lpe.sh/wp-content/uploads/2013/02/import_error.png&#34; alt=&#34;magento product import error&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;The reason for this error is due to something wrong in CSV product data which Magento didn’t understand. Create a temporary CSV file with only few rows (2-4) and check if that works. If it works, that means there is some problem with rest of the data.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>While importing products (somewhere around 1200 rows) by Magento’s in-built “System &gt; Import/Export &gt; Dataflow – Profiles” I got an error where the Dashboard’s HTML was printed in the output.</p>
<p><img src="http://ka.lpe.sh/wp-content/uploads/2013/02/import_error.png" alt="magento product import error"></p>
<p>The reason for this error is due to something wrong in CSV product data which Magento didn’t understand. Create a temporary CSV file with only few rows (2-4) and check if that works. If it works, that means there is some problem with rest of the data.</p>
<p>For more information check my SO question here: <a href="http://stackoverflow.com/questions/14978970/magento-importing-product-error/14980974">http://stackoverflow.com/questions/14978970/magento-importing-product-error/14980974</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Magento: Reset download limit for downloadable product item/order</title>
      <link>http://localhost:1313/post/2013-02-20-magento-reset-download-limit-for-downloadable-product-item-order/</link>
      <pubDate>Wed, 20 Feb 2013 08:21:32 +0000</pubDate><author>k@lpe.sh (Kalpesh Mehta)</author>
      <guid>http://localhost:1313/post/2013-02-20-magento-reset-download-limit-for-downloadable-product-item-order/</guid>
      <description>&lt;p&gt;In Magento, downloadable products are the products which can be downloaded and does not require any shipping. When customer purchases this type of products, they get certain download limits to download their purchased items. This can be set in Products page in admin under “Downloadable Products” tab. In many cases store owner only want to give certain amount of downloads, so customers can’t download beyond that limit. But it may happen that due to bad internet or some interrupts downloads can’t be successful and customer want to reset that limit. For doing this, there is no option in backend to reset the download limits for the downloadable product items or for an entire order, and unfortunately admin use to re-order to achieve this.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In Magento, downloadable products are the products which can be downloaded and does not require any shipping. When customer purchases this type of products, they get certain download limits to download their purchased items. This can be set in Products page in admin under “Downloadable Products” tab. In many cases store owner only want to give certain amount of downloads, so customers can’t download beyond that limit. But it may happen that due to bad internet or some interrupts downloads can’t be successful and customer want to reset that limit. For doing this, there is no option in backend to reset the download limits for the downloadable product items or for an entire order, and unfortunately admin use to re-order to achieve this.</p>
<p>Here is the query which will reset download limits for an entire order.<br>
{code type=php}$q = Mage::getModel(‘sales/order_item’)-&gt;getCollection()-&gt;addFieldToSelect(‘order_id’);<br>
$q-&gt;getSelect()-&gt;joinRight(‘downloadable_link_purchased_item as d’, ‘main_table.item_id = d.order_item_id’,<br>
array(‘item_id’,’number_of_downloads_used’));<br>
$q-&gt;getSelect()-&gt;where(‘main_table.order_id = ‘. (int)$orderId);<br>
$q-&gt;load();</p>
<p>//echo $q-&gt;getSelect()-&gt;__toString();exit;</p>
<p>$items = $q-&gt;getColumnValues(‘item_id’);<br>
foreach($items as $id) {<br>
Mage::getModel(‘downloadable/link_purchased_item’)-&gt;load($id)<br>
-&gt;setStatus(‘available’)-&gt;setNumberOfDownloadsUsed(0)-&gt;save();<br>
}{/code}</p>
<p>The raw SQL query for the above Magento Convention query is:<br>
UPDATE sales_flat_order_item s RIGHT JOIN downloadable_link_purchased_item d ON s.item_id = d.order_item_id SET d.number_of_downloads_used = 0 WHERE s.order_id = $orderId;</p>
<p>Here is another query that will allow you to reset download limits for a particular item in an order<br>
{code type=php}$q = Mage::getModel(‘sales/order_item’)-&gt;getCollection()-&gt;addFieldToSelect(‘order_id’);<br>
$q-&gt;getSelect()-&gt;joinRight(‘downloadable_link_purchased_item as d’, ‘main_table.item_id = d.order_item_id’,<br>
array(‘item_id’,’number_of_downloads_used’));<br>
$q-&gt;getSelect()-&gt;where(‘main_table.order_id = ‘. (int)$orderId .’ AND main_table.item_id = ‘. (int)$orderItemId);<br>
$q-&gt;load();</p>
<p>//echo $q-&gt;getSelect()-&gt;__toString();exit;</p>
<p>$items = $q-&gt;getColumnValues(‘item_id’);<br>
foreach($items as $id) {<br>
Mage::getModel(‘downloadable/link_purchased_item’)-&gt;load($id)<br>
-&gt;setStatus(‘available’)-&gt;setNumberOfDownloadsUsed(0)-&gt;save();<br>
}{/code}</p>
<p>The raw SQL query for the above Magento Convention query is:<br>
UPDATE sales_flat_order_item s RIGHT JOIN downloadable_link_purchased_item d ON s.item_id = d.order_item_id SET d.number_of_downloads_used = 0 WHERE s.order_id = $orderId AND s.item_id = $orderItemId;</p>
<p>HTH!</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
